/*
 * An XML document type.
 * Localname: SCIMessages
 * Namespace: 
 * Java type: com.stanchart.customer.SCIMessagesDocument
 *
 * Automatically generated - do not modify.
 */
package com.stanchart.customer.impl;
/**
 * A document containing one SCIMessages(@) element.
 *
 * This is a complex type.
 */
public class SCIMessagesDocumentImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument
{
    private static final long serialVersionUID = 1L;
    
    public SCIMessagesDocumentImpl(org.apache.xmlbeans.SchemaType sType)
    {
        super(sType);
    }
    
    private static final javax.xml.namespace.QName SCIMESSAGES$0 = 
        new javax.xml.namespace.QName("", "SCIMessages");
    
    
    /**
     * Gets the "SCIMessages" element
     */
    public com.stanchart.customer.SCIMessagesDocument.SCIMessages getSCIMessages()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.stanchart.customer.SCIMessagesDocument.SCIMessages target = null;
            target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages)get_store().find_element_user(SCIMESSAGES$0, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * Sets the "SCIMessages" element
     */
    public void setSCIMessages(com.stanchart.customer.SCIMessagesDocument.SCIMessages sciMessages)
    {
        generatedSetterHelperImpl(sciMessages, SCIMESSAGES$0, 0, org.apache.xmlbeans.impl.values.XmlObjectBase.KIND_SETTERHELPER_SINGLETON);
    }
    
    /**
     * Appends and returns a new empty "SCIMessages" element
     */
    public com.stanchart.customer.SCIMessagesDocument.SCIMessages addNewSCIMessages()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.stanchart.customer.SCIMessagesDocument.SCIMessages target = null;
            target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages)get_store().add_element_user(SCIMESSAGES$0);
            return target;
        }
    }
    /**
     * An XML SCIMessages(@).
     *
     * This is a complex type.
     */
    public static class SCIMessagesImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages
    {
        private static final long serialVersionUID = 1L;
        
        public SCIMessagesImpl(org.apache.xmlbeans.SchemaType sType)
        {
            super(sType);
        }
        
        private static final javax.xml.namespace.QName ADDRESSTYPE$0 = 
            new javax.xml.namespace.QName("", "addressType");
        private static final javax.xml.namespace.QName INSTRUCTIONREFTYPE$2 = 
            new javax.xml.namespace.QName("", "instructionRefType");
        private static final javax.xml.namespace.QName INSTRUCTIONBOOKINGLOCATION$4 = 
            new javax.xml.namespace.QName("", "instructionBookingLocation");
        private static final javax.xml.namespace.QName SYSTEMXREFLOCATION$6 = 
            new javax.xml.namespace.QName("", "systemXRefLocation");
        private static final javax.xml.namespace.QName EXTERNALSYSTEM$8 = 
            new javax.xml.namespace.QName("", "externalSystem");
        private static final javax.xml.namespace.QName EXTERNALCUSTDETAIL$10 = 
            new javax.xml.namespace.QName("", "externalCustDetail");
        private static final javax.xml.namespace.QName SECURITYLOCATION$12 = 
            new javax.xml.namespace.QName("", "securityLocation");
        private static final javax.xml.namespace.QName SECURITYTYPE$14 = 
            new javax.xml.namespace.QName("", "securityType");
        private static final javax.xml.namespace.QName SECURITYSUBTYPE$16 = 
            new javax.xml.namespace.QName("", "securitySubType");
        private static final javax.xml.namespace.QName COMISISMHDR$18 = 
            new javax.xml.namespace.QName("", "com_isis_mhdr");
        private static final javax.xml.namespace.QName MESSAGE$20 = 
            new javax.xml.namespace.QName("", "message");
        
        
        /**
         * Gets array of all "addressType" elements
         */
        public com.stanchart.customer.AddressTypeDocument.AddressType[] getAddressTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(ADDRESSTYPE$0, targetList);
                com.stanchart.customer.AddressTypeDocument.AddressType[] result = new com.stanchart.customer.AddressTypeDocument.AddressType[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "addressType" element
         */
        public com.stanchart.customer.AddressTypeDocument.AddressType getAddressTypeArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "addressType" element
         */
        public int sizeOfAddressTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(ADDRESSTYPE$0);
            }
        }
        
        /**
         * Sets array of all "addressType" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setAddressTypeArray(com.stanchart.customer.AddressTypeDocument.AddressType[] addressTypeArray)
        {
            check_orphaned();
            arraySetterHelper(addressTypeArray, ADDRESSTYPE$0);
        }
        
        /**
         * Sets ith "addressType" element
         */
        public void setAddressTypeArray(int i, com.stanchart.customer.AddressTypeDocument.AddressType addressType)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(addressType);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "addressType" element
         */
        public com.stanchart.customer.AddressTypeDocument.AddressType insertNewAddressType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().insert_element_user(ADDRESSTYPE$0, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "addressType" element
         */
        public com.stanchart.customer.AddressTypeDocument.AddressType addNewAddressType()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().add_element_user(ADDRESSTYPE$0);
                return target;
            }
        }
        
        /**
         * Removes the ith "addressType" element
         */
        public void removeAddressType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(ADDRESSTYPE$0, i);
            }
        }
        
        /**
         * Gets array of all "instructionRefType" elements
         */
        public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] getInstructionRefTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(INSTRUCTIONREFTYPE$2, targetList);
                com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] result = new com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "instructionRefType" element
         */
        public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType getInstructionRefTypeArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$2, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "instructionRefType" element
         */
        public int sizeOfInstructionRefTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(INSTRUCTIONREFTYPE$2);
            }
        }
        
        /**
         * Sets array of all "instructionRefType" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setInstructionRefTypeArray(com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] instructionRefTypeArray)
        {
            check_orphaned();
            arraySetterHelper(instructionRefTypeArray, INSTRUCTIONREFTYPE$2);
        }
        
        /**
         * Sets ith "instructionRefType" element
         */
        public void setInstructionRefTypeArray(int i, com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType instructionRefType)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$2, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(instructionRefType);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "instructionRefType" element
         */
        public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType insertNewInstructionRefType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().insert_element_user(INSTRUCTIONREFTYPE$2, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "instructionRefType" element
         */
        public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType addNewInstructionRefType()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().add_element_user(INSTRUCTIONREFTYPE$2);
                return target;
            }
        }
        
        /**
         * Removes the ith "instructionRefType" element
         */
        public void removeInstructionRefType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(INSTRUCTIONREFTYPE$2, i);
            }
        }
        
        /**
         * Gets array of all "instructionBookingLocation" elements
         */
        public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] getInstructionBookingLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(INSTRUCTIONBOOKINGLOCATION$4, targetList);
                com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] result = new com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "instructionBookingLocation" element
         */
        public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation getInstructionBookingLocationArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$4, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "instructionBookingLocation" element
         */
        public int sizeOfInstructionBookingLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(INSTRUCTIONBOOKINGLOCATION$4);
            }
        }
        
        /**
         * Sets array of all "instructionBookingLocation" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setInstructionBookingLocationArray(com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] instructionBookingLocationArray)
        {
            check_orphaned();
            arraySetterHelper(instructionBookingLocationArray, INSTRUCTIONBOOKINGLOCATION$4);
        }
        
        /**
         * Sets ith "instructionBookingLocation" element
         */
        public void setInstructionBookingLocationArray(int i, com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation instructionBookingLocation)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$4, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(instructionBookingLocation);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "instructionBookingLocation" element
         */
        public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation insertNewInstructionBookingLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().insert_element_user(INSTRUCTIONBOOKINGLOCATION$4, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "instructionBookingLocation" element
         */
        public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation addNewInstructionBookingLocation()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().add_element_user(INSTRUCTIONBOOKINGLOCATION$4);
                return target;
            }
        }
        
        /**
         * Removes the ith "instructionBookingLocation" element
         */
        public void removeInstructionBookingLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(INSTRUCTIONBOOKINGLOCATION$4, i);
            }
        }
        
        /**
         * Gets array of all "systemXRefLocation" elements
         */
        public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] getSystemXRefLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(SYSTEMXREFLOCATION$6, targetList);
                com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] result = new com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "systemXRefLocation" element
         */
        public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation getSystemXRefLocationArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$6, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "systemXRefLocation" element
         */
        public int sizeOfSystemXRefLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(SYSTEMXREFLOCATION$6);
            }
        }
        
        /**
         * Sets array of all "systemXRefLocation" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setSystemXRefLocationArray(com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] systemXRefLocationArray)
        {
            check_orphaned();
            arraySetterHelper(systemXRefLocationArray, SYSTEMXREFLOCATION$6);
        }
        
        /**
         * Sets ith "systemXRefLocation" element
         */
        public void setSystemXRefLocationArray(int i, com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation systemXRefLocation)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$6, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(systemXRefLocation);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "systemXRefLocation" element
         */
        public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation insertNewSystemXRefLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().insert_element_user(SYSTEMXREFLOCATION$6, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "systemXRefLocation" element
         */
        public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation addNewSystemXRefLocation()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().add_element_user(SYSTEMXREFLOCATION$6);
                return target;
            }
        }
        
        /**
         * Removes the ith "systemXRefLocation" element
         */
        public void removeSystemXRefLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(SYSTEMXREFLOCATION$6, i);
            }
        }
        
        /**
         * Gets array of all "externalSystem" elements
         */
        public com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] getExternalSystemArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(EXTERNALSYSTEM$8, targetList);
                com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] result = new com.stanchart.customer.ExternalSystemDocument.ExternalSystem[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "externalSystem" element
         */
        public com.stanchart.customer.ExternalSystemDocument.ExternalSystem getExternalSystemArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$8, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "externalSystem" element
         */
        public int sizeOfExternalSystemArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(EXTERNALSYSTEM$8);
            }
        }
        
        /**
         * Sets array of all "externalSystem" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setExternalSystemArray(com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] externalSystemArray)
        {
            check_orphaned();
            arraySetterHelper(externalSystemArray, EXTERNALSYSTEM$8);
        }
        
        /**
         * Sets ith "externalSystem" element
         */
        public void setExternalSystemArray(int i, com.stanchart.customer.ExternalSystemDocument.ExternalSystem externalSystem)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$8, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(externalSystem);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "externalSystem" element
         */
        public com.stanchart.customer.ExternalSystemDocument.ExternalSystem insertNewExternalSystem(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().insert_element_user(EXTERNALSYSTEM$8, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "externalSystem" element
         */
        public com.stanchart.customer.ExternalSystemDocument.ExternalSystem addNewExternalSystem()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().add_element_user(EXTERNALSYSTEM$8);
                return target;
            }
        }
        
        /**
         * Removes the ith "externalSystem" element
         */
        public void removeExternalSystem(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(EXTERNALSYSTEM$8, i);
            }
        }
        
        /**
         * Gets array of all "externalCustDetail" elements
         */
        public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] getExternalCustDetailArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(EXTERNALCUSTDETAIL$10, targetList);
                com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] result = new com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "externalCustDetail" element
         */
        public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail getExternalCustDetailArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$10, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "externalCustDetail" element
         */
        public int sizeOfExternalCustDetailArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(EXTERNALCUSTDETAIL$10);
            }
        }
        
        /**
         * Sets array of all "externalCustDetail" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setExternalCustDetailArray(com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] externalCustDetailArray)
        {
            check_orphaned();
            arraySetterHelper(externalCustDetailArray, EXTERNALCUSTDETAIL$10);
        }
        
        /**
         * Sets ith "externalCustDetail" element
         */
        public void setExternalCustDetailArray(int i, com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail externalCustDetail)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$10, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(externalCustDetail);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "externalCustDetail" element
         */
        public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail insertNewExternalCustDetail(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().insert_element_user(EXTERNALCUSTDETAIL$10, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "externalCustDetail" element
         */
        public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail addNewExternalCustDetail()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().add_element_user(EXTERNALCUSTDETAIL$10);
                return target;
            }
        }
        
        /**
         * Removes the ith "externalCustDetail" element
         */
        public void removeExternalCustDetail(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(EXTERNALCUSTDETAIL$10, i);
            }
        }
        
        /**
         * Gets array of all "securityLocation" elements
         */
        public com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] getSecurityLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(SECURITYLOCATION$12, targetList);
                com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] result = new com.stanchart.customer.SecurityLocationDocument.SecurityLocation[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "securityLocation" element
         */
        public com.stanchart.customer.SecurityLocationDocument.SecurityLocation getSecurityLocationArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$12, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "securityLocation" element
         */
        public int sizeOfSecurityLocationArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(SECURITYLOCATION$12);
            }
        }
        
        /**
         * Sets array of all "securityLocation" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setSecurityLocationArray(com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] securityLocationArray)
        {
            check_orphaned();
            arraySetterHelper(securityLocationArray, SECURITYLOCATION$12);
        }
        
        /**
         * Sets ith "securityLocation" element
         */
        public void setSecurityLocationArray(int i, com.stanchart.customer.SecurityLocationDocument.SecurityLocation securityLocation)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$12, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(securityLocation);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "securityLocation" element
         */
        public com.stanchart.customer.SecurityLocationDocument.SecurityLocation insertNewSecurityLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().insert_element_user(SECURITYLOCATION$12, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "securityLocation" element
         */
        public com.stanchart.customer.SecurityLocationDocument.SecurityLocation addNewSecurityLocation()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().add_element_user(SECURITYLOCATION$12);
                return target;
            }
        }
        
        /**
         * Removes the ith "securityLocation" element
         */
        public void removeSecurityLocation(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(SECURITYLOCATION$12, i);
            }
        }
        
        /**
         * Gets array of all "securityType" elements
         */
        public com.stanchart.customer.SecurityTypeDocument.SecurityType[] getSecurityTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(SECURITYTYPE$14, targetList);
                com.stanchart.customer.SecurityTypeDocument.SecurityType[] result = new com.stanchart.customer.SecurityTypeDocument.SecurityType[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "securityType" element
         */
        public com.stanchart.customer.SecurityTypeDocument.SecurityType getSecurityTypeArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$14, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "securityType" element
         */
        public int sizeOfSecurityTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(SECURITYTYPE$14);
            }
        }
        
        /**
         * Sets array of all "securityType" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setSecurityTypeArray(com.stanchart.customer.SecurityTypeDocument.SecurityType[] securityTypeArray)
        {
            check_orphaned();
            arraySetterHelper(securityTypeArray, SECURITYTYPE$14);
        }
        
        /**
         * Sets ith "securityType" element
         */
        public void setSecurityTypeArray(int i, com.stanchart.customer.SecurityTypeDocument.SecurityType securityType)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$14, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(securityType);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "securityType" element
         */
        public com.stanchart.customer.SecurityTypeDocument.SecurityType insertNewSecurityType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().insert_element_user(SECURITYTYPE$14, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "securityType" element
         */
        public com.stanchart.customer.SecurityTypeDocument.SecurityType addNewSecurityType()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().add_element_user(SECURITYTYPE$14);
                return target;
            }
        }
        
        /**
         * Removes the ith "securityType" element
         */
        public void removeSecurityType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(SECURITYTYPE$14, i);
            }
        }
        
        /**
         * Gets array of all "securitySubType" elements
         */
        public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] getSecuritySubTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(SECURITYSUBTYPE$16, targetList);
                com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] result = new com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "securitySubType" element
         */
        public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType getSecuritySubTypeArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$16, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "securitySubType" element
         */
        public int sizeOfSecuritySubTypeArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(SECURITYSUBTYPE$16);
            }
        }
        
        /**
         * Sets array of all "securitySubType" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setSecuritySubTypeArray(com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] securitySubTypeArray)
        {
            check_orphaned();
            arraySetterHelper(securitySubTypeArray, SECURITYSUBTYPE$16);
        }
        
        /**
         * Sets ith "securitySubType" element
         */
        public void setSecuritySubTypeArray(int i, com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType securitySubType)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$16, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(securitySubType);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "securitySubType" element
         */
        public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType insertNewSecuritySubType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().insert_element_user(SECURITYSUBTYPE$16, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "securitySubType" element
         */
        public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType addNewSecuritySubType()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().add_element_user(SECURITYSUBTYPE$16);
                return target;
            }
        }
        
        /**
         * Removes the ith "securitySubType" element
         */
        public void removeSecuritySubType(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(SECURITYSUBTYPE$16, i);
            }
        }
        
        /**
         * Gets array of all "com_isis_mhdr" elements
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr[] getComIsisMhdrArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(COMISISMHDR$18, targetList);
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "com_isis_mhdr" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr getComIsisMhdrArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr)get_store().find_element_user(COMISISMHDR$18, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "com_isis_mhdr" element
         */
        public int sizeOfComIsisMhdrArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(COMISISMHDR$18);
            }
        }
        
        /**
         * Sets array of all "com_isis_mhdr" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setComIsisMhdrArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr[] comIsisMhdrArray)
        {
            check_orphaned();
            arraySetterHelper(comIsisMhdrArray, COMISISMHDR$18);
        }
        
        /**
         * Sets ith "com_isis_mhdr" element
         */
        public void setComIsisMhdrArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr comIsisMhdr)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr)get_store().find_element_user(COMISISMHDR$18, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(comIsisMhdr);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "com_isis_mhdr" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr insertNewComIsisMhdr(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr)get_store().insert_element_user(COMISISMHDR$18, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "com_isis_mhdr" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr addNewComIsisMhdr()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr)get_store().add_element_user(COMISISMHDR$18);
                return target;
            }
        }
        
        /**
         * Removes the ith "com_isis_mhdr" element
         */
        public void removeComIsisMhdr(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(COMISISMHDR$18, i);
            }
        }
        
        /**
         * Gets array of all "message" elements
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message[] getMessageArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(MESSAGE$20, targetList);
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "message" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message getMessageArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message)get_store().find_element_user(MESSAGE$20, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "message" element
         */
        public int sizeOfMessageArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(MESSAGE$20);
            }
        }
        
        /**
         * Sets array of all "message" element  WARNING: This method is not atomicaly synchronized.
         */
        public void setMessageArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message[] messageArray)
        {
            check_orphaned();
            arraySetterHelper(messageArray, MESSAGE$20);
        }
        
        /**
         * Sets ith "message" element
         */
        public void setMessageArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message message)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message)get_store().find_element_user(MESSAGE$20, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(message);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "message" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message insertNewMessage(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message)get_store().insert_element_user(MESSAGE$20, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "message" element
         */
        public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message addNewMessage()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message target = null;
                target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message)get_store().add_element_user(MESSAGE$20);
                return target;
            }
        }
        
        /**
         * Removes the ith "message" element
         */
        public void removeMessage(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(MESSAGE$20, i);
            }
        }
        /**
         * An XML com_isis_mhdr(@).
         *
         * This is a complex type.
         */
        public static class ComIsisMhdrImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr
        {
            private static final long serialVersionUID = 1L;
            
            public ComIsisMhdrImpl(org.apache.xmlbeans.SchemaType sType)
            {
                super(sType);
            }
            
            private static final javax.xml.namespace.QName VERID$0 = 
                new javax.xml.namespace.QName("", "VerId");
            private static final javax.xml.namespace.QName HDRLST$2 = 
                new javax.xml.namespace.QName("", "HdrLst");
            private static final javax.xml.namespace.QName SRCLST$4 = 
                new javax.xml.namespace.QName("", "SrcLst");
            private static final javax.xml.namespace.QName ADAPTERUSRIDLST$6 = 
                new javax.xml.namespace.QName("", "AdapterUsrIdLst");
            private static final javax.xml.namespace.QName RCNCLLST$8 = 
                new javax.xml.namespace.QName("", "RcnclLst");
            private static final javax.xml.namespace.QName MSGTP$10 = 
                new javax.xml.namespace.QName("", "MsgTp");
            private static final javax.xml.namespace.QName APPLMSGUUID$12 = 
                new javax.xml.namespace.QName("", "ApplMsgUUId");
            private static final javax.xml.namespace.QName APPLKEYLST$14 = 
                new javax.xml.namespace.QName("", "ApplKeyLst");
            private static final javax.xml.namespace.QName MSGUUID$16 = 
                new javax.xml.namespace.QName("", "MsgUUId");
            private static final javax.xml.namespace.QName USRTXT$18 = 
                new javax.xml.namespace.QName("", "UsrTxt");
            
            
            /**
             * Gets the "VerId" element
             */
            public java.lang.String getVerId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(VERID$0, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "VerId" element
             */
            public org.apache.xmlbeans.XmlString xgetVerId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(VERID$0, 0);
                    return target;
                }
            }
            
            /**
             * True if has "VerId" element
             */
            public boolean isSetVerId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(VERID$0) != 0;
                }
            }
            
            /**
             * Sets the "VerId" element
             */
            public void setVerId(java.lang.String verId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(VERID$0, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(VERID$0);
                    }
                    target.setStringValue(verId);
                }
            }
            
            /**
             * Sets (as xml) the "VerId" element
             */
            public void xsetVerId(org.apache.xmlbeans.XmlString verId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(VERID$0, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(VERID$0);
                    }
                    target.set(verId);
                }
            }
            
            /**
             * Unsets the "VerId" element
             */
            public void unsetVerId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(VERID$0, 0);
                }
            }
            
            /**
             * Gets array of all "HdrLst" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst[] getHdrLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(HDRLST$2, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "HdrLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst getHdrLstArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst)get_store().find_element_user(HDRLST$2, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "HdrLst" element
             */
            public int sizeOfHdrLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(HDRLST$2);
                }
            }
            
            /**
             * Sets array of all "HdrLst" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setHdrLstArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst[] hdrLstArray)
            {
                check_orphaned();
                arraySetterHelper(hdrLstArray, HDRLST$2);
            }
            
            /**
             * Sets ith "HdrLst" element
             */
            public void setHdrLstArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst hdrLst)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst)get_store().find_element_user(HDRLST$2, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(hdrLst);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "HdrLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst insertNewHdrLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst)get_store().insert_element_user(HDRLST$2, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "HdrLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst addNewHdrLst()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst)get_store().add_element_user(HDRLST$2);
                    return target;
                }
            }
            
            /**
             * Removes the ith "HdrLst" element
             */
            public void removeHdrLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(HDRLST$2, i);
                }
            }
            
            /**
             * Gets array of all "SrcLst" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst[] getSrcLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(SRCLST$4, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "SrcLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst getSrcLstArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst)get_store().find_element_user(SRCLST$4, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "SrcLst" element
             */
            public int sizeOfSrcLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(SRCLST$4);
                }
            }
            
            /**
             * Sets array of all "SrcLst" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setSrcLstArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst[] srcLstArray)
            {
                check_orphaned();
                arraySetterHelper(srcLstArray, SRCLST$4);
            }
            
            /**
             * Sets ith "SrcLst" element
             */
            public void setSrcLstArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst srcLst)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst)get_store().find_element_user(SRCLST$4, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(srcLst);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "SrcLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst insertNewSrcLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst)get_store().insert_element_user(SRCLST$4, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "SrcLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst addNewSrcLst()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst)get_store().add_element_user(SRCLST$4);
                    return target;
                }
            }
            
            /**
             * Removes the ith "SrcLst" element
             */
            public void removeSrcLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(SRCLST$4, i);
                }
            }
            
            /**
             * Gets array of all "AdapterUsrIdLst" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst[] getAdapterUsrIdLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(ADAPTERUSRIDLST$6, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "AdapterUsrIdLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst getAdapterUsrIdLstArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst)get_store().find_element_user(ADAPTERUSRIDLST$6, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "AdapterUsrIdLst" element
             */
            public int sizeOfAdapterUsrIdLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(ADAPTERUSRIDLST$6);
                }
            }
            
            /**
             * Sets array of all "AdapterUsrIdLst" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setAdapterUsrIdLstArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst[] adapterUsrIdLstArray)
            {
                check_orphaned();
                arraySetterHelper(adapterUsrIdLstArray, ADAPTERUSRIDLST$6);
            }
            
            /**
             * Sets ith "AdapterUsrIdLst" element
             */
            public void setAdapterUsrIdLstArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst adapterUsrIdLst)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst)get_store().find_element_user(ADAPTERUSRIDLST$6, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(adapterUsrIdLst);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "AdapterUsrIdLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst insertNewAdapterUsrIdLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst)get_store().insert_element_user(ADAPTERUSRIDLST$6, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "AdapterUsrIdLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst addNewAdapterUsrIdLst()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst)get_store().add_element_user(ADAPTERUSRIDLST$6);
                    return target;
                }
            }
            
            /**
             * Removes the ith "AdapterUsrIdLst" element
             */
            public void removeAdapterUsrIdLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(ADAPTERUSRIDLST$6, i);
                }
            }
            
            /**
             * Gets array of all "RcnclLst" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst[] getRcnclLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(RCNCLLST$8, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "RcnclLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst getRcnclLstArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst)get_store().find_element_user(RCNCLLST$8, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "RcnclLst" element
             */
            public int sizeOfRcnclLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(RCNCLLST$8);
                }
            }
            
            /**
             * Sets array of all "RcnclLst" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setRcnclLstArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst[] rcnclLstArray)
            {
                check_orphaned();
                arraySetterHelper(rcnclLstArray, RCNCLLST$8);
            }
            
            /**
             * Sets ith "RcnclLst" element
             */
            public void setRcnclLstArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst rcnclLst)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst)get_store().find_element_user(RCNCLLST$8, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(rcnclLst);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "RcnclLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst insertNewRcnclLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst)get_store().insert_element_user(RCNCLLST$8, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "RcnclLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst addNewRcnclLst()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst)get_store().add_element_user(RCNCLLST$8);
                    return target;
                }
            }
            
            /**
             * Removes the ith "RcnclLst" element
             */
            public void removeRcnclLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(RCNCLLST$8, i);
                }
            }
            
            /**
             * Gets the "MsgTp" element
             */
            public java.lang.String getMsgTp()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MSGTP$10, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "MsgTp" element
             */
            public org.apache.xmlbeans.XmlString xgetMsgTp()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MSGTP$10, 0);
                    return target;
                }
            }
            
            /**
             * True if has "MsgTp" element
             */
            public boolean isSetMsgTp()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(MSGTP$10) != 0;
                }
            }
            
            /**
             * Sets the "MsgTp" element
             */
            public void setMsgTp(java.lang.String msgTp)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MSGTP$10, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MSGTP$10);
                    }
                    target.setStringValue(msgTp);
                }
            }
            
            /**
             * Sets (as xml) the "MsgTp" element
             */
            public void xsetMsgTp(org.apache.xmlbeans.XmlString msgTp)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MSGTP$10, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MSGTP$10);
                    }
                    target.set(msgTp);
                }
            }
            
            /**
             * Unsets the "MsgTp" element
             */
            public void unsetMsgTp()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(MSGTP$10, 0);
                }
            }
            
            /**
             * Gets the "ApplMsgUUId" element
             */
            public java.lang.String getApplMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLMSGUUID$12, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "ApplMsgUUId" element
             */
            public org.apache.xmlbeans.XmlString xgetApplMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLMSGUUID$12, 0);
                    return target;
                }
            }
            
            /**
             * True if has "ApplMsgUUId" element
             */
            public boolean isSetApplMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(APPLMSGUUID$12) != 0;
                }
            }
            
            /**
             * Sets the "ApplMsgUUId" element
             */
            public void setApplMsgUUId(java.lang.String applMsgUUId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLMSGUUID$12, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPLMSGUUID$12);
                    }
                    target.setStringValue(applMsgUUId);
                }
            }
            
            /**
             * Sets (as xml) the "ApplMsgUUId" element
             */
            public void xsetApplMsgUUId(org.apache.xmlbeans.XmlString applMsgUUId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLMSGUUID$12, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPLMSGUUID$12);
                    }
                    target.set(applMsgUUId);
                }
            }
            
            /**
             * Unsets the "ApplMsgUUId" element
             */
            public void unsetApplMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(APPLMSGUUID$12, 0);
                }
            }
            
            /**
             * Gets array of all "ApplKeyLst" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst[] getApplKeyLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(APPLKEYLST$14, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "ApplKeyLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst getApplKeyLstArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst)get_store().find_element_user(APPLKEYLST$14, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "ApplKeyLst" element
             */
            public int sizeOfApplKeyLstArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(APPLKEYLST$14);
                }
            }
            
            /**
             * Sets array of all "ApplKeyLst" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setApplKeyLstArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst[] applKeyLstArray)
            {
                check_orphaned();
                arraySetterHelper(applKeyLstArray, APPLKEYLST$14);
            }
            
            /**
             * Sets ith "ApplKeyLst" element
             */
            public void setApplKeyLstArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst applKeyLst)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst)get_store().find_element_user(APPLKEYLST$14, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(applKeyLst);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "ApplKeyLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst insertNewApplKeyLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst)get_store().insert_element_user(APPLKEYLST$14, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "ApplKeyLst" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst addNewApplKeyLst()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst)get_store().add_element_user(APPLKEYLST$14);
                    return target;
                }
            }
            
            /**
             * Removes the ith "ApplKeyLst" element
             */
            public void removeApplKeyLst(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(APPLKEYLST$14, i);
                }
            }
            
            /**
             * Gets the "MsgUUId" element
             */
            public java.lang.String getMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MSGUUID$16, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "MsgUUId" element
             */
            public org.apache.xmlbeans.XmlString xgetMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MSGUUID$16, 0);
                    return target;
                }
            }
            
            /**
             * True if has "MsgUUId" element
             */
            public boolean isSetMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(MSGUUID$16) != 0;
                }
            }
            
            /**
             * Sets the "MsgUUId" element
             */
            public void setMsgUUId(java.lang.String msgUUId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MSGUUID$16, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MSGUUID$16);
                    }
                    target.setStringValue(msgUUId);
                }
            }
            
            /**
             * Sets (as xml) the "MsgUUId" element
             */
            public void xsetMsgUUId(org.apache.xmlbeans.XmlString msgUUId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MSGUUID$16, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MSGUUID$16);
                    }
                    target.set(msgUUId);
                }
            }
            
            /**
             * Unsets the "MsgUUId" element
             */
            public void unsetMsgUUId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(MSGUUID$16, 0);
                }
            }
            
            /**
             * Gets the "UsrTxt" element
             */
            public java.lang.String getUsrTxt()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USRTXT$18, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "UsrTxt" element
             */
            public org.apache.xmlbeans.XmlString xgetUsrTxt()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USRTXT$18, 0);
                    return target;
                }
            }
            
            /**
             * True if has "UsrTxt" element
             */
            public boolean isSetUsrTxt()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(USRTXT$18) != 0;
                }
            }
            
            /**
             * Sets the "UsrTxt" element
             */
            public void setUsrTxt(java.lang.String usrTxt)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USRTXT$18, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(USRTXT$18);
                    }
                    target.setStringValue(usrTxt);
                }
            }
            
            /**
             * Sets (as xml) the "UsrTxt" element
             */
            public void xsetUsrTxt(org.apache.xmlbeans.XmlString usrTxt)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USRTXT$18, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(USRTXT$18);
                    }
                    target.set(usrTxt);
                }
            }
            
            /**
             * Unsets the "UsrTxt" element
             */
            public void unsetUsrTxt()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(USRTXT$18, 0);
                }
            }
            /**
             * An XML HdrLst(@).
             *
             * This is a complex type.
             */
            public static class HdrLstImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.HdrLst
            {
                private static final long serialVersionUID = 1L;
                
                public HdrLstImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName ERRHDRF$0 = 
                    new javax.xml.namespace.QName("", "ErrHdrF");
                private static final javax.xml.namespace.QName AUDTHDRF$2 = 
                    new javax.xml.namespace.QName("", "AudtHdrF");
                private static final javax.xml.namespace.QName TRCHDRF$4 = 
                    new javax.xml.namespace.QName("", "TrcHdrF");
                private static final javax.xml.namespace.QName ERRPAYLOADF$6 = 
                    new javax.xml.namespace.QName("", "ErrPayloadF");
                
                
                /**
                 * Gets the "ErrHdrF" element
                 */
                public java.lang.String getErrHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ERRHDRF$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "ErrHdrF" element
                 */
                public org.apache.xmlbeans.XmlString xgetErrHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ERRHDRF$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "ErrHdrF" element
                 */
                public boolean isSetErrHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(ERRHDRF$0) != 0;
                    }
                }
                
                /**
                 * Sets the "ErrHdrF" element
                 */
                public void setErrHdrF(java.lang.String errHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ERRHDRF$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ERRHDRF$0);
                      }
                      target.setStringValue(errHdrF);
                    }
                }
                
                /**
                 * Sets (as xml) the "ErrHdrF" element
                 */
                public void xsetErrHdrF(org.apache.xmlbeans.XmlString errHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ERRHDRF$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ERRHDRF$0);
                      }
                      target.set(errHdrF);
                    }
                }
                
                /**
                 * Unsets the "ErrHdrF" element
                 */
                public void unsetErrHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(ERRHDRF$0, 0);
                    }
                }
                
                /**
                 * Gets the "AudtHdrF" element
                 */
                public java.lang.String getAudtHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AUDTHDRF$2, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "AudtHdrF" element
                 */
                public org.apache.xmlbeans.XmlString xgetAudtHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AUDTHDRF$2, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "AudtHdrF" element
                 */
                public boolean isSetAudtHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(AUDTHDRF$2) != 0;
                    }
                }
                
                /**
                 * Sets the "AudtHdrF" element
                 */
                public void setAudtHdrF(java.lang.String audtHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AUDTHDRF$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(AUDTHDRF$2);
                      }
                      target.setStringValue(audtHdrF);
                    }
                }
                
                /**
                 * Sets (as xml) the "AudtHdrF" element
                 */
                public void xsetAudtHdrF(org.apache.xmlbeans.XmlString audtHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AUDTHDRF$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(AUDTHDRF$2);
                      }
                      target.set(audtHdrF);
                    }
                }
                
                /**
                 * Unsets the "AudtHdrF" element
                 */
                public void unsetAudtHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(AUDTHDRF$2, 0);
                    }
                }
                
                /**
                 * Gets the "TrcHdrF" element
                 */
                public java.lang.String getTrcHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TRCHDRF$4, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "TrcHdrF" element
                 */
                public org.apache.xmlbeans.XmlString xgetTrcHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TRCHDRF$4, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "TrcHdrF" element
                 */
                public boolean isSetTrcHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(TRCHDRF$4) != 0;
                    }
                }
                
                /**
                 * Sets the "TrcHdrF" element
                 */
                public void setTrcHdrF(java.lang.String trcHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TRCHDRF$4, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(TRCHDRF$4);
                      }
                      target.setStringValue(trcHdrF);
                    }
                }
                
                /**
                 * Sets (as xml) the "TrcHdrF" element
                 */
                public void xsetTrcHdrF(org.apache.xmlbeans.XmlString trcHdrF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TRCHDRF$4, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(TRCHDRF$4);
                      }
                      target.set(trcHdrF);
                    }
                }
                
                /**
                 * Unsets the "TrcHdrF" element
                 */
                public void unsetTrcHdrF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(TRCHDRF$4, 0);
                    }
                }
                
                /**
                 * Gets the "ErrPayloadF" element
                 */
                public java.lang.String getErrPayloadF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ERRPAYLOADF$6, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "ErrPayloadF" element
                 */
                public org.apache.xmlbeans.XmlString xgetErrPayloadF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ERRPAYLOADF$6, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "ErrPayloadF" element
                 */
                public boolean isSetErrPayloadF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(ERRPAYLOADF$6) != 0;
                    }
                }
                
                /**
                 * Sets the "ErrPayloadF" element
                 */
                public void setErrPayloadF(java.lang.String errPayloadF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ERRPAYLOADF$6, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ERRPAYLOADF$6);
                      }
                      target.setStringValue(errPayloadF);
                    }
                }
                
                /**
                 * Sets (as xml) the "ErrPayloadF" element
                 */
                public void xsetErrPayloadF(org.apache.xmlbeans.XmlString errPayloadF)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ERRPAYLOADF$6, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ERRPAYLOADF$6);
                      }
                      target.set(errPayloadF);
                    }
                }
                
                /**
                 * Unsets the "ErrPayloadF" element
                 */
                public void unsetErrPayloadF()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(ERRPAYLOADF$6, 0);
                    }
                }
            }
            /**
             * An XML SrcLst(@).
             *
             * This is a complex type.
             */
            public static class SrcLstImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.SrcLst
            {
                private static final long serialVersionUID = 1L;
                
                public SrcLstImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName LOCNID$0 = 
                    new javax.xml.namespace.QName("", "LocnId");
                private static final javax.xml.namespace.QName SYSTEMID$2 = 
                    new javax.xml.namespace.QName("", "SystemId");
                
                
                /**
                 * Gets the "LocnId" element
                 */
                public java.lang.String getLocnId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCNID$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "LocnId" element
                 */
                public org.apache.xmlbeans.XmlString xgetLocnId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCNID$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "LocnId" element
                 */
                public boolean isSetLocnId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(LOCNID$0) != 0;
                    }
                }
                
                /**
                 * Sets the "LocnId" element
                 */
                public void setLocnId(java.lang.String locnId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCNID$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCNID$0);
                      }
                      target.setStringValue(locnId);
                    }
                }
                
                /**
                 * Sets (as xml) the "LocnId" element
                 */
                public void xsetLocnId(org.apache.xmlbeans.XmlString locnId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCNID$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCNID$0);
                      }
                      target.set(locnId);
                    }
                }
                
                /**
                 * Unsets the "LocnId" element
                 */
                public void unsetLocnId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(LOCNID$0, 0);
                    }
                }
                
                /**
                 * Gets the "SystemId" element
                 */
                public java.lang.String getSystemId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SYSTEMID$2, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "SystemId" element
                 */
                public org.apache.xmlbeans.XmlString xgetSystemId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SYSTEMID$2, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "SystemId" element
                 */
                public boolean isSetSystemId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(SYSTEMID$2) != 0;
                    }
                }
                
                /**
                 * Sets the "SystemId" element
                 */
                public void setSystemId(java.lang.String systemId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SYSTEMID$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SYSTEMID$2);
                      }
                      target.setStringValue(systemId);
                    }
                }
                
                /**
                 * Sets (as xml) the "SystemId" element
                 */
                public void xsetSystemId(org.apache.xmlbeans.XmlString systemId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SYSTEMID$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SYSTEMID$2);
                      }
                      target.set(systemId);
                    }
                }
                
                /**
                 * Unsets the "SystemId" element
                 */
                public void unsetSystemId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(SYSTEMID$2, 0);
                    }
                }
            }
            /**
             * An XML AdapterUsrIdLst(@).
             *
             * This is a complex type.
             */
            public static class AdapterUsrIdLstImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.AdapterUsrIdLst
            {
                private static final long serialVersionUID = 1L;
                
                public AdapterUsrIdLstImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName USRID$0 = 
                    new javax.xml.namespace.QName("", "UsrId");
                
                
                /**
                 * Gets the "UsrId" element
                 */
                public java.lang.String getUsrId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USRID$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "UsrId" element
                 */
                public org.apache.xmlbeans.XmlString xgetUsrId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USRID$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "UsrId" element
                 */
                public boolean isSetUsrId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(USRID$0) != 0;
                    }
                }
                
                /**
                 * Sets the "UsrId" element
                 */
                public void setUsrId(java.lang.String usrId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USRID$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(USRID$0);
                      }
                      target.setStringValue(usrId);
                    }
                }
                
                /**
                 * Sets (as xml) the "UsrId" element
                 */
                public void xsetUsrId(org.apache.xmlbeans.XmlString usrId)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USRID$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(USRID$0);
                      }
                      target.set(usrId);
                    }
                }
                
                /**
                 * Unsets the "UsrId" element
                 */
                public void unsetUsrId()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(USRID$0, 0);
                    }
                }
            }
            /**
             * An XML RcnclLst(@).
             *
             * This is a complex type.
             */
            public static class RcnclLstImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.RcnclLst
            {
                private static final long serialVersionUID = 1L;
                
                public RcnclLstImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName AMT$0 = 
                    new javax.xml.namespace.QName("", "Amt");
                
                
                /**
                 * Gets the "Amt" element
                 */
                public java.lang.String getAmt()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AMT$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "Amt" element
                 */
                public org.apache.xmlbeans.XmlString xgetAmt()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AMT$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "Amt" element
                 */
                public boolean isSetAmt()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(AMT$0) != 0;
                    }
                }
                
                /**
                 * Sets the "Amt" element
                 */
                public void setAmt(java.lang.String amt)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AMT$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(AMT$0);
                      }
                      target.setStringValue(amt);
                    }
                }
                
                /**
                 * Sets (as xml) the "Amt" element
                 */
                public void xsetAmt(org.apache.xmlbeans.XmlString amt)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AMT$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(AMT$0);
                      }
                      target.set(amt);
                    }
                }
                
                /**
                 * Unsets the "Amt" element
                 */
                public void unsetAmt()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(AMT$0, 0);
                    }
                }
            }
            /**
             * An XML ApplKeyLst(@).
             *
             * This is a complex type.
             */
            public static class ApplKeyLstImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.ComIsisMhdr.ApplKeyLst
            {
                private static final long serialVersionUID = 1L;
                
                public ApplKeyLstImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName APPLKEY$0 = 
                    new javax.xml.namespace.QName("", "ApplKey");
                private static final javax.xml.namespace.QName APPLVAL$2 = 
                    new javax.xml.namespace.QName("", "ApplVal");
                
                
                /**
                 * Gets the "ApplKey" element
                 */
                public java.lang.String getApplKey()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLKEY$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "ApplKey" element
                 */
                public org.apache.xmlbeans.XmlString xgetApplKey()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLKEY$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "ApplKey" element
                 */
                public boolean isSetApplKey()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(APPLKEY$0) != 0;
                    }
                }
                
                /**
                 * Sets the "ApplKey" element
                 */
                public void setApplKey(java.lang.String applKey)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLKEY$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPLKEY$0);
                      }
                      target.setStringValue(applKey);
                    }
                }
                
                /**
                 * Sets (as xml) the "ApplKey" element
                 */
                public void xsetApplKey(org.apache.xmlbeans.XmlString applKey)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLKEY$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPLKEY$0);
                      }
                      target.set(applKey);
                    }
                }
                
                /**
                 * Unsets the "ApplKey" element
                 */
                public void unsetApplKey()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(APPLKEY$0, 0);
                    }
                }
                
                /**
                 * Gets the "ApplVal" element
                 */
                public java.lang.String getApplVal()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLVAL$2, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "ApplVal" element
                 */
                public org.apache.xmlbeans.XmlString xgetApplVal()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLVAL$2, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "ApplVal" element
                 */
                public boolean isSetApplVal()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(APPLVAL$2) != 0;
                    }
                }
                
                /**
                 * Sets the "ApplVal" element
                 */
                public void setApplVal(java.lang.String applVal)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPLVAL$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPLVAL$2);
                      }
                      target.setStringValue(applVal);
                    }
                }
                
                /**
                 * Sets (as xml) the "ApplVal" element
                 */
                public void xsetApplVal(org.apache.xmlbeans.XmlString applVal)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPLVAL$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPLVAL$2);
                      }
                      target.set(applVal);
                    }
                }
                
                /**
                 * Unsets the "ApplVal" element
                 */
                public void unsetApplVal()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(APPLVAL$2, 0);
                    }
                }
            }
        }
        /**
         * An XML message(@).
         *
         * This is a complex type.
         */
        public static class MessageImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message
        {
            private static final long serialVersionUID = 1L;
            
            public MessageImpl(org.apache.xmlbeans.SchemaType sType)
            {
                super(sType);
            }
            
            private static final javax.xml.namespace.QName MESSAGEID$0 = 
                new javax.xml.namespace.QName("", "messageId");
            private static final javax.xml.namespace.QName MESSAGETYPE$2 = 
                new javax.xml.namespace.QName("", "messageType");
            private static final javax.xml.namespace.QName PUBLISHTYPE$4 = 
                new javax.xml.namespace.QName("", "publishType");
            private static final javax.xml.namespace.QName PUBLISHDATE$6 = 
                new javax.xml.namespace.QName("", "publishDate");
            private static final javax.xml.namespace.QName TOPICNAME$8 = 
                new javax.xml.namespace.QName("", "topicName");
            private static final javax.xml.namespace.QName SUBSCRIBERID$10 = 
                new javax.xml.namespace.QName("", "subscriberId");
            private static final javax.xml.namespace.QName TRANSACTIONPROCESSINGSYSTEMS$12 = 
                new javax.xml.namespace.QName("", "transactionProcessingSystems");
            private static final javax.xml.namespace.QName LEGALENTITY$14 = 
                new javax.xml.namespace.QName("", "legalEntity");
            
            
            /**
             * Gets the "messageId" element
             */
            public java.lang.String getMessageId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MESSAGEID$0, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "messageId" element
             */
            public org.apache.xmlbeans.XmlString xgetMessageId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MESSAGEID$0, 0);
                    return target;
                }
            }
            
            /**
             * True if has "messageId" element
             */
            public boolean isSetMessageId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(MESSAGEID$0) != 0;
                }
            }
            
            /**
             * Sets the "messageId" element
             */
            public void setMessageId(java.lang.String messageId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MESSAGEID$0, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MESSAGEID$0);
                    }
                    target.setStringValue(messageId);
                }
            }
            
            /**
             * Sets (as xml) the "messageId" element
             */
            public void xsetMessageId(org.apache.xmlbeans.XmlString messageId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MESSAGEID$0, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MESSAGEID$0);
                    }
                    target.set(messageId);
                }
            }
            
            /**
             * Unsets the "messageId" element
             */
            public void unsetMessageId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(MESSAGEID$0, 0);
                }
            }
            
            /**
             * Gets the "messageType" element
             */
            public java.lang.String getMessageType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MESSAGETYPE$2, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "messageType" element
             */
            public org.apache.xmlbeans.XmlString xgetMessageType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MESSAGETYPE$2, 0);
                    return target;
                }
            }
            
            /**
             * True if has "messageType" element
             */
            public boolean isSetMessageType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(MESSAGETYPE$2) != 0;
                }
            }
            
            /**
             * Sets the "messageType" element
             */
            public void setMessageType(java.lang.String messageType)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MESSAGETYPE$2, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MESSAGETYPE$2);
                    }
                    target.setStringValue(messageType);
                }
            }
            
            /**
             * Sets (as xml) the "messageType" element
             */
            public void xsetMessageType(org.apache.xmlbeans.XmlString messageType)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MESSAGETYPE$2, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MESSAGETYPE$2);
                    }
                    target.set(messageType);
                }
            }
            
            /**
             * Unsets the "messageType" element
             */
            public void unsetMessageType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(MESSAGETYPE$2, 0);
                }
            }
            
            /**
             * Gets the "publishType" element
             */
            public java.lang.String getPublishType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PUBLISHTYPE$4, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "publishType" element
             */
            public org.apache.xmlbeans.XmlString xgetPublishType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PUBLISHTYPE$4, 0);
                    return target;
                }
            }
            
            /**
             * True if has "publishType" element
             */
            public boolean isSetPublishType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(PUBLISHTYPE$4) != 0;
                }
            }
            
            /**
             * Sets the "publishType" element
             */
            public void setPublishType(java.lang.String publishType)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PUBLISHTYPE$4, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PUBLISHTYPE$4);
                    }
                    target.setStringValue(publishType);
                }
            }
            
            /**
             * Sets (as xml) the "publishType" element
             */
            public void xsetPublishType(org.apache.xmlbeans.XmlString publishType)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PUBLISHTYPE$4, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PUBLISHTYPE$4);
                    }
                    target.set(publishType);
                }
            }
            
            /**
             * Unsets the "publishType" element
             */
            public void unsetPublishType()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(PUBLISHTYPE$4, 0);
                }
            }
            
            /**
             * Gets the "publishDate" element
             */
            public java.lang.String getPublishDate()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PUBLISHDATE$6, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "publishDate" element
             */
            public org.apache.xmlbeans.XmlString xgetPublishDate()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PUBLISHDATE$6, 0);
                    return target;
                }
            }
            
            /**
             * True if has "publishDate" element
             */
            public boolean isSetPublishDate()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(PUBLISHDATE$6) != 0;
                }
            }
            
            /**
             * Sets the "publishDate" element
             */
            public void setPublishDate(java.lang.String publishDate)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PUBLISHDATE$6, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PUBLISHDATE$6);
                    }
                    target.setStringValue(publishDate);
                }
            }
            
            /**
             * Sets (as xml) the "publishDate" element
             */
            public void xsetPublishDate(org.apache.xmlbeans.XmlString publishDate)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PUBLISHDATE$6, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PUBLISHDATE$6);
                    }
                    target.set(publishDate);
                }
            }
            
            /**
             * Unsets the "publishDate" element
             */
            public void unsetPublishDate()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(PUBLISHDATE$6, 0);
                }
            }
            
            /**
             * Gets the "topicName" element
             */
            public java.lang.String getTopicName()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TOPICNAME$8, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "topicName" element
             */
            public org.apache.xmlbeans.XmlString xgetTopicName()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TOPICNAME$8, 0);
                    return target;
                }
            }
            
            /**
             * True if has "topicName" element
             */
            public boolean isSetTopicName()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(TOPICNAME$8) != 0;
                }
            }
            
            /**
             * Sets the "topicName" element
             */
            public void setTopicName(java.lang.String topicName)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TOPICNAME$8, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(TOPICNAME$8);
                    }
                    target.setStringValue(topicName);
                }
            }
            
            /**
             * Sets (as xml) the "topicName" element
             */
            public void xsetTopicName(org.apache.xmlbeans.XmlString topicName)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TOPICNAME$8, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(TOPICNAME$8);
                    }
                    target.set(topicName);
                }
            }
            
            /**
             * Unsets the "topicName" element
             */
            public void unsetTopicName()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(TOPICNAME$8, 0);
                }
            }
            
            /**
             * Gets the "subscriberId" element
             */
            public java.lang.String getSubscriberId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBSCRIBERID$10, 0);
                    if (target == null)
                    {
                      return null;
                    }
                    return target.getStringValue();
                }
            }
            
            /**
             * Gets (as xml) the "subscriberId" element
             */
            public org.apache.xmlbeans.XmlString xgetSubscriberId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBSCRIBERID$10, 0);
                    return target;
                }
            }
            
            /**
             * True if has "subscriberId" element
             */
            public boolean isSetSubscriberId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(SUBSCRIBERID$10) != 0;
                }
            }
            
            /**
             * Sets the "subscriberId" element
             */
            public void setSubscriberId(java.lang.String subscriberId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.SimpleValue target = null;
                    target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBSCRIBERID$10, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBSCRIBERID$10);
                    }
                    target.setStringValue(subscriberId);
                }
            }
            
            /**
             * Sets (as xml) the "subscriberId" element
             */
            public void xsetSubscriberId(org.apache.xmlbeans.XmlString subscriberId)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    org.apache.xmlbeans.XmlString target = null;
                    target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBSCRIBERID$10, 0);
                    if (target == null)
                    {
                      target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBSCRIBERID$10);
                    }
                    target.set(subscriberId);
                }
            }
            
            /**
             * Unsets the "subscriberId" element
             */
            public void unsetSubscriberId()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(SUBSCRIBERID$10, 0);
                }
            }
            
            /**
             * Gets array of all "transactionProcessingSystems" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems[] getTransactionProcessingSystemsArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(TRANSACTIONPROCESSINGSYSTEMS$12, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "transactionProcessingSystems" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems getTransactionProcessingSystemsArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems)get_store().find_element_user(TRANSACTIONPROCESSINGSYSTEMS$12, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "transactionProcessingSystems" element
             */
            public int sizeOfTransactionProcessingSystemsArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(TRANSACTIONPROCESSINGSYSTEMS$12);
                }
            }
            
            /**
             * Sets array of all "transactionProcessingSystems" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setTransactionProcessingSystemsArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems[] transactionProcessingSystemsArray)
            {
                check_orphaned();
                arraySetterHelper(transactionProcessingSystemsArray, TRANSACTIONPROCESSINGSYSTEMS$12);
            }
            
            /**
             * Sets ith "transactionProcessingSystems" element
             */
            public void setTransactionProcessingSystemsArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems transactionProcessingSystems)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems)get_store().find_element_user(TRANSACTIONPROCESSINGSYSTEMS$12, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(transactionProcessingSystems);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "transactionProcessingSystems" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems insertNewTransactionProcessingSystems(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems)get_store().insert_element_user(TRANSACTIONPROCESSINGSYSTEMS$12, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "transactionProcessingSystems" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems addNewTransactionProcessingSystems()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems)get_store().add_element_user(TRANSACTIONPROCESSINGSYSTEMS$12);
                    return target;
                }
            }
            
            /**
             * Removes the ith "transactionProcessingSystems" element
             */
            public void removeTransactionProcessingSystems(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(TRANSACTIONPROCESSINGSYSTEMS$12, i);
                }
            }
            
            /**
             * Gets array of all "legalEntity" elements
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity[] getLegalEntityArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    java.util.List targetList = new java.util.ArrayList();
                    get_store().find_all_element_users(LEGALENTITY$14, targetList);
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity[targetList.size()];
                    targetList.toArray(result);
                    return result;
                }
            }
            
            /**
             * Gets ith "legalEntity" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity getLegalEntityArray(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity)get_store().find_element_user(LEGALENTITY$14, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    return target;
                }
            }
            
            /**
             * Returns number of "legalEntity" element
             */
            public int sizeOfLegalEntityArray()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    return get_store().count_elements(LEGALENTITY$14);
                }
            }
            
            /**
             * Sets array of all "legalEntity" element  WARNING: This method is not atomicaly synchronized.
             */
            public void setLegalEntityArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity[] legalEntityArray)
            {
                check_orphaned();
                arraySetterHelper(legalEntityArray, LEGALENTITY$14);
            }
            
            /**
             * Sets ith "legalEntity" element
             */
            public void setLegalEntityArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity legalEntity)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity)get_store().find_element_user(LEGALENTITY$14, i);
                    if (target == null)
                    {
                      throw new IndexOutOfBoundsException();
                    }
                    target.set(legalEntity);
                }
            }
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "legalEntity" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity insertNewLegalEntity(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity)get_store().insert_element_user(LEGALENTITY$14, i);
                    return target;
                }
            }
            
            /**
             * Appends and returns a new empty value (as xml) as the last "legalEntity" element
             */
            public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity addNewLegalEntity()
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity target = null;
                    target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity)get_store().add_element_user(LEGALENTITY$14);
                    return target;
                }
            }
            
            /**
             * Removes the ith "legalEntity" element
             */
            public void removeLegalEntity(int i)
            {
                synchronized (monitor())
                {
                    check_orphaned();
                    get_store().remove_element(LEGALENTITY$14, i);
                }
            }
            /**
             * An XML transactionProcessingSystems(@).
             *
             * This is a complex type.
             */
            public static class TransactionProcessingSystemsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.TransactionProcessingSystems
            {
                private static final long serialVersionUID = 1L;
                
                public TransactionProcessingSystemsImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName BKGLOCATIONCOUNTRY$0 = 
                    new javax.xml.namespace.QName("", "bkgLocationCountry");
                private static final javax.xml.namespace.QName BKGLOCATIONORGANIZATION$2 = 
                    new javax.xml.namespace.QName("", "bkgLocationOrganization");
                private static final javax.xml.namespace.QName EXTSYSTEMTYPENUM$4 = 
                    new javax.xml.namespace.QName("", "extSystemTypeNum");
                private static final javax.xml.namespace.QName EXTSYSTEMTYPEVALUE$6 = 
                    new javax.xml.namespace.QName("", "extSystemTypeValue");
                
                
                /**
                 * Gets the "bkgLocationCountry" element
                 */
                public java.lang.String getBkgLocationCountry()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONCOUNTRY$0, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "bkgLocationCountry" element
                 */
                public org.apache.xmlbeans.XmlString xgetBkgLocationCountry()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONCOUNTRY$0, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "bkgLocationCountry" element
                 */
                public boolean isSetBkgLocationCountry()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(BKGLOCATIONCOUNTRY$0) != 0;
                    }
                }
                
                /**
                 * Sets the "bkgLocationCountry" element
                 */
                public void setBkgLocationCountry(java.lang.String bkgLocationCountry)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONCOUNTRY$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BKGLOCATIONCOUNTRY$0);
                      }
                      target.setStringValue(bkgLocationCountry);
                    }
                }
                
                /**
                 * Sets (as xml) the "bkgLocationCountry" element
                 */
                public void xsetBkgLocationCountry(org.apache.xmlbeans.XmlString bkgLocationCountry)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONCOUNTRY$0, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BKGLOCATIONCOUNTRY$0);
                      }
                      target.set(bkgLocationCountry);
                    }
                }
                
                /**
                 * Unsets the "bkgLocationCountry" element
                 */
                public void unsetBkgLocationCountry()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(BKGLOCATIONCOUNTRY$0, 0);
                    }
                }
                
                /**
                 * Gets the "bkgLocationOrganization" element
                 */
                public java.lang.String getBkgLocationOrganization()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONORGANIZATION$2, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "bkgLocationOrganization" element
                 */
                public org.apache.xmlbeans.XmlString xgetBkgLocationOrganization()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONORGANIZATION$2, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "bkgLocationOrganization" element
                 */
                public boolean isSetBkgLocationOrganization()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(BKGLOCATIONORGANIZATION$2) != 0;
                    }
                }
                
                /**
                 * Sets the "bkgLocationOrganization" element
                 */
                public void setBkgLocationOrganization(java.lang.String bkgLocationOrganization)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONORGANIZATION$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BKGLOCATIONORGANIZATION$2);
                      }
                      target.setStringValue(bkgLocationOrganization);
                    }
                }
                
                /**
                 * Sets (as xml) the "bkgLocationOrganization" element
                 */
                public void xsetBkgLocationOrganization(org.apache.xmlbeans.XmlString bkgLocationOrganization)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONORGANIZATION$2, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BKGLOCATIONORGANIZATION$2);
                      }
                      target.set(bkgLocationOrganization);
                    }
                }
                
                /**
                 * Unsets the "bkgLocationOrganization" element
                 */
                public void unsetBkgLocationOrganization()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(BKGLOCATIONORGANIZATION$2, 0);
                    }
                }
                
                /**
                 * Gets the "extSystemTypeNum" element
                 */
                public java.lang.String getExtSystemTypeNum()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSTEMTYPENUM$4, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "extSystemTypeNum" element
                 */
                public org.apache.xmlbeans.XmlString xgetExtSystemTypeNum()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSTEMTYPENUM$4, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "extSystemTypeNum" element
                 */
                public boolean isSetExtSystemTypeNum()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(EXTSYSTEMTYPENUM$4) != 0;
                    }
                }
                
                /**
                 * Sets the "extSystemTypeNum" element
                 */
                public void setExtSystemTypeNum(java.lang.String extSystemTypeNum)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSTEMTYPENUM$4, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXTSYSTEMTYPENUM$4);
                      }
                      target.setStringValue(extSystemTypeNum);
                    }
                }
                
                /**
                 * Sets (as xml) the "extSystemTypeNum" element
                 */
                public void xsetExtSystemTypeNum(org.apache.xmlbeans.XmlString extSystemTypeNum)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSTEMTYPENUM$4, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXTSYSTEMTYPENUM$4);
                      }
                      target.set(extSystemTypeNum);
                    }
                }
                
                /**
                 * Unsets the "extSystemTypeNum" element
                 */
                public void unsetExtSystemTypeNum()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(EXTSYSTEMTYPENUM$4, 0);
                    }
                }
                
                /**
                 * Gets the "extSystemTypeValue" element
                 */
                public java.lang.String getExtSystemTypeValue()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSTEMTYPEVALUE$6, 0);
                      if (target == null)
                      {
                        return null;
                      }
                      return target.getStringValue();
                    }
                }
                
                /**
                 * Gets (as xml) the "extSystemTypeValue" element
                 */
                public org.apache.xmlbeans.XmlString xgetExtSystemTypeValue()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSTEMTYPEVALUE$6, 0);
                      return target;
                    }
                }
                
                /**
                 * True if has "extSystemTypeValue" element
                 */
                public boolean isSetExtSystemTypeValue()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(EXTSYSTEMTYPEVALUE$6) != 0;
                    }
                }
                
                /**
                 * Sets the "extSystemTypeValue" element
                 */
                public void setExtSystemTypeValue(java.lang.String extSystemTypeValue)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.SimpleValue target = null;
                      target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSTEMTYPEVALUE$6, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXTSYSTEMTYPEVALUE$6);
                      }
                      target.setStringValue(extSystemTypeValue);
                    }
                }
                
                /**
                 * Sets (as xml) the "extSystemTypeValue" element
                 */
                public void xsetExtSystemTypeValue(org.apache.xmlbeans.XmlString extSystemTypeValue)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      org.apache.xmlbeans.XmlString target = null;
                      target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSTEMTYPEVALUE$6, 0);
                      if (target == null)
                      {
                        target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXTSYSTEMTYPEVALUE$6);
                      }
                      target.set(extSystemTypeValue);
                    }
                }
                
                /**
                 * Unsets the "extSystemTypeValue" element
                 */
                public void unsetExtSystemTypeValue()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(EXTSYSTEMTYPEVALUE$6, 0);
                    }
                }
            }
            /**
             * An XML legalEntity(@).
             *
             * This is a complex type.
             */
            public static class LegalEntityImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity
            {
                private static final long serialVersionUID = 1L;
                
                public LegalEntityImpl(org.apache.xmlbeans.SchemaType sType)
                {
                    super(sType);
                }
                
                private static final javax.xml.namespace.QName MAINPROFILEDETAILS$0 = 
                    new javax.xml.namespace.QName("", "mainProfileDetails");
                private static final javax.xml.namespace.QName SUBPROFILEDETAILS$2 = 
                    new javax.xml.namespace.QName("", "subProfileDetails");
                
                
                /**
                 * Gets array of all "mainProfileDetails" elements
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails[] getMainProfileDetailsArray()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      java.util.List targetList = new java.util.ArrayList();
                      get_store().find_all_element_users(MAINPROFILEDETAILS$0, targetList);
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails[targetList.size()];
                      targetList.toArray(result);
                      return result;
                    }
                }
                
                /**
                 * Gets ith "mainProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails getMainProfileDetailsArray(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails)get_store().find_element_user(MAINPROFILEDETAILS$0, i);
                      if (target == null)
                      {
                        throw new IndexOutOfBoundsException();
                      }
                      return target;
                    }
                }
                
                /**
                 * Returns number of "mainProfileDetails" element
                 */
                public int sizeOfMainProfileDetailsArray()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(MAINPROFILEDETAILS$0);
                    }
                }
                
                /**
                 * Sets array of all "mainProfileDetails" element  WARNING: This method is not atomicaly synchronized.
                 */
                public void setMainProfileDetailsArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails[] mainProfileDetailsArray)
                {
                    check_orphaned();
                    arraySetterHelper(mainProfileDetailsArray, MAINPROFILEDETAILS$0);
                }
                
                /**
                 * Sets ith "mainProfileDetails" element
                 */
                public void setMainProfileDetailsArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails mainProfileDetails)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails)get_store().find_element_user(MAINPROFILEDETAILS$0, i);
                      if (target == null)
                      {
                        throw new IndexOutOfBoundsException();
                      }
                      target.set(mainProfileDetails);
                    }
                }
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "mainProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails insertNewMainProfileDetails(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails)get_store().insert_element_user(MAINPROFILEDETAILS$0, i);
                      return target;
                    }
                }
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "mainProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails addNewMainProfileDetails()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails)get_store().add_element_user(MAINPROFILEDETAILS$0);
                      return target;
                    }
                }
                
                /**
                 * Removes the ith "mainProfileDetails" element
                 */
                public void removeMainProfileDetails(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(MAINPROFILEDETAILS$0, i);
                    }
                }
                
                /**
                 * Gets array of all "subProfileDetails" elements
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails[] getSubProfileDetailsArray()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      java.util.List targetList = new java.util.ArrayList();
                      get_store().find_all_element_users(SUBPROFILEDETAILS$2, targetList);
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails[targetList.size()];
                      targetList.toArray(result);
                      return result;
                    }
                }
                
                /**
                 * Gets ith "subProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails getSubProfileDetailsArray(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails)get_store().find_element_user(SUBPROFILEDETAILS$2, i);
                      if (target == null)
                      {
                        throw new IndexOutOfBoundsException();
                      }
                      return target;
                    }
                }
                
                /**
                 * Returns number of "subProfileDetails" element
                 */
                public int sizeOfSubProfileDetailsArray()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      return get_store().count_elements(SUBPROFILEDETAILS$2);
                    }
                }
                
                /**
                 * Sets array of all "subProfileDetails" element  WARNING: This method is not atomicaly synchronized.
                 */
                public void setSubProfileDetailsArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails[] subProfileDetailsArray)
                {
                    check_orphaned();
                    arraySetterHelper(subProfileDetailsArray, SUBPROFILEDETAILS$2);
                }
                
                /**
                 * Sets ith "subProfileDetails" element
                 */
                public void setSubProfileDetailsArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails subProfileDetails)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails)get_store().find_element_user(SUBPROFILEDETAILS$2, i);
                      if (target == null)
                      {
                        throw new IndexOutOfBoundsException();
                      }
                      target.set(subProfileDetails);
                    }
                }
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "subProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails insertNewSubProfileDetails(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails)get_store().insert_element_user(SUBPROFILEDETAILS$2, i);
                      return target;
                    }
                }
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "subProfileDetails" element
                 */
                public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails addNewSubProfileDetails()
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails target = null;
                      target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails)get_store().add_element_user(SUBPROFILEDETAILS$2);
                      return target;
                    }
                }
                
                /**
                 * Removes the ith "subProfileDetails" element
                 */
                public void removeSubProfileDetails(int i)
                {
                    synchronized (monitor())
                    {
                      check_orphaned();
                      get_store().remove_element(SUBPROFILEDETAILS$2, i);
                    }
                }
                /**
                 * An XML mainProfileDetails(@).
                 *
                 * This is a complex type.
                 */
                public static class MainProfileDetailsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails
                {
                    private static final long serialVersionUID = 1L;
                    
                    public MainProfileDetailsImpl(org.apache.xmlbeans.SchemaType sType)
                    {
                      super(sType);
                    }
                    
                    private static final javax.xml.namespace.QName MAINPROFILE$0 = 
                      new javax.xml.namespace.QName("", "mainProfile");
                    private static final javax.xml.namespace.QName REGISTEREDADDRESS$2 = 
                      new javax.xml.namespace.QName("", "registeredAddress");
                    private static final javax.xml.namespace.QName CREDITGRADE$4 = 
                      new javax.xml.namespace.QName("", "creditGrade");
                    private static final javax.xml.namespace.QName ISIC$6 = 
                      new javax.xml.namespace.QName("", "ISIC");
                    private static final javax.xml.namespace.QName CREDITSTATUS$8 = 
                      new javax.xml.namespace.QName("", "creditStatus");
                    private static final javax.xml.namespace.QName MAINPROFILEINSTRUCTIONREF$10 = 
                      new javax.xml.namespace.QName("", "mainProfileInstructionRef");
                    private static final javax.xml.namespace.QName KNOWYOURCUSTOMER$12 = 
                      new javax.xml.namespace.QName("", "knowYourCustomer");
                    
                    
                    /**
                     * Gets array of all "mainProfile" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile[] getMainProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(MAINPROFILE$0, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "mainProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile getMainProfileArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile)get_store().find_element_user(MAINPROFILE$0, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "mainProfile" element
                     */
                    public int sizeOfMainProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(MAINPROFILE$0);
                      }
                    }
                    
                    /**
                     * Sets array of all "mainProfile" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setMainProfileArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile[] mainProfileArray)
                    {
                      check_orphaned();
                      arraySetterHelper(mainProfileArray, MAINPROFILE$0);
                    }
                    
                    /**
                     * Sets ith "mainProfile" element
                     */
                    public void setMainProfileArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile mainProfile)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile)get_store().find_element_user(MAINPROFILE$0, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(mainProfile);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "mainProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile insertNewMainProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile)get_store().insert_element_user(MAINPROFILE$0, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "mainProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile addNewMainProfile()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile)get_store().add_element_user(MAINPROFILE$0);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "mainProfile" element
                     */
                    public void removeMainProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(MAINPROFILE$0, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "registeredAddress" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress[] getRegisteredAddressArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(REGISTEREDADDRESS$2, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "registeredAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress getRegisteredAddressArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress)get_store().find_element_user(REGISTEREDADDRESS$2, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "registeredAddress" element
                     */
                    public int sizeOfRegisteredAddressArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(REGISTEREDADDRESS$2);
                      }
                    }
                    
                    /**
                     * Sets array of all "registeredAddress" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setRegisteredAddressArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress[] registeredAddressArray)
                    {
                      check_orphaned();
                      arraySetterHelper(registeredAddressArray, REGISTEREDADDRESS$2);
                    }
                    
                    /**
                     * Sets ith "registeredAddress" element
                     */
                    public void setRegisteredAddressArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress registeredAddress)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress)get_store().find_element_user(REGISTEREDADDRESS$2, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(registeredAddress);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "registeredAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress insertNewRegisteredAddress(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress)get_store().insert_element_user(REGISTEREDADDRESS$2, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "registeredAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress addNewRegisteredAddress()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress)get_store().add_element_user(REGISTEREDADDRESS$2);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "registeredAddress" element
                     */
                    public void removeRegisteredAddress(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(REGISTEREDADDRESS$2, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "creditGrade" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade[] getCreditGradeArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(CREDITGRADE$4, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "creditGrade" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade getCreditGradeArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade)get_store().find_element_user(CREDITGRADE$4, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "creditGrade" element
                     */
                    public int sizeOfCreditGradeArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(CREDITGRADE$4);
                      }
                    }
                    
                    /**
                     * Sets array of all "creditGrade" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setCreditGradeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade[] creditGradeArray)
                    {
                      check_orphaned();
                      arraySetterHelper(creditGradeArray, CREDITGRADE$4);
                    }
                    
                    /**
                     * Sets ith "creditGrade" element
                     */
                    public void setCreditGradeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade creditGrade)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade)get_store().find_element_user(CREDITGRADE$4, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(creditGrade);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "creditGrade" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade insertNewCreditGrade(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade)get_store().insert_element_user(CREDITGRADE$4, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "creditGrade" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade addNewCreditGrade()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade)get_store().add_element_user(CREDITGRADE$4);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "creditGrade" element
                     */
                    public void removeCreditGrade(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(CREDITGRADE$4, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "ISIC" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC[] getISICArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(ISIC$6, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "ISIC" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC getISICArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC)get_store().find_element_user(ISIC$6, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "ISIC" element
                     */
                    public int sizeOfISICArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(ISIC$6);
                      }
                    }
                    
                    /**
                     * Sets array of all "ISIC" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setISICArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC[] isicArray)
                    {
                      check_orphaned();
                      arraySetterHelper(isicArray, ISIC$6);
                    }
                    
                    /**
                     * Sets ith "ISIC" element
                     */
                    public void setISICArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC isic)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC)get_store().find_element_user(ISIC$6, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(isic);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "ISIC" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC insertNewISIC(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC)get_store().insert_element_user(ISIC$6, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "ISIC" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC addNewISIC()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC)get_store().add_element_user(ISIC$6);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "ISIC" element
                     */
                    public void removeISIC(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(ISIC$6, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "creditStatus" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus[] getCreditStatusArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(CREDITSTATUS$8, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "creditStatus" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus getCreditStatusArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus)get_store().find_element_user(CREDITSTATUS$8, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "creditStatus" element
                     */
                    public int sizeOfCreditStatusArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(CREDITSTATUS$8);
                      }
                    }
                    
                    /**
                     * Sets array of all "creditStatus" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setCreditStatusArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus[] creditStatusArray)
                    {
                      check_orphaned();
                      arraySetterHelper(creditStatusArray, CREDITSTATUS$8);
                    }
                    
                    /**
                     * Sets ith "creditStatus" element
                     */
                    public void setCreditStatusArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus creditStatus)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus)get_store().find_element_user(CREDITSTATUS$8, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(creditStatus);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "creditStatus" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus insertNewCreditStatus(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus)get_store().insert_element_user(CREDITSTATUS$8, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "creditStatus" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus addNewCreditStatus()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus)get_store().add_element_user(CREDITSTATUS$8);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "creditStatus" element
                     */
                    public void removeCreditStatus(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(CREDITSTATUS$8, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "mainProfileInstructionRef" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef[] getMainProfileInstructionRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(MAINPROFILEINSTRUCTIONREF$10, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "mainProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef getMainProfileInstructionRefArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef)get_store().find_element_user(MAINPROFILEINSTRUCTIONREF$10, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "mainProfileInstructionRef" element
                     */
                    public int sizeOfMainProfileInstructionRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(MAINPROFILEINSTRUCTIONREF$10);
                      }
                    }
                    
                    /**
                     * Sets array of all "mainProfileInstructionRef" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setMainProfileInstructionRefArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef[] mainProfileInstructionRefArray)
                    {
                      check_orphaned();
                      arraySetterHelper(mainProfileInstructionRefArray, MAINPROFILEINSTRUCTIONREF$10);
                    }
                    
                    /**
                     * Sets ith "mainProfileInstructionRef" element
                     */
                    public void setMainProfileInstructionRefArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef mainProfileInstructionRef)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef)get_store().find_element_user(MAINPROFILEINSTRUCTIONREF$10, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(mainProfileInstructionRef);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "mainProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef insertNewMainProfileInstructionRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef)get_store().insert_element_user(MAINPROFILEINSTRUCTIONREF$10, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "mainProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef addNewMainProfileInstructionRef()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef)get_store().add_element_user(MAINPROFILEINSTRUCTIONREF$10);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "mainProfileInstructionRef" element
                     */
                    public void removeMainProfileInstructionRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(MAINPROFILEINSTRUCTIONREF$10, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "knowYourCustomer" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer[] getKnowYourCustomerArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(KNOWYOURCUSTOMER$12, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "knowYourCustomer" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer getKnowYourCustomerArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer)get_store().find_element_user(KNOWYOURCUSTOMER$12, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "knowYourCustomer" element
                     */
                    public int sizeOfKnowYourCustomerArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(KNOWYOURCUSTOMER$12);
                      }
                    }
                    
                    /**
                     * Sets array of all "knowYourCustomer" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setKnowYourCustomerArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer[] knowYourCustomerArray)
                    {
                      check_orphaned();
                      arraySetterHelper(knowYourCustomerArray, KNOWYOURCUSTOMER$12);
                    }
                    
                    /**
                     * Sets ith "knowYourCustomer" element
                     */
                    public void setKnowYourCustomerArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer knowYourCustomer)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer)get_store().find_element_user(KNOWYOURCUSTOMER$12, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(knowYourCustomer);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "knowYourCustomer" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer insertNewKnowYourCustomer(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer)get_store().insert_element_user(KNOWYOURCUSTOMER$12, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "knowYourCustomer" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer addNewKnowYourCustomer()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer)get_store().add_element_user(KNOWYOURCUSTOMER$12);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "knowYourCustomer" element
                     */
                    public void removeKnowYourCustomer(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(KNOWYOURCUSTOMER$12, i);
                      }
                    }
                    /**
                     * An XML mainProfile(@).
                     *
                     * This is a complex type.
                     */
                    public static class MainProfileImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public MainProfileImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SHORTNAME$2 = 
                        new javax.xml.namespace.QName("", "shortName");
                      private static final javax.xml.namespace.QName LEGALNAME$4 = 
                        new javax.xml.namespace.QName("", "legalName");
                      private static final javax.xml.namespace.QName LEGALCONSTITUTION$6 = 
                        new javax.xml.namespace.QName("", "legalConstitution");
                      private static final javax.xml.namespace.QName INCORPORATEDCOUNTRY$8 = 
                        new javax.xml.namespace.QName("", "incorporatedCountry");
                      private static final javax.xml.namespace.QName INCORPORATIONNUMBER$10 = 
                        new javax.xml.namespace.QName("", "incorporationNumber");
                      private static final javax.xml.namespace.QName INCORPORATIONDATE$12 = 
                        new javax.xml.namespace.QName("", "incorporationDate");
                      private static final javax.xml.namespace.QName CUSTOMERTYPE$14 = 
                        new javax.xml.namespace.QName("", "customerType");
                      private static final javax.xml.namespace.QName RELATIONSHIPSTARTDATE$16 = 
                        new javax.xml.namespace.QName("", "relationshipStartDate");
                      private static final javax.xml.namespace.QName SEGMENTCODE$18 = 
                        new javax.xml.namespace.QName("", "segmentCode");
                      private static final javax.xml.namespace.QName SUBSEGMENTCODE$20 = 
                        new javax.xml.namespace.QName("", "subSegmentCode");
                      private static final javax.xml.namespace.QName BASELCUSTOMERSEGMENT$22 = 
                        new javax.xml.namespace.QName("", "baselCustomerSegment");
                      private static final javax.xml.namespace.QName BASELCUSTOMERSUBSEGMENT$24 = 
                        new javax.xml.namespace.QName("", "baselCustomerSubSegment");
                      private static final javax.xml.namespace.QName BUSINESSTYPE$26 = 
                        new javax.xml.namespace.QName("", "businessType");
                      private static final javax.xml.namespace.QName ENVRISKGRADE$28 = 
                        new javax.xml.namespace.QName("", "envRiskGrade");
                      private static final javax.xml.namespace.QName TOP1000BANK$30 = 
                        new javax.xml.namespace.QName("", "top1000Bank");
                      private static final javax.xml.namespace.QName REFERRALSTATUS$32 = 
                        new javax.xml.namespace.QName("", "referralStatus");
                      private static final javax.xml.namespace.QName OPERATIONSTATUS1$34 = 
                        new javax.xml.namespace.QName("", "operationStatus1");
                      private static final javax.xml.namespace.QName OPERATIONSTATUS1EFFDATE$36 = 
                        new javax.xml.namespace.QName("", "operationStatus1EffDate");
                      private static final javax.xml.namespace.QName BORROWEREXCEPTIONCHKIND$38 = 
                        new javax.xml.namespace.QName("", "borrowerExceptionChkInd");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$40 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$42 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "shortName" element
                       */
                      public java.lang.String getShortName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SHORTNAME$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "shortName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetShortName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SHORTNAME$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "shortName" element
                       */
                      public boolean isSetShortName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SHORTNAME$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "shortName" element
                       */
                      public void setShortName(java.lang.String shortName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SHORTNAME$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SHORTNAME$2);
                          }
                          target.setStringValue(shortName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "shortName" element
                       */
                      public void xsetShortName(org.apache.xmlbeans.XmlString shortName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SHORTNAME$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SHORTNAME$2);
                          }
                          target.set(shortName);
                        }
                      }
                      
                      /**
                       * Unsets the "shortName" element
                       */
                      public void unsetShortName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SHORTNAME$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "legalName" element
                       */
                      public java.lang.String getLegalName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEGALNAME$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "legalName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLegalName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEGALNAME$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "legalName" element
                       */
                      public boolean isSetLegalName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEGALNAME$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "legalName" element
                       */
                      public void setLegalName(java.lang.String legalName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEGALNAME$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEGALNAME$4);
                          }
                          target.setStringValue(legalName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "legalName" element
                       */
                      public void xsetLegalName(org.apache.xmlbeans.XmlString legalName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEGALNAME$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEGALNAME$4);
                          }
                          target.set(legalName);
                        }
                      }
                      
                      /**
                       * Unsets the "legalName" element
                       */
                      public void unsetLegalName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEGALNAME$4, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "legalConstitution" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution[] getLegalConstitutionArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LEGALCONSTITUTION$6, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "legalConstitution" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution getLegalConstitutionArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution)get_store().find_element_user(LEGALCONSTITUTION$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "legalConstitution" element
                       */
                      public int sizeOfLegalConstitutionArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEGALCONSTITUTION$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "legalConstitution" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLegalConstitutionArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution[] legalConstitutionArray)
                      {
                        check_orphaned();
                        arraySetterHelper(legalConstitutionArray, LEGALCONSTITUTION$6);
                      }
                      
                      /**
                       * Sets ith "legalConstitution" element
                       */
                      public void setLegalConstitutionArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution legalConstitution)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution)get_store().find_element_user(LEGALCONSTITUTION$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(legalConstitution);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "legalConstitution" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution insertNewLegalConstitution(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution)get_store().insert_element_user(LEGALCONSTITUTION$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "legalConstitution" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution addNewLegalConstitution()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution)get_store().add_element_user(LEGALCONSTITUTION$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "legalConstitution" element
                       */
                      public void removeLegalConstitution(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEGALCONSTITUTION$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "incorporatedCountry" element
                       */
                      public java.lang.String getIncorporatedCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATEDCOUNTRY$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "incorporatedCountry" element
                       */
                      public org.apache.xmlbeans.XmlString xgetIncorporatedCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATEDCOUNTRY$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "incorporatedCountry" element
                       */
                      public boolean isSetIncorporatedCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INCORPORATEDCOUNTRY$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "incorporatedCountry" element
                       */
                      public void setIncorporatedCountry(java.lang.String incorporatedCountry)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATEDCOUNTRY$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INCORPORATEDCOUNTRY$8);
                          }
                          target.setStringValue(incorporatedCountry);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "incorporatedCountry" element
                       */
                      public void xsetIncorporatedCountry(org.apache.xmlbeans.XmlString incorporatedCountry)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATEDCOUNTRY$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INCORPORATEDCOUNTRY$8);
                          }
                          target.set(incorporatedCountry);
                        }
                      }
                      
                      /**
                       * Unsets the "incorporatedCountry" element
                       */
                      public void unsetIncorporatedCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INCORPORATEDCOUNTRY$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "incorporationNumber" element
                       */
                      public java.lang.String getIncorporationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATIONNUMBER$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "incorporationNumber" element
                       */
                      public org.apache.xmlbeans.XmlString xgetIncorporationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATIONNUMBER$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "incorporationNumber" element
                       */
                      public boolean isSetIncorporationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INCORPORATIONNUMBER$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "incorporationNumber" element
                       */
                      public void setIncorporationNumber(java.lang.String incorporationNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATIONNUMBER$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INCORPORATIONNUMBER$10);
                          }
                          target.setStringValue(incorporationNumber);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "incorporationNumber" element
                       */
                      public void xsetIncorporationNumber(org.apache.xmlbeans.XmlString incorporationNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATIONNUMBER$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INCORPORATIONNUMBER$10);
                          }
                          target.set(incorporationNumber);
                        }
                      }
                      
                      /**
                       * Unsets the "incorporationNumber" element
                       */
                      public void unsetIncorporationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INCORPORATIONNUMBER$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "incorporationDate" element
                       */
                      public java.lang.String getIncorporationDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATIONDATE$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "incorporationDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetIncorporationDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATIONDATE$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "incorporationDate" element
                       */
                      public boolean isSetIncorporationDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INCORPORATIONDATE$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "incorporationDate" element
                       */
                      public void setIncorporationDate(java.lang.String incorporationDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INCORPORATIONDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INCORPORATIONDATE$12);
                          }
                          target.setStringValue(incorporationDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "incorporationDate" element
                       */
                      public void xsetIncorporationDate(org.apache.xmlbeans.XmlString incorporationDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INCORPORATIONDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INCORPORATIONDATE$12);
                          }
                          target.set(incorporationDate);
                        }
                      }
                      
                      /**
                       * Unsets the "incorporationDate" element
                       */
                      public void unsetIncorporationDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INCORPORATIONDATE$12, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "customerType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType[] getCustomerTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CUSTOMERTYPE$14, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "customerType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType getCustomerTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType)get_store().find_element_user(CUSTOMERTYPE$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "customerType" element
                       */
                      public int sizeOfCustomerTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CUSTOMERTYPE$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "customerType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCustomerTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType[] customerTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(customerTypeArray, CUSTOMERTYPE$14);
                      }
                      
                      /**
                       * Sets ith "customerType" element
                       */
                      public void setCustomerTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType customerType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType)get_store().find_element_user(CUSTOMERTYPE$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(customerType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "customerType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType insertNewCustomerType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType)get_store().insert_element_user(CUSTOMERTYPE$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "customerType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType addNewCustomerType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType)get_store().add_element_user(CUSTOMERTYPE$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "customerType" element
                       */
                      public void removeCustomerType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CUSTOMERTYPE$14, i);
                        }
                      }
                      
                      /**
                       * Gets the "relationshipStartDate" element
                       */
                      public java.lang.String getRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(RELATIONSHIPSTARTDATE$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "relationshipStartDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(RELATIONSHIPSTARTDATE$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "relationshipStartDate" element
                       */
                      public boolean isSetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(RELATIONSHIPSTARTDATE$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "relationshipStartDate" element
                       */
                      public void setRelationshipStartDate(java.lang.String relationshipStartDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(RELATIONSHIPSTARTDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(RELATIONSHIPSTARTDATE$16);
                          }
                          target.setStringValue(relationshipStartDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "relationshipStartDate" element
                       */
                      public void xsetRelationshipStartDate(org.apache.xmlbeans.XmlString relationshipStartDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(RELATIONSHIPSTARTDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(RELATIONSHIPSTARTDATE$16);
                          }
                          target.set(relationshipStartDate);
                        }
                      }
                      
                      /**
                       * Unsets the "relationshipStartDate" element
                       */
                      public void unsetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(RELATIONSHIPSTARTDATE$16, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "segmentCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode[] getSegmentCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SEGMENTCODE$18, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "segmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode getSegmentCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode)get_store().find_element_user(SEGMENTCODE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "segmentCode" element
                       */
                      public int sizeOfSegmentCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SEGMENTCODE$18);
                        }
                      }
                      
                      /**
                       * Sets array of all "segmentCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSegmentCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode[] segmentCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(segmentCodeArray, SEGMENTCODE$18);
                      }
                      
                      /**
                       * Sets ith "segmentCode" element
                       */
                      public void setSegmentCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode segmentCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode)get_store().find_element_user(SEGMENTCODE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(segmentCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "segmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode insertNewSegmentCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode)get_store().insert_element_user(SEGMENTCODE$18, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "segmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode addNewSegmentCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode)get_store().add_element_user(SEGMENTCODE$18);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "segmentCode" element
                       */
                      public void removeSegmentCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SEGMENTCODE$18, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "subSegmentCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode[] getSubSegmentCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SUBSEGMENTCODE$20, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "subSegmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode getSubSegmentCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode)get_store().find_element_user(SUBSEGMENTCODE$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "subSegmentCode" element
                       */
                      public int sizeOfSubSegmentCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBSEGMENTCODE$20);
                        }
                      }
                      
                      /**
                       * Sets array of all "subSegmentCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSubSegmentCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode[] subSegmentCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(subSegmentCodeArray, SUBSEGMENTCODE$20);
                      }
                      
                      /**
                       * Sets ith "subSegmentCode" element
                       */
                      public void setSubSegmentCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode subSegmentCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode)get_store().find_element_user(SUBSEGMENTCODE$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(subSegmentCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "subSegmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode insertNewSubSegmentCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode)get_store().insert_element_user(SUBSEGMENTCODE$20, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "subSegmentCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode addNewSubSegmentCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode)get_store().add_element_user(SUBSEGMENTCODE$20);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "subSegmentCode" element
                       */
                      public void removeSubSegmentCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBSEGMENTCODE$20, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "baselCustomerSegment" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment[] getBaselCustomerSegmentArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(BASELCUSTOMERSEGMENT$22, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "baselCustomerSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment getBaselCustomerSegmentArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment)get_store().find_element_user(BASELCUSTOMERSEGMENT$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "baselCustomerSegment" element
                       */
                      public int sizeOfBaselCustomerSegmentArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BASELCUSTOMERSEGMENT$22);
                        }
                      }
                      
                      /**
                       * Sets array of all "baselCustomerSegment" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setBaselCustomerSegmentArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment[] baselCustomerSegmentArray)
                      {
                        check_orphaned();
                        arraySetterHelper(baselCustomerSegmentArray, BASELCUSTOMERSEGMENT$22);
                      }
                      
                      /**
                       * Sets ith "baselCustomerSegment" element
                       */
                      public void setBaselCustomerSegmentArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment baselCustomerSegment)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment)get_store().find_element_user(BASELCUSTOMERSEGMENT$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(baselCustomerSegment);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "baselCustomerSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment insertNewBaselCustomerSegment(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment)get_store().insert_element_user(BASELCUSTOMERSEGMENT$22, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "baselCustomerSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment addNewBaselCustomerSegment()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment)get_store().add_element_user(BASELCUSTOMERSEGMENT$22);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "baselCustomerSegment" element
                       */
                      public void removeBaselCustomerSegment(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BASELCUSTOMERSEGMENT$22, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "baselCustomerSubSegment" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment[] getBaselCustomerSubSegmentArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(BASELCUSTOMERSUBSEGMENT$24, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "baselCustomerSubSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment getBaselCustomerSubSegmentArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment)get_store().find_element_user(BASELCUSTOMERSUBSEGMENT$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "baselCustomerSubSegment" element
                       */
                      public int sizeOfBaselCustomerSubSegmentArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BASELCUSTOMERSUBSEGMENT$24);
                        }
                      }
                      
                      /**
                       * Sets array of all "baselCustomerSubSegment" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setBaselCustomerSubSegmentArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment[] baselCustomerSubSegmentArray)
                      {
                        check_orphaned();
                        arraySetterHelper(baselCustomerSubSegmentArray, BASELCUSTOMERSUBSEGMENT$24);
                      }
                      
                      /**
                       * Sets ith "baselCustomerSubSegment" element
                       */
                      public void setBaselCustomerSubSegmentArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment baselCustomerSubSegment)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment)get_store().find_element_user(BASELCUSTOMERSUBSEGMENT$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(baselCustomerSubSegment);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "baselCustomerSubSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment insertNewBaselCustomerSubSegment(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment)get_store().insert_element_user(BASELCUSTOMERSUBSEGMENT$24, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "baselCustomerSubSegment" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment addNewBaselCustomerSubSegment()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment)get_store().add_element_user(BASELCUSTOMERSUBSEGMENT$24);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "baselCustomerSubSegment" element
                       */
                      public void removeBaselCustomerSubSegment(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BASELCUSTOMERSUBSEGMENT$24, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "businessType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType[] getBusinessTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(BUSINESSTYPE$26, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "businessType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType getBusinessTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType)get_store().find_element_user(BUSINESSTYPE$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "businessType" element
                       */
                      public int sizeOfBusinessTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BUSINESSTYPE$26);
                        }
                      }
                      
                      /**
                       * Sets array of all "businessType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setBusinessTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType[] businessTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(businessTypeArray, BUSINESSTYPE$26);
                      }
                      
                      /**
                       * Sets ith "businessType" element
                       */
                      public void setBusinessTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType businessType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType)get_store().find_element_user(BUSINESSTYPE$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(businessType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "businessType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType insertNewBusinessType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType)get_store().insert_element_user(BUSINESSTYPE$26, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "businessType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType addNewBusinessType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType)get_store().add_element_user(BUSINESSTYPE$26);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "businessType" element
                       */
                      public void removeBusinessType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BUSINESSTYPE$26, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "envRiskGrade" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade[] getEnvRiskGradeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ENVRISKGRADE$28, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "envRiskGrade" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade getEnvRiskGradeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade)get_store().find_element_user(ENVRISKGRADE$28, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "envRiskGrade" element
                       */
                      public int sizeOfEnvRiskGradeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ENVRISKGRADE$28);
                        }
                      }
                      
                      /**
                       * Sets array of all "envRiskGrade" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setEnvRiskGradeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade[] envRiskGradeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(envRiskGradeArray, ENVRISKGRADE$28);
                      }
                      
                      /**
                       * Sets ith "envRiskGrade" element
                       */
                      public void setEnvRiskGradeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade envRiskGrade)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade)get_store().find_element_user(ENVRISKGRADE$28, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(envRiskGrade);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "envRiskGrade" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade insertNewEnvRiskGrade(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade)get_store().insert_element_user(ENVRISKGRADE$28, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "envRiskGrade" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade addNewEnvRiskGrade()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade)get_store().add_element_user(ENVRISKGRADE$28);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "envRiskGrade" element
                       */
                      public void removeEnvRiskGrade(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ENVRISKGRADE$28, i);
                        }
                      }
                      
                      /**
                       * Gets the "top1000Bank" element
                       */
                      public java.lang.String getTop1000Bank()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TOP1000BANK$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "top1000Bank" element
                       */
                      public org.apache.xmlbeans.XmlString xgetTop1000Bank()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TOP1000BANK$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "top1000Bank" element
                       */
                      public boolean isSetTop1000Bank()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(TOP1000BANK$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "top1000Bank" element
                       */
                      public void setTop1000Bank(java.lang.String top1000Bank)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TOP1000BANK$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(TOP1000BANK$30);
                          }
                          target.setStringValue(top1000Bank);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "top1000Bank" element
                       */
                      public void xsetTop1000Bank(org.apache.xmlbeans.XmlString top1000Bank)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TOP1000BANK$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(TOP1000BANK$30);
                          }
                          target.set(top1000Bank);
                        }
                      }
                      
                      /**
                       * Unsets the "top1000Bank" element
                       */
                      public void unsetTop1000Bank()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(TOP1000BANK$30, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "referralStatus" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus[] getReferralStatusArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(REFERRALSTATUS$32, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "referralStatus" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus getReferralStatusArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus)get_store().find_element_user(REFERRALSTATUS$32, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "referralStatus" element
                       */
                      public int sizeOfReferralStatusArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(REFERRALSTATUS$32);
                        }
                      }
                      
                      /**
                       * Sets array of all "referralStatus" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setReferralStatusArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus[] referralStatusArray)
                      {
                        check_orphaned();
                        arraySetterHelper(referralStatusArray, REFERRALSTATUS$32);
                      }
                      
                      /**
                       * Sets ith "referralStatus" element
                       */
                      public void setReferralStatusArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus referralStatus)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus)get_store().find_element_user(REFERRALSTATUS$32, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(referralStatus);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "referralStatus" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus insertNewReferralStatus(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus)get_store().insert_element_user(REFERRALSTATUS$32, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "referralStatus" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus addNewReferralStatus()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus)get_store().add_element_user(REFERRALSTATUS$32);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "referralStatus" element
                       */
                      public void removeReferralStatus(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(REFERRALSTATUS$32, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "operationStatus1" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1[] getOperationStatus1Array()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(OPERATIONSTATUS1$34, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "operationStatus1" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 getOperationStatus1Array(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1)get_store().find_element_user(OPERATIONSTATUS1$34, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "operationStatus1" element
                       */
                      public int sizeOfOperationStatus1Array()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(OPERATIONSTATUS1$34);
                        }
                      }
                      
                      /**
                       * Sets array of all "operationStatus1" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setOperationStatus1Array(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1[] operationStatus1Array)
                      {
                        check_orphaned();
                        arraySetterHelper(operationStatus1Array, OPERATIONSTATUS1$34);
                      }
                      
                      /**
                       * Sets ith "operationStatus1" element
                       */
                      public void setOperationStatus1Array(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 operationStatus1)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1)get_store().find_element_user(OPERATIONSTATUS1$34, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(operationStatus1);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "operationStatus1" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 insertNewOperationStatus1(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1)get_store().insert_element_user(OPERATIONSTATUS1$34, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "operationStatus1" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 addNewOperationStatus1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1)get_store().add_element_user(OPERATIONSTATUS1$34);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "operationStatus1" element
                       */
                      public void removeOperationStatus1(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(OPERATIONSTATUS1$34, i);
                        }
                      }
                      
                      /**
                       * Gets the "operationStatus1EffDate" element
                       */
                      public java.lang.String getOperationStatus1EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OPERATIONSTATUS1EFFDATE$36, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "operationStatus1EffDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetOperationStatus1EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OPERATIONSTATUS1EFFDATE$36, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "operationStatus1EffDate" element
                       */
                      public boolean isSetOperationStatus1EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(OPERATIONSTATUS1EFFDATE$36) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "operationStatus1EffDate" element
                       */
                      public void setOperationStatus1EffDate(java.lang.String operationStatus1EffDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OPERATIONSTATUS1EFFDATE$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(OPERATIONSTATUS1EFFDATE$36);
                          }
                          target.setStringValue(operationStatus1EffDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "operationStatus1EffDate" element
                       */
                      public void xsetOperationStatus1EffDate(org.apache.xmlbeans.XmlString operationStatus1EffDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OPERATIONSTATUS1EFFDATE$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(OPERATIONSTATUS1EFFDATE$36);
                          }
                          target.set(operationStatus1EffDate);
                        }
                      }
                      
                      /**
                       * Unsets the "operationStatus1EffDate" element
                       */
                      public void unsetOperationStatus1EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(OPERATIONSTATUS1EFFDATE$36, 0);
                        }
                      }
                      
                      /**
                       * Gets the "borrowerExceptionChkInd" element
                       */
                      public java.lang.String getBorrowerExceptionChkInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BORROWEREXCEPTIONCHKIND$38, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "borrowerExceptionChkInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetBorrowerExceptionChkInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BORROWEREXCEPTIONCHKIND$38, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "borrowerExceptionChkInd" element
                       */
                      public boolean isSetBorrowerExceptionChkInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BORROWEREXCEPTIONCHKIND$38) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "borrowerExceptionChkInd" element
                       */
                      public void setBorrowerExceptionChkInd(java.lang.String borrowerExceptionChkInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BORROWEREXCEPTIONCHKIND$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BORROWEREXCEPTIONCHKIND$38);
                          }
                          target.setStringValue(borrowerExceptionChkInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "borrowerExceptionChkInd" element
                       */
                      public void xsetBorrowerExceptionChkInd(org.apache.xmlbeans.XmlString borrowerExceptionChkInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BORROWEREXCEPTIONCHKIND$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BORROWEREXCEPTIONCHKIND$38);
                          }
                          target.set(borrowerExceptionChkInd);
                        }
                      }
                      
                      /**
                       * Unsets the "borrowerExceptionChkInd" element
                       */
                      public void unsetBorrowerExceptionChkInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BORROWEREXCEPTIONCHKIND$38, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$40, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$40, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$40) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$40, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$40);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$40, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$40);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$40, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$42, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$42, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$42) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$42);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$42);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$42, 0);
                        }
                      }
                      /**
                       * An XML legalConstitution(@).
                       *
                       * This is a complex type.
                       */
                      public static class LegalConstitutionImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.LegalConstitution
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LegalConstitutionImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML customerType(@).
                       *
                       * This is a complex type.
                       */
                      public static class CustomerTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.CustomerType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CustomerTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML segmentCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class SegmentCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SegmentCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public SegmentCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML subSegmentCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class SubSegmentCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.SubSegmentCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public SubSegmentCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML baselCustomerSegment(@).
                       *
                       * This is a complex type.
                       */
                      public static class BaselCustomerSegmentImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSegment
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public BaselCustomerSegmentImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML baselCustomerSubSegment(@).
                       *
                       * This is a complex type.
                       */
                      public static class BaselCustomerSubSegmentImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BaselCustomerSubSegment
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public BaselCustomerSubSegmentImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML businessType(@).
                       *
                       * This is a complex type.
                       */
                      public static class BusinessTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.BusinessType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public BusinessTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML envRiskGrade(@).
                       *
                       * This is a complex type.
                       */
                      public static class EnvRiskGradeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.EnvRiskGrade
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public EnvRiskGradeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML referralStatus(@).
                       *
                       * This is a complex type.
                       */
                      public static class ReferralStatusImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.ReferralStatus
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ReferralStatusImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML operationStatus1(@).
                       *
                       * This is a complex type.
                       */
                      public static class OperationStatus1Impl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfile.OperationStatus1
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public OperationStatus1Impl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML registeredAddress(@).
                     *
                     * This is a complex type.
                     */
                    public static class RegisteredAddressImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.RegisteredAddress
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public RegisteredAddressImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName ADDRESSID$2 = 
                        new javax.xml.namespace.QName("", "addressId");
                      private static final javax.xml.namespace.QName ADDRESSTYPE$4 = 
                        new javax.xml.namespace.QName("", "addressType");
                      private static final javax.xml.namespace.QName ATTNPARTY$6 = 
                        new javax.xml.namespace.QName("", "attnParty");
                      private static final javax.xml.namespace.QName LINE1$8 = 
                        new javax.xml.namespace.QName("", "line1");
                      private static final javax.xml.namespace.QName LINE2$10 = 
                        new javax.xml.namespace.QName("", "line2");
                      private static final javax.xml.namespace.QName CITY$12 = 
                        new javax.xml.namespace.QName("", "city");
                      private static final javax.xml.namespace.QName STATE$14 = 
                        new javax.xml.namespace.QName("", "state");
                      private static final javax.xml.namespace.QName COUNTRY$16 = 
                        new javax.xml.namespace.QName("", "country");
                      private static final javax.xml.namespace.QName POSTCODE$18 = 
                        new javax.xml.namespace.QName("", "postCode");
                      private static final javax.xml.namespace.QName FAX$20 = 
                        new javax.xml.namespace.QName("", "fax");
                      private static final javax.xml.namespace.QName EMAIL$22 = 
                        new javax.xml.namespace.QName("", "email");
                      private static final javax.xml.namespace.QName PHONE$24 = 
                        new javax.xml.namespace.QName("", "phone");
                      private static final javax.xml.namespace.QName TELEX$26 = 
                        new javax.xml.namespace.QName("", "telex");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$28 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$30 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "addressId" element
                       */
                      public java.lang.String getAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ADDRESSID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "addressId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ADDRESSID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "addressId" element
                       */
                      public boolean isSetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ADDRESSID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "addressId" element
                       */
                      public void setAddressId(java.lang.String addressId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ADDRESSID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ADDRESSID$2);
                          }
                          target.setStringValue(addressId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "addressId" element
                       */
                      public void xsetAddressId(org.apache.xmlbeans.XmlString addressId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ADDRESSID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ADDRESSID$2);
                          }
                          target.set(addressId);
                        }
                      }
                      
                      /**
                       * Unsets the "addressId" element
                       */
                      public void unsetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ADDRESSID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "addressType" elements
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType[] getAddressTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ADDRESSTYPE$4, targetList);
                          com.stanchart.customer.AddressTypeDocument.AddressType[] result = new com.stanchart.customer.AddressTypeDocument.AddressType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType getAddressTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "addressType" element
                       */
                      public int sizeOfAddressTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ADDRESSTYPE$4);
                        }
                      }
                      
                      /**
                       * Sets array of all "addressType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setAddressTypeArray(com.stanchart.customer.AddressTypeDocument.AddressType[] addressTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(addressTypeArray, ADDRESSTYPE$4);
                      }
                      
                      /**
                       * Sets ith "addressType" element
                       */
                      public void setAddressTypeArray(int i, com.stanchart.customer.AddressTypeDocument.AddressType addressType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(addressType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType insertNewAddressType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().insert_element_user(ADDRESSTYPE$4, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType addNewAddressType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().add_element_user(ADDRESSTYPE$4);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "addressType" element
                       */
                      public void removeAddressType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ADDRESSTYPE$4, i);
                        }
                      }
                      
                      /**
                       * Gets the "attnParty" element
                       */
                      public java.lang.String getAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ATTNPARTY$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "attnParty" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ATTNPARTY$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "attnParty" element
                       */
                      public boolean isSetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ATTNPARTY$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "attnParty" element
                       */
                      public void setAttnParty(java.lang.String attnParty)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ATTNPARTY$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ATTNPARTY$6);
                          }
                          target.setStringValue(attnParty);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "attnParty" element
                       */
                      public void xsetAttnParty(org.apache.xmlbeans.XmlString attnParty)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ATTNPARTY$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ATTNPARTY$6);
                          }
                          target.set(attnParty);
                        }
                      }
                      
                      /**
                       * Unsets the "attnParty" element
                       */
                      public void unsetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ATTNPARTY$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "line1" element
                       */
                      public java.lang.String getLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE1$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "line1" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE1$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "line1" element
                       */
                      public boolean isSetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LINE1$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "line1" element
                       */
                      public void setLine1(java.lang.String line1)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE1$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LINE1$8);
                          }
                          target.setStringValue(line1);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "line1" element
                       */
                      public void xsetLine1(org.apache.xmlbeans.XmlString line1)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE1$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LINE1$8);
                          }
                          target.set(line1);
                        }
                      }
                      
                      /**
                       * Unsets the "line1" element
                       */
                      public void unsetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LINE1$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "line2" element
                       */
                      public java.lang.String getLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE2$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "line2" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE2$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "line2" element
                       */
                      public boolean isSetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LINE2$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "line2" element
                       */
                      public void setLine2(java.lang.String line2)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE2$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LINE2$10);
                          }
                          target.setStringValue(line2);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "line2" element
                       */
                      public void xsetLine2(org.apache.xmlbeans.XmlString line2)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE2$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LINE2$10);
                          }
                          target.set(line2);
                        }
                      }
                      
                      /**
                       * Unsets the "line2" element
                       */
                      public void unsetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LINE2$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "city" element
                       */
                      public java.lang.String getCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CITY$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "city" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CITY$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "city" element
                       */
                      public boolean isSetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CITY$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "city" element
                       */
                      public void setCity(java.lang.String city)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CITY$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CITY$12);
                          }
                          target.setStringValue(city);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "city" element
                       */
                      public void xsetCity(org.apache.xmlbeans.XmlString city)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CITY$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CITY$12);
                          }
                          target.set(city);
                        }
                      }
                      
                      /**
                       * Unsets the "city" element
                       */
                      public void unsetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CITY$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "state" element
                       */
                      public java.lang.String getState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STATE$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "state" element
                       */
                      public org.apache.xmlbeans.XmlString xgetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STATE$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "state" element
                       */
                      public boolean isSetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(STATE$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "state" element
                       */
                      public void setState(java.lang.String state)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STATE$14);
                          }
                          target.setStringValue(state);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "state" element
                       */
                      public void xsetState(org.apache.xmlbeans.XmlString state)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STATE$14);
                          }
                          target.set(state);
                        }
                      }
                      
                      /**
                       * Unsets the "state" element
                       */
                      public void unsetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(STATE$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "country" element
                       */
                      public java.lang.String getCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRY$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "country" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRY$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "country" element
                       */
                      public boolean isSetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COUNTRY$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "country" element
                       */
                      public void setCountry(java.lang.String country)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRY$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COUNTRY$16);
                          }
                          target.setStringValue(country);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "country" element
                       */
                      public void xsetCountry(org.apache.xmlbeans.XmlString country)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRY$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COUNTRY$16);
                          }
                          target.set(country);
                        }
                      }
                      
                      /**
                       * Unsets the "country" element
                       */
                      public void unsetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COUNTRY$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "postCode" element
                       */
                      public java.lang.String getPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POSTCODE$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "postCode" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POSTCODE$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "postCode" element
                       */
                      public boolean isSetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(POSTCODE$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "postCode" element
                       */
                      public void setPostCode(java.lang.String postCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POSTCODE$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(POSTCODE$18);
                          }
                          target.setStringValue(postCode);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "postCode" element
                       */
                      public void xsetPostCode(org.apache.xmlbeans.XmlString postCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POSTCODE$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(POSTCODE$18);
                          }
                          target.set(postCode);
                        }
                      }
                      
                      /**
                       * Unsets the "postCode" element
                       */
                      public void unsetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(POSTCODE$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "fax" element
                       */
                      public java.lang.String getFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FAX$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "fax" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FAX$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "fax" element
                       */
                      public boolean isSetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FAX$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "fax" element
                       */
                      public void setFax(java.lang.String fax)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FAX$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FAX$20);
                          }
                          target.setStringValue(fax);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "fax" element
                       */
                      public void xsetFax(org.apache.xmlbeans.XmlString fax)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FAX$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FAX$20);
                          }
                          target.set(fax);
                        }
                      }
                      
                      /**
                       * Unsets the "fax" element
                       */
                      public void unsetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FAX$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "email" element
                       */
                      public java.lang.String getEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMAIL$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "email" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMAIL$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "email" element
                       */
                      public boolean isSetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMAIL$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "email" element
                       */
                      public void setEmail(java.lang.String email)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMAIL$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMAIL$22);
                          }
                          target.setStringValue(email);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "email" element
                       */
                      public void xsetEmail(org.apache.xmlbeans.XmlString email)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMAIL$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMAIL$22);
                          }
                          target.set(email);
                        }
                      }
                      
                      /**
                       * Unsets the "email" element
                       */
                      public void unsetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMAIL$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "phone" element
                       */
                      public java.lang.String getPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PHONE$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "phone" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PHONE$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "phone" element
                       */
                      public boolean isSetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PHONE$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "phone" element
                       */
                      public void setPhone(java.lang.String phone)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PHONE$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PHONE$24);
                          }
                          target.setStringValue(phone);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "phone" element
                       */
                      public void xsetPhone(org.apache.xmlbeans.XmlString phone)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PHONE$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PHONE$24);
                          }
                          target.set(phone);
                        }
                      }
                      
                      /**
                       * Unsets the "phone" element
                       */
                      public void unsetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PHONE$24, 0);
                        }
                      }
                      
                      /**
                       * Gets the "telex" element
                       */
                      public java.lang.String getTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TELEX$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "telex" element
                       */
                      public org.apache.xmlbeans.XmlString xgetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TELEX$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "telex" element
                       */
                      public boolean isSetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(TELEX$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "telex" element
                       */
                      public void setTelex(java.lang.String telex)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TELEX$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(TELEX$26);
                          }
                          target.setStringValue(telex);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "telex" element
                       */
                      public void xsetTelex(org.apache.xmlbeans.XmlString telex)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TELEX$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(TELEX$26);
                          }
                          target.set(telex);
                        }
                      }
                      
                      /**
                       * Unsets the "telex" element
                       */
                      public void unsetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(TELEX$26, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$28);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$28);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$28, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$30);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$30);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$30, 0);
                        }
                      }
                    }
                    /**
                     * An XML creditGrade(@).
                     *
                     * This is a complex type.
                     */
                    public static class CreditGradeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public CreditGradeImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName CREDITGRADEID$2 = 
                        new javax.xml.namespace.QName("", "creditGradeId");
                      private static final javax.xml.namespace.QName CREDITGRADETYPE$4 = 
                        new javax.xml.namespace.QName("", "creditGradeType");
                      private static final javax.xml.namespace.QName CREDITGRADECODE$6 = 
                        new javax.xml.namespace.QName("", "creditGradeCode");
                      private static final javax.xml.namespace.QName CREDITGRADEEFFECTIVEDATE$8 = 
                        new javax.xml.namespace.QName("", "creditGradeEffectiveDate");
                      private static final javax.xml.namespace.QName CREDITGRADEREASONFORCHANGE$10 = 
                        new javax.xml.namespace.QName("", "creditGradeReasonForChange");
                      private static final javax.xml.namespace.QName APPROVERLOCATION$12 = 
                        new javax.xml.namespace.QName("", "approverLocation");
                      private static final javax.xml.namespace.QName COINNO$14 = 
                        new javax.xml.namespace.QName("", "coinNo");
                      private static final javax.xml.namespace.QName APPROVEREMPID$16 = 
                        new javax.xml.namespace.QName("", "approverEmpId");
                      private static final javax.xml.namespace.QName APPROVERNAME$18 = 
                        new javax.xml.namespace.QName("", "approverName");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$20 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$22 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "creditGradeId" element
                       */
                      public java.lang.String getCreditGradeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditGradeId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditGradeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditGradeId" element
                       */
                      public boolean isSetCreditGradeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITGRADEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditGradeId" element
                       */
                      public void setCreditGradeId(java.lang.String creditGradeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITGRADEID$2);
                          }
                          target.setStringValue(creditGradeId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditGradeId" element
                       */
                      public void xsetCreditGradeId(org.apache.xmlbeans.XmlString creditGradeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITGRADEID$2);
                          }
                          target.set(creditGradeId);
                        }
                      }
                      
                      /**
                       * Unsets the "creditGradeId" element
                       */
                      public void unsetCreditGradeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITGRADEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "creditGradeType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType[] getCreditGradeTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CREDITGRADETYPE$4, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "creditGradeType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType getCreditGradeTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType)get_store().find_element_user(CREDITGRADETYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "creditGradeType" element
                       */
                      public int sizeOfCreditGradeTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITGRADETYPE$4);
                        }
                      }
                      
                      /**
                       * Sets array of all "creditGradeType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCreditGradeTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType[] creditGradeTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(creditGradeTypeArray, CREDITGRADETYPE$4);
                      }
                      
                      /**
                       * Sets ith "creditGradeType" element
                       */
                      public void setCreditGradeTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType creditGradeType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType)get_store().find_element_user(CREDITGRADETYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(creditGradeType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "creditGradeType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType insertNewCreditGradeType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType)get_store().insert_element_user(CREDITGRADETYPE$4, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "creditGradeType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType addNewCreditGradeType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType)get_store().add_element_user(CREDITGRADETYPE$4);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "creditGradeType" element
                       */
                      public void removeCreditGradeType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITGRADETYPE$4, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "creditGradeCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode[] getCreditGradeCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CREDITGRADECODE$6, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "creditGradeCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode getCreditGradeCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode)get_store().find_element_user(CREDITGRADECODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "creditGradeCode" element
                       */
                      public int sizeOfCreditGradeCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITGRADECODE$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "creditGradeCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCreditGradeCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode[] creditGradeCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(creditGradeCodeArray, CREDITGRADECODE$6);
                      }
                      
                      /**
                       * Sets ith "creditGradeCode" element
                       */
                      public void setCreditGradeCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode creditGradeCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode)get_store().find_element_user(CREDITGRADECODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(creditGradeCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "creditGradeCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode insertNewCreditGradeCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode)get_store().insert_element_user(CREDITGRADECODE$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "creditGradeCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode addNewCreditGradeCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode)get_store().add_element_user(CREDITGRADECODE$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "creditGradeCode" element
                       */
                      public void removeCreditGradeCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITGRADECODE$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "creditGradeEffectiveDate" element
                       */
                      public java.lang.String getCreditGradeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditGradeEffectiveDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditGradeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEEFFECTIVEDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditGradeEffectiveDate" element
                       */
                      public boolean isSetCreditGradeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITGRADEEFFECTIVEDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditGradeEffectiveDate" element
                       */
                      public void setCreditGradeEffectiveDate(java.lang.String creditGradeEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITGRADEEFFECTIVEDATE$8);
                          }
                          target.setStringValue(creditGradeEffectiveDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditGradeEffectiveDate" element
                       */
                      public void xsetCreditGradeEffectiveDate(org.apache.xmlbeans.XmlString creditGradeEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITGRADEEFFECTIVEDATE$8);
                          }
                          target.set(creditGradeEffectiveDate);
                        }
                      }
                      
                      /**
                       * Unsets the "creditGradeEffectiveDate" element
                       */
                      public void unsetCreditGradeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITGRADEEFFECTIVEDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "creditGradeReasonForChange" element
                       */
                      public java.lang.String getCreditGradeReasonForChange()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEREASONFORCHANGE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditGradeReasonForChange" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditGradeReasonForChange()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEREASONFORCHANGE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditGradeReasonForChange" element
                       */
                      public boolean isSetCreditGradeReasonForChange()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITGRADEREASONFORCHANGE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditGradeReasonForChange" element
                       */
                      public void setCreditGradeReasonForChange(java.lang.String creditGradeReasonForChange)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITGRADEREASONFORCHANGE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITGRADEREASONFORCHANGE$10);
                          }
                          target.setStringValue(creditGradeReasonForChange);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditGradeReasonForChange" element
                       */
                      public void xsetCreditGradeReasonForChange(org.apache.xmlbeans.XmlString creditGradeReasonForChange)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITGRADEREASONFORCHANGE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITGRADEREASONFORCHANGE$10);
                          }
                          target.set(creditGradeReasonForChange);
                        }
                      }
                      
                      /**
                       * Unsets the "creditGradeReasonForChange" element
                       */
                      public void unsetCreditGradeReasonForChange()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITGRADEREASONFORCHANGE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "approverLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation[] getApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(APPROVERLOCATION$12, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "approverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation getApproverLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation)get_store().find_element_user(APPROVERLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "approverLocation" element
                       */
                      public int sizeOfApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(APPROVERLOCATION$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "approverLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setApproverLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation[] approverLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(approverLocationArray, APPROVERLOCATION$12);
                      }
                      
                      /**
                       * Sets ith "approverLocation" element
                       */
                      public void setApproverLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation approverLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation)get_store().find_element_user(APPROVERLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(approverLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "approverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation insertNewApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation)get_store().insert_element_user(APPROVERLOCATION$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "approverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation addNewApproverLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation)get_store().add_element_user(APPROVERLOCATION$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "approverLocation" element
                       */
                      public void removeApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(APPROVERLOCATION$12, i);
                        }
                      }
                      
                      /**
                       * Gets the "coinNo" element
                       */
                      public java.lang.String getCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COINNO$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coinNo" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COINNO$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coinNo" element
                       */
                      public boolean isSetCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COINNO$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coinNo" element
                       */
                      public void setCoinNo(java.lang.String coinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COINNO$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COINNO$14);
                          }
                          target.setStringValue(coinNo);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coinNo" element
                       */
                      public void xsetCoinNo(org.apache.xmlbeans.XmlString coinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COINNO$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COINNO$14);
                          }
                          target.set(coinNo);
                        }
                      }
                      
                      /**
                       * Unsets the "coinNo" element
                       */
                      public void unsetCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COINNO$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "approverEmpId" element
                       */
                      public java.lang.String getApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVEREMPID$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "approverEmpId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVEREMPID$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "approverEmpId" element
                       */
                      public boolean isSetApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(APPROVEREMPID$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "approverEmpId" element
                       */
                      public void setApproverEmpId(java.lang.String approverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVEREMPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPROVEREMPID$16);
                          }
                          target.setStringValue(approverEmpId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "approverEmpId" element
                       */
                      public void xsetApproverEmpId(org.apache.xmlbeans.XmlString approverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVEREMPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPROVEREMPID$16);
                          }
                          target.set(approverEmpId);
                        }
                      }
                      
                      /**
                       * Unsets the "approverEmpId" element
                       */
                      public void unsetApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(APPROVEREMPID$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "approverName" element
                       */
                      public java.lang.String getApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERNAME$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "approverName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERNAME$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "approverName" element
                       */
                      public boolean isSetApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(APPROVERNAME$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "approverName" element
                       */
                      public void setApproverName(java.lang.String approverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERNAME$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPROVERNAME$18);
                          }
                          target.setStringValue(approverName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "approverName" element
                       */
                      public void xsetApproverName(org.apache.xmlbeans.XmlString approverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERNAME$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPROVERNAME$18);
                          }
                          target.set(approverName);
                        }
                      }
                      
                      /**
                       * Unsets the "approverName" element
                       */
                      public void unsetApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(APPROVERNAME$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$22, 0);
                        }
                      }
                      /**
                       * An XML creditGradeType(@).
                       *
                       * This is a complex type.
                       */
                      public static class CreditGradeTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CreditGradeTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML creditGradeCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class CreditGradeCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.CreditGradeCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CreditGradeCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML approverLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class ApproverLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditGrade.ApproverLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ApproverLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName APPROVERLOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "approverLocationId");
                        private static final javax.xml.namespace.QName APPROVERCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "approverCountry");
                        private static final javax.xml.namespace.QName APPROVERORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "approverOrganization");
                        
                        
                        /**
                         * Gets the "approverLocationId" element
                         */
                        public java.lang.String getApproverLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERLOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "approverLocationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetApproverLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERLOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "approverLocationId" element
                         */
                        public boolean isSetApproverLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(APPROVERLOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "approverLocationId" element
                         */
                        public void setApproverLocationId(java.lang.String approverLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPROVERLOCATIONID$0);
                            }
                            target.setStringValue(approverLocationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "approverLocationId" element
                         */
                        public void xsetApproverLocationId(org.apache.xmlbeans.XmlString approverLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPROVERLOCATIONID$0);
                            }
                            target.set(approverLocationId);
                          }
                        }
                        
                        /**
                         * Unsets the "approverLocationId" element
                         */
                        public void unsetApproverLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(APPROVERLOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "approverCountry" element
                         */
                        public java.lang.String getApproverCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "approverCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetApproverCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "approverCountry" element
                         */
                        public boolean isSetApproverCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(APPROVERCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "approverCountry" element
                         */
                        public void setApproverCountry(java.lang.String approverCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPROVERCOUNTRY$2);
                            }
                            target.setStringValue(approverCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "approverCountry" element
                         */
                        public void xsetApproverCountry(org.apache.xmlbeans.XmlString approverCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPROVERCOUNTRY$2);
                            }
                            target.set(approverCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "approverCountry" element
                         */
                        public void unsetApproverCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(APPROVERCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "approverOrganization" element
                         */
                        public java.lang.String getApproverOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "approverOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetApproverOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "approverOrganization" element
                         */
                        public boolean isSetApproverOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(APPROVERORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "approverOrganization" element
                         */
                        public void setApproverOrganization(java.lang.String approverOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(APPROVERORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(APPROVERORGANIZATION$4);
                            }
                            target.setStringValue(approverOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "approverOrganization" element
                         */
                        public void xsetApproverOrganization(org.apache.xmlbeans.XmlString approverOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(APPROVERORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(APPROVERORGANIZATION$4);
                            }
                            target.set(approverOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "approverOrganization" element
                         */
                        public void unsetApproverOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(APPROVERORGANIZATION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML ISIC(@).
                     *
                     * This is a complex type.
                     */
                    public static class ISICImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public ISICImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName ISICID$2 = 
                        new javax.xml.namespace.QName("", "ISICId");
                      private static final javax.xml.namespace.QName ISICTYPE$4 = 
                        new javax.xml.namespace.QName("", "ISICType");
                      private static final javax.xml.namespace.QName ISICCODE$6 = 
                        new javax.xml.namespace.QName("", "ISICCode");
                      private static final javax.xml.namespace.QName ISICEFFECTIVEDATE$8 = 
                        new javax.xml.namespace.QName("", "ISICEffectiveDate");
                      private static final javax.xml.namespace.QName ISICWEIGHTAGE$10 = 
                        new javax.xml.namespace.QName("", "ISICWeightage");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$12 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$14 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "ISICId" element
                       */
                      public java.lang.String getISICId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ISICId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetISICId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ISICId" element
                       */
                      public boolean isSetISICId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ISICID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ISICId" element
                       */
                      public void setISICId(java.lang.String isicId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ISICID$2);
                          }
                          target.setStringValue(isicId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ISICId" element
                       */
                      public void xsetISICId(org.apache.xmlbeans.XmlString isicId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ISICID$2);
                          }
                          target.set(isicId);
                        }
                      }
                      
                      /**
                       * Unsets the "ISICId" element
                       */
                      public void unsetISICId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ISICID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "ISICType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType[] getISICTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ISICTYPE$4, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "ISICType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType getISICTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType)get_store().find_element_user(ISICTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "ISICType" element
                       */
                      public int sizeOfISICTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ISICTYPE$4);
                        }
                      }
                      
                      /**
                       * Sets array of all "ISICType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setISICTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType[] isicTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(isicTypeArray, ISICTYPE$4);
                      }
                      
                      /**
                       * Sets ith "ISICType" element
                       */
                      public void setISICTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType isicType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType)get_store().find_element_user(ISICTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(isicType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "ISICType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType insertNewISICType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType)get_store().insert_element_user(ISICTYPE$4, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "ISICType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType addNewISICType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType)get_store().add_element_user(ISICTYPE$4);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "ISICType" element
                       */
                      public void removeISICType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ISICTYPE$4, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "ISICCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode[] getISICCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ISICCODE$6, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "ISICCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode getISICCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode)get_store().find_element_user(ISICCODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "ISICCode" element
                       */
                      public int sizeOfISICCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ISICCODE$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "ISICCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setISICCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode[] isicCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(isicCodeArray, ISICCODE$6);
                      }
                      
                      /**
                       * Sets ith "ISICCode" element
                       */
                      public void setISICCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode isicCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode)get_store().find_element_user(ISICCODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(isicCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "ISICCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode insertNewISICCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode)get_store().insert_element_user(ISICCODE$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "ISICCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode addNewISICCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode)get_store().add_element_user(ISICCODE$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "ISICCode" element
                       */
                      public void removeISICCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ISICCODE$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "ISICEffectiveDate" element
                       */
                      public java.lang.String getISICEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ISICEffectiveDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetISICEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICEFFECTIVEDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ISICEffectiveDate" element
                       */
                      public boolean isSetISICEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ISICEFFECTIVEDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ISICEffectiveDate" element
                       */
                      public void setISICEffectiveDate(java.lang.String isicEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ISICEFFECTIVEDATE$8);
                          }
                          target.setStringValue(isicEffectiveDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ISICEffectiveDate" element
                       */
                      public void xsetISICEffectiveDate(org.apache.xmlbeans.XmlString isicEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ISICEFFECTIVEDATE$8);
                          }
                          target.set(isicEffectiveDate);
                        }
                      }
                      
                      /**
                       * Unsets the "ISICEffectiveDate" element
                       */
                      public void unsetISICEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ISICEFFECTIVEDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "ISICWeightage" element
                       */
                      public java.lang.String getISICWeightage()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICWEIGHTAGE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ISICWeightage" element
                       */
                      public org.apache.xmlbeans.XmlString xgetISICWeightage()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICWEIGHTAGE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ISICWeightage" element
                       */
                      public boolean isSetISICWeightage()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ISICWEIGHTAGE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ISICWeightage" element
                       */
                      public void setISICWeightage(java.lang.String isicWeightage)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ISICWEIGHTAGE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ISICWEIGHTAGE$10);
                          }
                          target.setStringValue(isicWeightage);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ISICWeightage" element
                       */
                      public void xsetISICWeightage(org.apache.xmlbeans.XmlString isicWeightage)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ISICWEIGHTAGE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ISICWEIGHTAGE$10);
                          }
                          target.set(isicWeightage);
                        }
                      }
                      
                      /**
                       * Unsets the "ISICWeightage" element
                       */
                      public void unsetISICWeightage()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ISICWEIGHTAGE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$12);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$12);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$14);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$14);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$14, 0);
                        }
                      }
                      /**
                       * An XML ISICType(@).
                       *
                       * This is a complex type.
                       */
                      public static class ISICTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ISICTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML ISICCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class ISICCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.ISIC.ISICCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ISICCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML creditStatus(@).
                     *
                     * This is a complex type.
                     */
                    public static class CreditStatusImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public CreditStatusImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName CREDITSTATUSID$2 = 
                        new javax.xml.namespace.QName("", "creditStatusId");
                      private static final javax.xml.namespace.QName CREDITSTATUSTYPE$4 = 
                        new javax.xml.namespace.QName("", "creditStatusType");
                      private static final javax.xml.namespace.QName CREDITSTATUSCODE$6 = 
                        new javax.xml.namespace.QName("", "creditStatusCode");
                      private static final javax.xml.namespace.QName CREDITSTATUSEFFECTIVEDATE$8 = 
                        new javax.xml.namespace.QName("", "creditStatusEffectiveDate");
                      private static final javax.xml.namespace.QName COMMENTS$10 = 
                        new javax.xml.namespace.QName("", "comments");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$12 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$14 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "creditStatusId" element
                       */
                      public java.lang.String getCreditStatusId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITSTATUSID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditStatusId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditStatusId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITSTATUSID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditStatusId" element
                       */
                      public boolean isSetCreditStatusId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITSTATUSID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditStatusId" element
                       */
                      public void setCreditStatusId(java.lang.String creditStatusId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITSTATUSID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITSTATUSID$2);
                          }
                          target.setStringValue(creditStatusId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditStatusId" element
                       */
                      public void xsetCreditStatusId(org.apache.xmlbeans.XmlString creditStatusId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITSTATUSID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITSTATUSID$2);
                          }
                          target.set(creditStatusId);
                        }
                      }
                      
                      /**
                       * Unsets the "creditStatusId" element
                       */
                      public void unsetCreditStatusId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITSTATUSID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "creditStatusType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType[] getCreditStatusTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CREDITSTATUSTYPE$4, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "creditStatusType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType getCreditStatusTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType)get_store().find_element_user(CREDITSTATUSTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "creditStatusType" element
                       */
                      public int sizeOfCreditStatusTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITSTATUSTYPE$4);
                        }
                      }
                      
                      /**
                       * Sets array of all "creditStatusType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCreditStatusTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType[] creditStatusTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(creditStatusTypeArray, CREDITSTATUSTYPE$4);
                      }
                      
                      /**
                       * Sets ith "creditStatusType" element
                       */
                      public void setCreditStatusTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType creditStatusType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType)get_store().find_element_user(CREDITSTATUSTYPE$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(creditStatusType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "creditStatusType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType insertNewCreditStatusType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType)get_store().insert_element_user(CREDITSTATUSTYPE$4, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "creditStatusType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType addNewCreditStatusType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType)get_store().add_element_user(CREDITSTATUSTYPE$4);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "creditStatusType" element
                       */
                      public void removeCreditStatusType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITSTATUSTYPE$4, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "creditStatusCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode[] getCreditStatusCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CREDITSTATUSCODE$6, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "creditStatusCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode getCreditStatusCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode)get_store().find_element_user(CREDITSTATUSCODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "creditStatusCode" element
                       */
                      public int sizeOfCreditStatusCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITSTATUSCODE$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "creditStatusCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCreditStatusCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode[] creditStatusCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(creditStatusCodeArray, CREDITSTATUSCODE$6);
                      }
                      
                      /**
                       * Sets ith "creditStatusCode" element
                       */
                      public void setCreditStatusCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode creditStatusCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode)get_store().find_element_user(CREDITSTATUSCODE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(creditStatusCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "creditStatusCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode insertNewCreditStatusCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode)get_store().insert_element_user(CREDITSTATUSCODE$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "creditStatusCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode addNewCreditStatusCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode)get_store().add_element_user(CREDITSTATUSCODE$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "creditStatusCode" element
                       */
                      public void removeCreditStatusCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITSTATUSCODE$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "creditStatusEffectiveDate" element
                       */
                      public java.lang.String getCreditStatusEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITSTATUSEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditStatusEffectiveDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditStatusEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITSTATUSEFFECTIVEDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditStatusEffectiveDate" element
                       */
                      public boolean isSetCreditStatusEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITSTATUSEFFECTIVEDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditStatusEffectiveDate" element
                       */
                      public void setCreditStatusEffectiveDate(java.lang.String creditStatusEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITSTATUSEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITSTATUSEFFECTIVEDATE$8);
                          }
                          target.setStringValue(creditStatusEffectiveDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditStatusEffectiveDate" element
                       */
                      public void xsetCreditStatusEffectiveDate(org.apache.xmlbeans.XmlString creditStatusEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITSTATUSEFFECTIVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITSTATUSEFFECTIVEDATE$8);
                          }
                          target.set(creditStatusEffectiveDate);
                        }
                      }
                      
                      /**
                       * Unsets the "creditStatusEffectiveDate" element
                       */
                      public void unsetCreditStatusEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITSTATUSEFFECTIVEDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "comments" element
                       */
                      public java.lang.String getComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "comments" element
                       */
                      public org.apache.xmlbeans.XmlString xgetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "comments" element
                       */
                      public boolean isSetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COMMENTS$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "comments" element
                       */
                      public void setComments(java.lang.String comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COMMENTS$10);
                          }
                          target.setStringValue(comments);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "comments" element
                       */
                      public void xsetComments(org.apache.xmlbeans.XmlString comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COMMENTS$10);
                          }
                          target.set(comments);
                        }
                      }
                      
                      /**
                       * Unsets the "comments" element
                       */
                      public void unsetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COMMENTS$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$12);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$12);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$14);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$14);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$14, 0);
                        }
                      }
                      /**
                       * An XML creditStatusType(@).
                       *
                       * This is a complex type.
                       */
                      public static class CreditStatusTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CreditStatusTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML creditStatusCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class CreditStatusCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.CreditStatus.CreditStatusCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CreditStatusCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML mainProfileInstructionRef(@).
                     *
                     * This is a complex type.
                     */
                    public static class MainProfileInstructionRefImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.MainProfileInstructionRef
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public MainProfileInstructionRefImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFMAPID$2 = 
                        new javax.xml.namespace.QName("", "instructionRefMapId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFID$4 = 
                        new javax.xml.namespace.QName("", "instructionRefId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFNUMBER$6 = 
                        new javax.xml.namespace.QName("", "instructionRefNumber");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFTYPE$8 = 
                        new javax.xml.namespace.QName("", "instructionRefType");
                      private static final javax.xml.namespace.QName INSTRUCTIONBOOKINGLOCATION$10 = 
                        new javax.xml.namespace.QName("", "instructionBookingLocation");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFAPPROVALDATE$12 = 
                        new javax.xml.namespace.QName("", "instructionRefApprovalDate");
                      private static final javax.xml.namespace.QName COMMENTS$14 = 
                        new javax.xml.namespace.QName("", "comments");
                      private static final javax.xml.namespace.QName USERGROUPIND$16 = 
                        new javax.xml.namespace.QName("", "userGroupInd");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$18 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$20 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefMapId" element
                       */
                      public java.lang.String getInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFMAPID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFMAPID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefMapId" element
                       */
                      public boolean isSetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFMAPID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefMapId" element
                       */
                      public void setInstructionRefMapId(java.lang.String instructionRefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFMAPID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFMAPID$2);
                          }
                          target.setStringValue(instructionRefMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefMapId" element
                       */
                      public void xsetInstructionRefMapId(org.apache.xmlbeans.XmlString instructionRefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFMAPID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFMAPID$2);
                          }
                          target.set(instructionRefMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefMapId" element
                       */
                      public void unsetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFMAPID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefId" element
                       */
                      public java.lang.String getInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefId" element
                       */
                      public boolean isSetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefId" element
                       */
                      public void setInstructionRefId(java.lang.String instructionRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFID$4);
                          }
                          target.setStringValue(instructionRefId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefId" element
                       */
                      public void xsetInstructionRefId(org.apache.xmlbeans.XmlString instructionRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFID$4);
                          }
                          target.set(instructionRefId);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefId" element
                       */
                      public void unsetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefNumber" element
                       */
                      public java.lang.String getInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFNUMBER$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefNumber" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFNUMBER$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefNumber" element
                       */
                      public boolean isSetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFNUMBER$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefNumber" element
                       */
                      public void setInstructionRefNumber(java.lang.String instructionRefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFNUMBER$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFNUMBER$6);
                          }
                          target.setStringValue(instructionRefNumber);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefNumber" element
                       */
                      public void xsetInstructionRefNumber(org.apache.xmlbeans.XmlString instructionRefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFNUMBER$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFNUMBER$6);
                          }
                          target.set(instructionRefNumber);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefNumber" element
                       */
                      public void unsetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFNUMBER$6, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "instructionRefType" elements
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] getInstructionRefTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(INSTRUCTIONREFTYPE$8, targetList);
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] result = new com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType getInstructionRefTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "instructionRefType" element
                       */
                      public int sizeOfInstructionRefTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFTYPE$8);
                        }
                      }
                      
                      /**
                       * Sets array of all "instructionRefType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setInstructionRefTypeArray(com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] instructionRefTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(instructionRefTypeArray, INSTRUCTIONREFTYPE$8);
                      }
                      
                      /**
                       * Sets ith "instructionRefType" element
                       */
                      public void setInstructionRefTypeArray(int i, com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType instructionRefType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(instructionRefType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType insertNewInstructionRefType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().insert_element_user(INSTRUCTIONREFTYPE$8, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType addNewInstructionRefType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().add_element_user(INSTRUCTIONREFTYPE$8);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "instructionRefType" element
                       */
                      public void removeInstructionRefType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFTYPE$8, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "instructionBookingLocation" elements
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] getInstructionBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(INSTRUCTIONBOOKINGLOCATION$10, targetList);
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] result = new com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation getInstructionBookingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "instructionBookingLocation" element
                       */
                      public int sizeOfInstructionBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONBOOKINGLOCATION$10);
                        }
                      }
                      
                      /**
                       * Sets array of all "instructionBookingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setInstructionBookingLocationArray(com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] instructionBookingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(instructionBookingLocationArray, INSTRUCTIONBOOKINGLOCATION$10);
                      }
                      
                      /**
                       * Sets ith "instructionBookingLocation" element
                       */
                      public void setInstructionBookingLocationArray(int i, com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation instructionBookingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(instructionBookingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation insertNewInstructionBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().insert_element_user(INSTRUCTIONBOOKINGLOCATION$10, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation addNewInstructionBookingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().add_element_user(INSTRUCTIONBOOKINGLOCATION$10);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "instructionBookingLocation" element
                       */
                      public void removeInstructionBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONBOOKINGLOCATION$10, i);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefApprovalDate" element
                       */
                      public java.lang.String getInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefApprovalDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefApprovalDate" element
                       */
                      public boolean isSetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFAPPROVALDATE$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefApprovalDate" element
                       */
                      public void setInstructionRefApprovalDate(java.lang.String instructionRefApprovalDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFAPPROVALDATE$12);
                          }
                          target.setStringValue(instructionRefApprovalDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefApprovalDate" element
                       */
                      public void xsetInstructionRefApprovalDate(org.apache.xmlbeans.XmlString instructionRefApprovalDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFAPPROVALDATE$12);
                          }
                          target.set(instructionRefApprovalDate);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefApprovalDate" element
                       */
                      public void unsetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFAPPROVALDATE$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "comments" element
                       */
                      public java.lang.String getComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "comments" element
                       */
                      public org.apache.xmlbeans.XmlString xgetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "comments" element
                       */
                      public boolean isSetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COMMENTS$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "comments" element
                       */
                      public void setComments(java.lang.String comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COMMENTS$14);
                          }
                          target.setStringValue(comments);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "comments" element
                       */
                      public void xsetComments(org.apache.xmlbeans.XmlString comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COMMENTS$14);
                          }
                          target.set(comments);
                        }
                      }
                      
                      /**
                       * Unsets the "comments" element
                       */
                      public void unsetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COMMENTS$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "userGroupInd" element
                       */
                      public java.lang.String getUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USERGROUPIND$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "userGroupInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USERGROUPIND$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "userGroupInd" element
                       */
                      public boolean isSetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(USERGROUPIND$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "userGroupInd" element
                       */
                      public void setUserGroupInd(java.lang.String userGroupInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USERGROUPIND$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(USERGROUPIND$16);
                          }
                          target.setStringValue(userGroupInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "userGroupInd" element
                       */
                      public void xsetUserGroupInd(org.apache.xmlbeans.XmlString userGroupInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USERGROUPIND$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(USERGROUPIND$16);
                          }
                          target.set(userGroupInd);
                        }
                      }
                      
                      /**
                       * Unsets the "userGroupInd" element
                       */
                      public void unsetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(USERGROUPIND$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$18);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$18);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$20);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$20);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$20, 0);
                        }
                      }
                    }
                    /**
                     * An XML knowYourCustomer(@).
                     *
                     * This is a complex type.
                     */
                    public static class KnowYourCustomerImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public KnowYourCustomerImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName KYCID$2 = 
                        new javax.xml.namespace.QName("", "KYCid");
                      private static final javax.xml.namespace.QName DOCUMENTORIGINATINGLOCATION$4 = 
                        new javax.xml.namespace.QName("", "documentOriginatingLocation");
                      private static final javax.xml.namespace.QName MLRISKRATING$6 = 
                        new javax.xml.namespace.QName("", "mlRiskRating");
                      private static final javax.xml.namespace.QName MLLASTREVIEWDATE$8 = 
                        new javax.xml.namespace.QName("", "mlLastReviewDate");
                      private static final javax.xml.namespace.QName MLNEXTREVIEWDATE$10 = 
                        new javax.xml.namespace.QName("", "mlNextReviewDate");
                      private static final javax.xml.namespace.QName FIRSTKYCREVIEW$12 = 
                        new javax.xml.namespace.QName("", "firstKYCreview");
                      private static final javax.xml.namespace.QName KYCDOCUMENTSUBMITTED$14 = 
                        new javax.xml.namespace.QName("", "KYCdocumentSubmitted");
                      private static final javax.xml.namespace.QName GICDOCUMENTSUBMITTED$16 = 
                        new javax.xml.namespace.QName("", "GICdocumentSubmitted");
                      private static final javax.xml.namespace.QName EXCEPTIONALAPPROVALOBTAINED$18 = 
                        new javax.xml.namespace.QName("", "exceptionalApprovalObtained");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$20 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$22 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "KYCid" element
                       */
                      public java.lang.String getKYCid()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(KYCID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "KYCid" element
                       */
                      public org.apache.xmlbeans.XmlString xgetKYCid()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(KYCID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "KYCid" element
                       */
                      public boolean isSetKYCid()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(KYCID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "KYCid" element
                       */
                      public void setKYCid(java.lang.String kyCid)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(KYCID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(KYCID$2);
                          }
                          target.setStringValue(kyCid);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "KYCid" element
                       */
                      public void xsetKYCid(org.apache.xmlbeans.XmlString kyCid)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(KYCID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(KYCID$2);
                          }
                          target.set(kyCid);
                        }
                      }
                      
                      /**
                       * Unsets the "KYCid" element
                       */
                      public void unsetKYCid()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(KYCID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "documentOriginatingLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation[] getDocumentOriginatingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(DOCUMENTORIGINATINGLOCATION$4, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "documentOriginatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation getDocumentOriginatingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation)get_store().find_element_user(DOCUMENTORIGINATINGLOCATION$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "documentOriginatingLocation" element
                       */
                      public int sizeOfDocumentOriginatingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(DOCUMENTORIGINATINGLOCATION$4);
                        }
                      }
                      
                      /**
                       * Sets array of all "documentOriginatingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setDocumentOriginatingLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation[] documentOriginatingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(documentOriginatingLocationArray, DOCUMENTORIGINATINGLOCATION$4);
                      }
                      
                      /**
                       * Sets ith "documentOriginatingLocation" element
                       */
                      public void setDocumentOriginatingLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation documentOriginatingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation)get_store().find_element_user(DOCUMENTORIGINATINGLOCATION$4, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(documentOriginatingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "documentOriginatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation insertNewDocumentOriginatingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation)get_store().insert_element_user(DOCUMENTORIGINATINGLOCATION$4, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "documentOriginatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation addNewDocumentOriginatingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation)get_store().add_element_user(DOCUMENTORIGINATINGLOCATION$4);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "documentOriginatingLocation" element
                       */
                      public void removeDocumentOriginatingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(DOCUMENTORIGINATINGLOCATION$4, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "mlRiskRating" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating[] getMlRiskRatingArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(MLRISKRATING$6, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "mlRiskRating" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating getMlRiskRatingArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating)get_store().find_element_user(MLRISKRATING$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "mlRiskRating" element
                       */
                      public int sizeOfMlRiskRatingArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(MLRISKRATING$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "mlRiskRating" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setMlRiskRatingArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating[] mlRiskRatingArray)
                      {
                        check_orphaned();
                        arraySetterHelper(mlRiskRatingArray, MLRISKRATING$6);
                      }
                      
                      /**
                       * Sets ith "mlRiskRating" element
                       */
                      public void setMlRiskRatingArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating mlRiskRating)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating)get_store().find_element_user(MLRISKRATING$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(mlRiskRating);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "mlRiskRating" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating insertNewMlRiskRating(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating)get_store().insert_element_user(MLRISKRATING$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "mlRiskRating" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating addNewMlRiskRating()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating)get_store().add_element_user(MLRISKRATING$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "mlRiskRating" element
                       */
                      public void removeMlRiskRating(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(MLRISKRATING$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "mlLastReviewDate" element
                       */
                      public java.lang.String getMlLastReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MLLASTREVIEWDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "mlLastReviewDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetMlLastReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MLLASTREVIEWDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "mlLastReviewDate" element
                       */
                      public boolean isSetMlLastReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(MLLASTREVIEWDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "mlLastReviewDate" element
                       */
                      public void setMlLastReviewDate(java.lang.String mlLastReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MLLASTREVIEWDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MLLASTREVIEWDATE$8);
                          }
                          target.setStringValue(mlLastReviewDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "mlLastReviewDate" element
                       */
                      public void xsetMlLastReviewDate(org.apache.xmlbeans.XmlString mlLastReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MLLASTREVIEWDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MLLASTREVIEWDATE$8);
                          }
                          target.set(mlLastReviewDate);
                        }
                      }
                      
                      /**
                       * Unsets the "mlLastReviewDate" element
                       */
                      public void unsetMlLastReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(MLLASTREVIEWDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "mlNextReviewDate" element
                       */
                      public java.lang.String getMlNextReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MLNEXTREVIEWDATE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "mlNextReviewDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetMlNextReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MLNEXTREVIEWDATE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "mlNextReviewDate" element
                       */
                      public boolean isSetMlNextReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(MLNEXTREVIEWDATE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "mlNextReviewDate" element
                       */
                      public void setMlNextReviewDate(java.lang.String mlNextReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MLNEXTREVIEWDATE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MLNEXTREVIEWDATE$10);
                          }
                          target.setStringValue(mlNextReviewDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "mlNextReviewDate" element
                       */
                      public void xsetMlNextReviewDate(org.apache.xmlbeans.XmlString mlNextReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(MLNEXTREVIEWDATE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(MLNEXTREVIEWDATE$10);
                          }
                          target.set(mlNextReviewDate);
                        }
                      }
                      
                      /**
                       * Unsets the "mlNextReviewDate" element
                       */
                      public void unsetMlNextReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(MLNEXTREVIEWDATE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "firstKYCreview" element
                       */
                      public java.lang.String getFirstKYCreview()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTKYCREVIEW$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "firstKYCreview" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFirstKYCreview()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTKYCREVIEW$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "firstKYCreview" element
                       */
                      public boolean isSetFirstKYCreview()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FIRSTKYCREVIEW$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "firstKYCreview" element
                       */
                      public void setFirstKYCreview(java.lang.String firstKYCreview)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTKYCREVIEW$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FIRSTKYCREVIEW$12);
                          }
                          target.setStringValue(firstKYCreview);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "firstKYCreview" element
                       */
                      public void xsetFirstKYCreview(org.apache.xmlbeans.XmlString firstKYCreview)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTKYCREVIEW$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FIRSTKYCREVIEW$12);
                          }
                          target.set(firstKYCreview);
                        }
                      }
                      
                      /**
                       * Unsets the "firstKYCreview" element
                       */
                      public void unsetFirstKYCreview()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FIRSTKYCREVIEW$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "KYCdocumentSubmitted" element
                       */
                      public java.lang.String getKYCdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(KYCDOCUMENTSUBMITTED$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "KYCdocumentSubmitted" element
                       */
                      public org.apache.xmlbeans.XmlString xgetKYCdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(KYCDOCUMENTSUBMITTED$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "KYCdocumentSubmitted" element
                       */
                      public boolean isSetKYCdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(KYCDOCUMENTSUBMITTED$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "KYCdocumentSubmitted" element
                       */
                      public void setKYCdocumentSubmitted(java.lang.String kyCdocumentSubmitted)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(KYCDOCUMENTSUBMITTED$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(KYCDOCUMENTSUBMITTED$14);
                          }
                          target.setStringValue(kyCdocumentSubmitted);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "KYCdocumentSubmitted" element
                       */
                      public void xsetKYCdocumentSubmitted(org.apache.xmlbeans.XmlString kyCdocumentSubmitted)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(KYCDOCUMENTSUBMITTED$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(KYCDOCUMENTSUBMITTED$14);
                          }
                          target.set(kyCdocumentSubmitted);
                        }
                      }
                      
                      /**
                       * Unsets the "KYCdocumentSubmitted" element
                       */
                      public void unsetKYCdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(KYCDOCUMENTSUBMITTED$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "GICdocumentSubmitted" element
                       */
                      public java.lang.String getGICdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(GICDOCUMENTSUBMITTED$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "GICdocumentSubmitted" element
                       */
                      public org.apache.xmlbeans.XmlString xgetGICdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(GICDOCUMENTSUBMITTED$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "GICdocumentSubmitted" element
                       */
                      public boolean isSetGICdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(GICDOCUMENTSUBMITTED$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "GICdocumentSubmitted" element
                       */
                      public void setGICdocumentSubmitted(java.lang.String giCdocumentSubmitted)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(GICDOCUMENTSUBMITTED$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(GICDOCUMENTSUBMITTED$16);
                          }
                          target.setStringValue(giCdocumentSubmitted);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "GICdocumentSubmitted" element
                       */
                      public void xsetGICdocumentSubmitted(org.apache.xmlbeans.XmlString giCdocumentSubmitted)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(GICDOCUMENTSUBMITTED$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(GICDOCUMENTSUBMITTED$16);
                          }
                          target.set(giCdocumentSubmitted);
                        }
                      }
                      
                      /**
                       * Unsets the "GICdocumentSubmitted" element
                       */
                      public void unsetGICdocumentSubmitted()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(GICDOCUMENTSUBMITTED$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "exceptionalApprovalObtained" element
                       */
                      public java.lang.String getExceptionalApprovalObtained()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXCEPTIONALAPPROVALOBTAINED$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "exceptionalApprovalObtained" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExceptionalApprovalObtained()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXCEPTIONALAPPROVALOBTAINED$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "exceptionalApprovalObtained" element
                       */
                      public boolean isSetExceptionalApprovalObtained()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXCEPTIONALAPPROVALOBTAINED$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "exceptionalApprovalObtained" element
                       */
                      public void setExceptionalApprovalObtained(java.lang.String exceptionalApprovalObtained)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXCEPTIONALAPPROVALOBTAINED$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXCEPTIONALAPPROVALOBTAINED$18);
                          }
                          target.setStringValue(exceptionalApprovalObtained);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "exceptionalApprovalObtained" element
                       */
                      public void xsetExceptionalApprovalObtained(org.apache.xmlbeans.XmlString exceptionalApprovalObtained)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXCEPTIONALAPPROVALOBTAINED$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXCEPTIONALAPPROVALOBTAINED$18);
                          }
                          target.set(exceptionalApprovalObtained);
                        }
                      }
                      
                      /**
                       * Unsets the "exceptionalApprovalObtained" element
                       */
                      public void unsetExceptionalApprovalObtained()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXCEPTIONALAPPROVALOBTAINED$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$22, 0);
                        }
                      }
                      /**
                       * An XML documentOriginatingLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class DocumentOriginatingLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.DocumentOriginatingLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public DocumentOriginatingLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName DOCUMENTORIGINATINGID$0 = 
                          new javax.xml.namespace.QName("", "documentOriginatingId");
                        private static final javax.xml.namespace.QName DOCUMENTORIGINATINGCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "documentOriginatingCountry");
                        private static final javax.xml.namespace.QName DOCUMENTORIGINATINGORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "documentOriginatingOrganization");
                        
                        
                        /**
                         * Gets the "documentOriginatingId" element
                         */
                        public java.lang.String getDocumentOriginatingId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "documentOriginatingId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetDocumentOriginatingId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "documentOriginatingId" element
                         */
                        public boolean isSetDocumentOriginatingId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(DOCUMENTORIGINATINGID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "documentOriginatingId" element
                         */
                        public void setDocumentOriginatingId(java.lang.String documentOriginatingId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DOCUMENTORIGINATINGID$0);
                            }
                            target.setStringValue(documentOriginatingId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "documentOriginatingId" element
                         */
                        public void xsetDocumentOriginatingId(org.apache.xmlbeans.XmlString documentOriginatingId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DOCUMENTORIGINATINGID$0);
                            }
                            target.set(documentOriginatingId);
                          }
                        }
                        
                        /**
                         * Unsets the "documentOriginatingId" element
                         */
                        public void unsetDocumentOriginatingId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(DOCUMENTORIGINATINGID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "documentOriginatingCountry" element
                         */
                        public java.lang.String getDocumentOriginatingCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "documentOriginatingCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetDocumentOriginatingCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "documentOriginatingCountry" element
                         */
                        public boolean isSetDocumentOriginatingCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(DOCUMENTORIGINATINGCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "documentOriginatingCountry" element
                         */
                        public void setDocumentOriginatingCountry(java.lang.String documentOriginatingCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DOCUMENTORIGINATINGCOUNTRY$2);
                            }
                            target.setStringValue(documentOriginatingCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "documentOriginatingCountry" element
                         */
                        public void xsetDocumentOriginatingCountry(org.apache.xmlbeans.XmlString documentOriginatingCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DOCUMENTORIGINATINGCOUNTRY$2);
                            }
                            target.set(documentOriginatingCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "documentOriginatingCountry" element
                         */
                        public void unsetDocumentOriginatingCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(DOCUMENTORIGINATINGCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "documentOriginatingOrganization" element
                         */
                        public java.lang.String getDocumentOriginatingOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "documentOriginatingOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetDocumentOriginatingOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "documentOriginatingOrganization" element
                         */
                        public boolean isSetDocumentOriginatingOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(DOCUMENTORIGINATINGORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "documentOriginatingOrganization" element
                         */
                        public void setDocumentOriginatingOrganization(java.lang.String documentOriginatingOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOCUMENTORIGINATINGORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DOCUMENTORIGINATINGORGANIZATION$4);
                            }
                            target.setStringValue(documentOriginatingOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "documentOriginatingOrganization" element
                         */
                        public void xsetDocumentOriginatingOrganization(org.apache.xmlbeans.XmlString documentOriginatingOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOCUMENTORIGINATINGORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DOCUMENTORIGINATINGORGANIZATION$4);
                            }
                            target.set(documentOriginatingOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "documentOriginatingOrganization" element
                         */
                        public void unsetDocumentOriginatingOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(DOCUMENTORIGINATINGORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML mlRiskRating(@).
                       *
                       * This is a complex type.
                       */
                      public static class MlRiskRatingImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.MainProfileDetails.KnowYourCustomer.MlRiskRating
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public MlRiskRatingImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                }
                /**
                 * An XML subProfileDetails(@).
                 *
                 * This is a complex type.
                 */
                public static class SubProfileDetailsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails
                {
                    private static final long serialVersionUID = 1L;
                    
                    public SubProfileDetailsImpl(org.apache.xmlbeans.SchemaType sType)
                    {
                      super(sType);
                    }
                    
                    private static final javax.xml.namespace.QName SUBPROFILE$0 = 
                      new javax.xml.namespace.QName("", "subProfile");
                    private static final javax.xml.namespace.QName OFFICIALADDRESS$2 = 
                      new javax.xml.namespace.QName("", "officialAddress");
                    private static final javax.xml.namespace.QName EMPRELATIONSHIP$4 = 
                      new javax.xml.namespace.QName("", "empRelationship");
                    private static final javax.xml.namespace.QName SUBPROFILEINSTRUCTIONREF$6 = 
                      new javax.xml.namespace.QName("", "subProfileInstructionRef");
                    private static final javax.xml.namespace.QName LIMITPROFILE$8 = 
                      new javax.xml.namespace.QName("", "limitProfile");
                    private static final javax.xml.namespace.QName POLICYEXCEPTION$10 = 
                      new javax.xml.namespace.QName("", "policyException");
                    private static final javax.xml.namespace.QName LIMITS$12 = 
                      new javax.xml.namespace.QName("", "limits");
                    private static final javax.xml.namespace.QName LIMITSSYSXREFMAP$14 = 
                      new javax.xml.namespace.QName("", "limitsSysXRefMap");
                    private static final javax.xml.namespace.QName LIMITSAPPRSECMAP$16 = 
                      new javax.xml.namespace.QName("", "limitsApprSecMap");
                    private static final javax.xml.namespace.QName COBORROWERLIMITS$18 = 
                      new javax.xml.namespace.QName("", "coborrowerLimits");
                    private static final javax.xml.namespace.QName COBORROWERLMTSSECMAP$20 = 
                      new javax.xml.namespace.QName("", "coborrowerLmtsSecMap");
                    private static final javax.xml.namespace.QName COBORROWSYSXREFMAP$22 = 
                      new javax.xml.namespace.QName("", "coborrowSysXRefMap");
                    private static final javax.xml.namespace.QName SUBPROFILESYSTEMXREF$24 = 
                      new javax.xml.namespace.QName("", "subProfileSystemXRef");
                    
                    
                    /**
                     * Gets array of all "subProfile" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile[] getSubProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(SUBPROFILE$0, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "subProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile getSubProfileArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile)get_store().find_element_user(SUBPROFILE$0, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "subProfile" element
                     */
                    public int sizeOfSubProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(SUBPROFILE$0);
                      }
                    }
                    
                    /**
                     * Sets array of all "subProfile" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setSubProfileArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile[] subProfileArray)
                    {
                      check_orphaned();
                      arraySetterHelper(subProfileArray, SUBPROFILE$0);
                    }
                    
                    /**
                     * Sets ith "subProfile" element
                     */
                    public void setSubProfileArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile subProfile)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile)get_store().find_element_user(SUBPROFILE$0, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(subProfile);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "subProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile insertNewSubProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile)get_store().insert_element_user(SUBPROFILE$0, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "subProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile addNewSubProfile()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile)get_store().add_element_user(SUBPROFILE$0);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "subProfile" element
                     */
                    public void removeSubProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(SUBPROFILE$0, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "officialAddress" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress[] getOfficialAddressArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(OFFICIALADDRESS$2, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "officialAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress getOfficialAddressArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress)get_store().find_element_user(OFFICIALADDRESS$2, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "officialAddress" element
                     */
                    public int sizeOfOfficialAddressArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(OFFICIALADDRESS$2);
                      }
                    }
                    
                    /**
                     * Sets array of all "officialAddress" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setOfficialAddressArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress[] officialAddressArray)
                    {
                      check_orphaned();
                      arraySetterHelper(officialAddressArray, OFFICIALADDRESS$2);
                    }
                    
                    /**
                     * Sets ith "officialAddress" element
                     */
                    public void setOfficialAddressArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress officialAddress)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress)get_store().find_element_user(OFFICIALADDRESS$2, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(officialAddress);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "officialAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress insertNewOfficialAddress(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress)get_store().insert_element_user(OFFICIALADDRESS$2, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "officialAddress" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress addNewOfficialAddress()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress)get_store().add_element_user(OFFICIALADDRESS$2);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "officialAddress" element
                     */
                    public void removeOfficialAddress(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(OFFICIALADDRESS$2, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "empRelationship" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship[] getEmpRelationshipArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(EMPRELATIONSHIP$4, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "empRelationship" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship getEmpRelationshipArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship)get_store().find_element_user(EMPRELATIONSHIP$4, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "empRelationship" element
                     */
                    public int sizeOfEmpRelationshipArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(EMPRELATIONSHIP$4);
                      }
                    }
                    
                    /**
                     * Sets array of all "empRelationship" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setEmpRelationshipArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship[] empRelationshipArray)
                    {
                      check_orphaned();
                      arraySetterHelper(empRelationshipArray, EMPRELATIONSHIP$4);
                    }
                    
                    /**
                     * Sets ith "empRelationship" element
                     */
                    public void setEmpRelationshipArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship empRelationship)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship)get_store().find_element_user(EMPRELATIONSHIP$4, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(empRelationship);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "empRelationship" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship insertNewEmpRelationship(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship)get_store().insert_element_user(EMPRELATIONSHIP$4, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "empRelationship" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship addNewEmpRelationship()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship)get_store().add_element_user(EMPRELATIONSHIP$4);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "empRelationship" element
                     */
                    public void removeEmpRelationship(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(EMPRELATIONSHIP$4, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "subProfileInstructionRef" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef[] getSubProfileInstructionRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(SUBPROFILEINSTRUCTIONREF$6, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "subProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef getSubProfileInstructionRefArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef)get_store().find_element_user(SUBPROFILEINSTRUCTIONREF$6, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "subProfileInstructionRef" element
                     */
                    public int sizeOfSubProfileInstructionRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(SUBPROFILEINSTRUCTIONREF$6);
                      }
                    }
                    
                    /**
                     * Sets array of all "subProfileInstructionRef" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setSubProfileInstructionRefArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef[] subProfileInstructionRefArray)
                    {
                      check_orphaned();
                      arraySetterHelper(subProfileInstructionRefArray, SUBPROFILEINSTRUCTIONREF$6);
                    }
                    
                    /**
                     * Sets ith "subProfileInstructionRef" element
                     */
                    public void setSubProfileInstructionRefArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef subProfileInstructionRef)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef)get_store().find_element_user(SUBPROFILEINSTRUCTIONREF$6, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(subProfileInstructionRef);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "subProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef insertNewSubProfileInstructionRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef)get_store().insert_element_user(SUBPROFILEINSTRUCTIONREF$6, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "subProfileInstructionRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef addNewSubProfileInstructionRef()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef)get_store().add_element_user(SUBPROFILEINSTRUCTIONREF$6);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "subProfileInstructionRef" element
                     */
                    public void removeSubProfileInstructionRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(SUBPROFILEINSTRUCTIONREF$6, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "limitProfile" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile[] getLimitProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(LIMITPROFILE$8, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "limitProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile getLimitProfileArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile)get_store().find_element_user(LIMITPROFILE$8, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "limitProfile" element
                     */
                    public int sizeOfLimitProfileArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(LIMITPROFILE$8);
                      }
                    }
                    
                    /**
                     * Sets array of all "limitProfile" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setLimitProfileArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile[] limitProfileArray)
                    {
                      check_orphaned();
                      arraySetterHelper(limitProfileArray, LIMITPROFILE$8);
                    }
                    
                    /**
                     * Sets ith "limitProfile" element
                     */
                    public void setLimitProfileArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile limitProfile)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile)get_store().find_element_user(LIMITPROFILE$8, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(limitProfile);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "limitProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile insertNewLimitProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile)get_store().insert_element_user(LIMITPROFILE$8, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "limitProfile" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile addNewLimitProfile()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile)get_store().add_element_user(LIMITPROFILE$8);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "limitProfile" element
                     */
                    public void removeLimitProfile(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(LIMITPROFILE$8, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "policyException" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException[] getPolicyExceptionArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(POLICYEXCEPTION$10, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "policyException" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException getPolicyExceptionArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException)get_store().find_element_user(POLICYEXCEPTION$10, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "policyException" element
                     */
                    public int sizeOfPolicyExceptionArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(POLICYEXCEPTION$10);
                      }
                    }
                    
                    /**
                     * Sets array of all "policyException" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setPolicyExceptionArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException[] policyExceptionArray)
                    {
                      check_orphaned();
                      arraySetterHelper(policyExceptionArray, POLICYEXCEPTION$10);
                    }
                    
                    /**
                     * Sets ith "policyException" element
                     */
                    public void setPolicyExceptionArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException policyException)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException)get_store().find_element_user(POLICYEXCEPTION$10, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(policyException);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "policyException" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException insertNewPolicyException(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException)get_store().insert_element_user(POLICYEXCEPTION$10, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "policyException" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException addNewPolicyException()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException)get_store().add_element_user(POLICYEXCEPTION$10);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "policyException" element
                     */
                    public void removePolicyException(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(POLICYEXCEPTION$10, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "limits" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits[] getLimitsArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(LIMITS$12, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "limits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits getLimitsArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits)get_store().find_element_user(LIMITS$12, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "limits" element
                     */
                    public int sizeOfLimitsArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(LIMITS$12);
                      }
                    }
                    
                    /**
                     * Sets array of all "limits" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setLimitsArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits[] limitsArray)
                    {
                      check_orphaned();
                      arraySetterHelper(limitsArray, LIMITS$12);
                    }
                    
                    /**
                     * Sets ith "limits" element
                     */
                    public void setLimitsArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits limits)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits)get_store().find_element_user(LIMITS$12, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(limits);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "limits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits insertNewLimits(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits)get_store().insert_element_user(LIMITS$12, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "limits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits addNewLimits()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits)get_store().add_element_user(LIMITS$12);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "limits" element
                     */
                    public void removeLimits(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(LIMITS$12, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "limitsSysXRefMap" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap[] getLimitsSysXRefMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(LIMITSSYSXREFMAP$14, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "limitsSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap getLimitsSysXRefMapArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap)get_store().find_element_user(LIMITSSYSXREFMAP$14, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "limitsSysXRefMap" element
                     */
                    public int sizeOfLimitsSysXRefMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(LIMITSSYSXREFMAP$14);
                      }
                    }
                    
                    /**
                     * Sets array of all "limitsSysXRefMap" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setLimitsSysXRefMapArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap[] limitsSysXRefMapArray)
                    {
                      check_orphaned();
                      arraySetterHelper(limitsSysXRefMapArray, LIMITSSYSXREFMAP$14);
                    }
                    
                    /**
                     * Sets ith "limitsSysXRefMap" element
                     */
                    public void setLimitsSysXRefMapArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap limitsSysXRefMap)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap)get_store().find_element_user(LIMITSSYSXREFMAP$14, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(limitsSysXRefMap);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "limitsSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap insertNewLimitsSysXRefMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap)get_store().insert_element_user(LIMITSSYSXREFMAP$14, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "limitsSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap addNewLimitsSysXRefMap()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap)get_store().add_element_user(LIMITSSYSXREFMAP$14);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "limitsSysXRefMap" element
                     */
                    public void removeLimitsSysXRefMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(LIMITSSYSXREFMAP$14, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "limitsApprSecMap" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap[] getLimitsApprSecMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(LIMITSAPPRSECMAP$16, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "limitsApprSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap getLimitsApprSecMapArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap)get_store().find_element_user(LIMITSAPPRSECMAP$16, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "limitsApprSecMap" element
                     */
                    public int sizeOfLimitsApprSecMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(LIMITSAPPRSECMAP$16);
                      }
                    }
                    
                    /**
                     * Sets array of all "limitsApprSecMap" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setLimitsApprSecMapArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap[] limitsApprSecMapArray)
                    {
                      check_orphaned();
                      arraySetterHelper(limitsApprSecMapArray, LIMITSAPPRSECMAP$16);
                    }
                    
                    /**
                     * Sets ith "limitsApprSecMap" element
                     */
                    public void setLimitsApprSecMapArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap limitsApprSecMap)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap)get_store().find_element_user(LIMITSAPPRSECMAP$16, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(limitsApprSecMap);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "limitsApprSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap insertNewLimitsApprSecMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap)get_store().insert_element_user(LIMITSAPPRSECMAP$16, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "limitsApprSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap addNewLimitsApprSecMap()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap)get_store().add_element_user(LIMITSAPPRSECMAP$16);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "limitsApprSecMap" element
                     */
                    public void removeLimitsApprSecMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(LIMITSAPPRSECMAP$16, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "coborrowerLimits" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits[] getCoborrowerLimitsArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(COBORROWERLIMITS$18, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "coborrowerLimits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits getCoborrowerLimitsArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits)get_store().find_element_user(COBORROWERLIMITS$18, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "coborrowerLimits" element
                     */
                    public int sizeOfCoborrowerLimitsArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(COBORROWERLIMITS$18);
                      }
                    }
                    
                    /**
                     * Sets array of all "coborrowerLimits" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setCoborrowerLimitsArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits[] coborrowerLimitsArray)
                    {
                      check_orphaned();
                      arraySetterHelper(coborrowerLimitsArray, COBORROWERLIMITS$18);
                    }
                    
                    /**
                     * Sets ith "coborrowerLimits" element
                     */
                    public void setCoborrowerLimitsArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits coborrowerLimits)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits)get_store().find_element_user(COBORROWERLIMITS$18, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(coborrowerLimits);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "coborrowerLimits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits insertNewCoborrowerLimits(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits)get_store().insert_element_user(COBORROWERLIMITS$18, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "coborrowerLimits" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits addNewCoborrowerLimits()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits)get_store().add_element_user(COBORROWERLIMITS$18);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "coborrowerLimits" element
                     */
                    public void removeCoborrowerLimits(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(COBORROWERLIMITS$18, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "coborrowerLmtsSecMap" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap[] getCoborrowerLmtsSecMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(COBORROWERLMTSSECMAP$20, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "coborrowerLmtsSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap getCoborrowerLmtsSecMapArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap)get_store().find_element_user(COBORROWERLMTSSECMAP$20, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "coborrowerLmtsSecMap" element
                     */
                    public int sizeOfCoborrowerLmtsSecMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(COBORROWERLMTSSECMAP$20);
                      }
                    }
                    
                    /**
                     * Sets array of all "coborrowerLmtsSecMap" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setCoborrowerLmtsSecMapArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap[] coborrowerLmtsSecMapArray)
                    {
                      check_orphaned();
                      arraySetterHelper(coborrowerLmtsSecMapArray, COBORROWERLMTSSECMAP$20);
                    }
                    
                    /**
                     * Sets ith "coborrowerLmtsSecMap" element
                     */
                    public void setCoborrowerLmtsSecMapArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap coborrowerLmtsSecMap)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap)get_store().find_element_user(COBORROWERLMTSSECMAP$20, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(coborrowerLmtsSecMap);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "coborrowerLmtsSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap insertNewCoborrowerLmtsSecMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap)get_store().insert_element_user(COBORROWERLMTSSECMAP$20, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "coborrowerLmtsSecMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap addNewCoborrowerLmtsSecMap()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap)get_store().add_element_user(COBORROWERLMTSSECMAP$20);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "coborrowerLmtsSecMap" element
                     */
                    public void removeCoborrowerLmtsSecMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(COBORROWERLMTSSECMAP$20, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "coborrowSysXRefMap" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap[] getCoborrowSysXRefMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(COBORROWSYSXREFMAP$22, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "coborrowSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap getCoborrowSysXRefMapArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap)get_store().find_element_user(COBORROWSYSXREFMAP$22, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "coborrowSysXRefMap" element
                     */
                    public int sizeOfCoborrowSysXRefMapArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(COBORROWSYSXREFMAP$22);
                      }
                    }
                    
                    /**
                     * Sets array of all "coborrowSysXRefMap" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setCoborrowSysXRefMapArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap[] coborrowSysXRefMapArray)
                    {
                      check_orphaned();
                      arraySetterHelper(coborrowSysXRefMapArray, COBORROWSYSXREFMAP$22);
                    }
                    
                    /**
                     * Sets ith "coborrowSysXRefMap" element
                     */
                    public void setCoborrowSysXRefMapArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap coborrowSysXRefMap)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap)get_store().find_element_user(COBORROWSYSXREFMAP$22, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(coborrowSysXRefMap);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "coborrowSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap insertNewCoborrowSysXRefMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap)get_store().insert_element_user(COBORROWSYSXREFMAP$22, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "coborrowSysXRefMap" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap addNewCoborrowSysXRefMap()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap)get_store().add_element_user(COBORROWSYSXREFMAP$22);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "coborrowSysXRefMap" element
                     */
                    public void removeCoborrowSysXRefMap(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(COBORROWSYSXREFMAP$22, i);
                      }
                    }
                    
                    /**
                     * Gets array of all "subProfileSystemXRef" elements
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef[] getSubProfileSystemXRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        java.util.List targetList = new java.util.ArrayList();
                        get_store().find_all_element_users(SUBPROFILESYSTEMXREF$24, targetList);
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef[targetList.size()];
                        targetList.toArray(result);
                        return result;
                      }
                    }
                    
                    /**
                     * Gets ith "subProfileSystemXRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef getSubProfileSystemXRefArray(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef)get_store().find_element_user(SUBPROFILESYSTEMXREF$24, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        return target;
                      }
                    }
                    
                    /**
                     * Returns number of "subProfileSystemXRef" element
                     */
                    public int sizeOfSubProfileSystemXRefArray()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        return get_store().count_elements(SUBPROFILESYSTEMXREF$24);
                      }
                    }
                    
                    /**
                     * Sets array of all "subProfileSystemXRef" element  WARNING: This method is not atomicaly synchronized.
                     */
                    public void setSubProfileSystemXRefArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef[] subProfileSystemXRefArray)
                    {
                      check_orphaned();
                      arraySetterHelper(subProfileSystemXRefArray, SUBPROFILESYSTEMXREF$24);
                    }
                    
                    /**
                     * Sets ith "subProfileSystemXRef" element
                     */
                    public void setSubProfileSystemXRefArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef subProfileSystemXRef)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef)get_store().find_element_user(SUBPROFILESYSTEMXREF$24, i);
                        if (target == null)
                        {
                          throw new IndexOutOfBoundsException();
                        }
                        target.set(subProfileSystemXRef);
                      }
                    }
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "subProfileSystemXRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef insertNewSubProfileSystemXRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef)get_store().insert_element_user(SUBPROFILESYSTEMXREF$24, i);
                        return target;
                      }
                    }
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "subProfileSystemXRef" element
                     */
                    public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef addNewSubProfileSystemXRef()
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef target = null;
                        target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef)get_store().add_element_user(SUBPROFILESYSTEMXREF$24);
                        return target;
                      }
                    }
                    
                    /**
                     * Removes the ith "subProfileSystemXRef" element
                     */
                    public void removeSubProfileSystemXRef(int i)
                    {
                      synchronized (monitor())
                      {
                        check_orphaned();
                        get_store().remove_element(SUBPROFILESYSTEMXREF$24, i);
                      }
                    }
                    /**
                     * An XML subProfile(@).
                     *
                     * This is a complex type.
                     */
                    public static class SubProfileImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public SubProfileImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName SUBPROFILENAME$4 = 
                        new javax.xml.namespace.QName("", "subProfileName");
                      private static final javax.xml.namespace.QName DOMICILECOUNTRY$6 = 
                        new javax.xml.namespace.QName("", "domicileCountry");
                      private static final javax.xml.namespace.QName DOMICILECOUNTRYREGISTRATIONNUMBER$8 = 
                        new javax.xml.namespace.QName("", "domicileCountryRegistrationNumber");
                      private static final javax.xml.namespace.QName SWIFTCOUNTRYCODE$10 = 
                        new javax.xml.namespace.QName("", "swiftCountryCode");
                      private static final javax.xml.namespace.QName CUSTOMERORGTYPE$12 = 
                        new javax.xml.namespace.QName("", "CustomerOrgType");
                      private static final javax.xml.namespace.QName DISCLOSUREAGREEMENTINDICATOR$14 = 
                        new javax.xml.namespace.QName("", "disclosureAgreementIndicator");
                      private static final javax.xml.namespace.QName AGREEMENTDATE$16 = 
                        new javax.xml.namespace.QName("", "agreementDate");
                      private static final javax.xml.namespace.QName LANGUAGECODE$18 = 
                        new javax.xml.namespace.QName("", "languageCode");
                      private static final javax.xml.namespace.QName RELATIONSHIPSTARTDATE$20 = 
                        new javax.xml.namespace.QName("", "relationshipStartDate");
                      private static final javax.xml.namespace.QName SERVICELEVELPRIORITY$22 = 
                        new javax.xml.namespace.QName("", "serviceLevelPriority");
                      private static final javax.xml.namespace.QName TREATURYIND$24 = 
                        new javax.xml.namespace.QName("", "treaturyInd");
                      private static final javax.xml.namespace.QName OPERATIONSTATUS2$26 = 
                        new javax.xml.namespace.QName("", "operationStatus2");
                      private static final javax.xml.namespace.QName OPERATIONSTATUS2EFFDATE$28 = 
                        new javax.xml.namespace.QName("", "operationStatus2EffDate");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$30 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$32 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileName" element
                       */
                      public java.lang.String getSubProfileName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILENAME$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILENAME$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileName" element
                       */
                      public boolean isSetSubProfileName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILENAME$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileName" element
                       */
                      public void setSubProfileName(java.lang.String subProfileName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILENAME$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILENAME$4);
                          }
                          target.setStringValue(subProfileName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileName" element
                       */
                      public void xsetSubProfileName(org.apache.xmlbeans.XmlString subProfileName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILENAME$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILENAME$4);
                          }
                          target.set(subProfileName);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileName" element
                       */
                      public void unsetSubProfileName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILENAME$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "domicileCountry" element
                       */
                      public java.lang.String getDomicileCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOMICILECOUNTRY$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "domicileCountry" element
                       */
                      public org.apache.xmlbeans.XmlString xgetDomicileCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOMICILECOUNTRY$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "domicileCountry" element
                       */
                      public boolean isSetDomicileCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(DOMICILECOUNTRY$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "domicileCountry" element
                       */
                      public void setDomicileCountry(java.lang.String domicileCountry)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOMICILECOUNTRY$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DOMICILECOUNTRY$6);
                          }
                          target.setStringValue(domicileCountry);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "domicileCountry" element
                       */
                      public void xsetDomicileCountry(org.apache.xmlbeans.XmlString domicileCountry)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOMICILECOUNTRY$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DOMICILECOUNTRY$6);
                          }
                          target.set(domicileCountry);
                        }
                      }
                      
                      /**
                       * Unsets the "domicileCountry" element
                       */
                      public void unsetDomicileCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(DOMICILECOUNTRY$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "domicileCountryRegistrationNumber" element
                       */
                      public java.lang.String getDomicileCountryRegistrationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "domicileCountryRegistrationNumber" element
                       */
                      public org.apache.xmlbeans.XmlString xgetDomicileCountryRegistrationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "domicileCountryRegistrationNumber" element
                       */
                      public boolean isSetDomicileCountryRegistrationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(DOMICILECOUNTRYREGISTRATIONNUMBER$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "domicileCountryRegistrationNumber" element
                       */
                      public void setDomicileCountryRegistrationNumber(java.lang.String domicileCountryRegistrationNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8);
                          }
                          target.setStringValue(domicileCountryRegistrationNumber);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "domicileCountryRegistrationNumber" element
                       */
                      public void xsetDomicileCountryRegistrationNumber(org.apache.xmlbeans.XmlString domicileCountryRegistrationNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DOMICILECOUNTRYREGISTRATIONNUMBER$8);
                          }
                          target.set(domicileCountryRegistrationNumber);
                        }
                      }
                      
                      /**
                       * Unsets the "domicileCountryRegistrationNumber" element
                       */
                      public void unsetDomicileCountryRegistrationNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(DOMICILECOUNTRYREGISTRATIONNUMBER$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "swiftCountryCode" element
                       */
                      public java.lang.String getSwiftCountryCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SWIFTCOUNTRYCODE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "swiftCountryCode" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSwiftCountryCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SWIFTCOUNTRYCODE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "swiftCountryCode" element
                       */
                      public boolean isSetSwiftCountryCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SWIFTCOUNTRYCODE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "swiftCountryCode" element
                       */
                      public void setSwiftCountryCode(java.lang.String swiftCountryCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SWIFTCOUNTRYCODE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SWIFTCOUNTRYCODE$10);
                          }
                          target.setStringValue(swiftCountryCode);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "swiftCountryCode" element
                       */
                      public void xsetSwiftCountryCode(org.apache.xmlbeans.XmlString swiftCountryCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SWIFTCOUNTRYCODE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SWIFTCOUNTRYCODE$10);
                          }
                          target.set(swiftCountryCode);
                        }
                      }
                      
                      /**
                       * Unsets the "swiftCountryCode" element
                       */
                      public void unsetSwiftCountryCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SWIFTCOUNTRYCODE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "CustomerOrgType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType[] getCustomerOrgTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(CUSTOMERORGTYPE$12, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "CustomerOrgType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType getCustomerOrgTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType)get_store().find_element_user(CUSTOMERORGTYPE$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "CustomerOrgType" element
                       */
                      public int sizeOfCustomerOrgTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CUSTOMERORGTYPE$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "CustomerOrgType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCustomerOrgTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType[] customerOrgTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(customerOrgTypeArray, CUSTOMERORGTYPE$12);
                      }
                      
                      /**
                       * Sets ith "CustomerOrgType" element
                       */
                      public void setCustomerOrgTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType customerOrgType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType)get_store().find_element_user(CUSTOMERORGTYPE$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(customerOrgType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "CustomerOrgType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType insertNewCustomerOrgType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType)get_store().insert_element_user(CUSTOMERORGTYPE$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "CustomerOrgType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType addNewCustomerOrgType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType)get_store().add_element_user(CUSTOMERORGTYPE$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "CustomerOrgType" element
                       */
                      public void removeCustomerOrgType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CUSTOMERORGTYPE$12, i);
                        }
                      }
                      
                      /**
                       * Gets the "disclosureAgreementIndicator" element
                       */
                      public java.lang.String getDisclosureAgreementIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DISCLOSUREAGREEMENTINDICATOR$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "disclosureAgreementIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetDisclosureAgreementIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DISCLOSUREAGREEMENTINDICATOR$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "disclosureAgreementIndicator" element
                       */
                      public boolean isSetDisclosureAgreementIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(DISCLOSUREAGREEMENTINDICATOR$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "disclosureAgreementIndicator" element
                       */
                      public void setDisclosureAgreementIndicator(java.lang.String disclosureAgreementIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DISCLOSUREAGREEMENTINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DISCLOSUREAGREEMENTINDICATOR$14);
                          }
                          target.setStringValue(disclosureAgreementIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "disclosureAgreementIndicator" element
                       */
                      public void xsetDisclosureAgreementIndicator(org.apache.xmlbeans.XmlString disclosureAgreementIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DISCLOSUREAGREEMENTINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DISCLOSUREAGREEMENTINDICATOR$14);
                          }
                          target.set(disclosureAgreementIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "disclosureAgreementIndicator" element
                       */
                      public void unsetDisclosureAgreementIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(DISCLOSUREAGREEMENTINDICATOR$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "agreementDate" element
                       */
                      public java.lang.String getAgreementDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AGREEMENTDATE$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "agreementDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAgreementDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AGREEMENTDATE$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "agreementDate" element
                       */
                      public boolean isSetAgreementDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(AGREEMENTDATE$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "agreementDate" element
                       */
                      public void setAgreementDate(java.lang.String agreementDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(AGREEMENTDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(AGREEMENTDATE$16);
                          }
                          target.setStringValue(agreementDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "agreementDate" element
                       */
                      public void xsetAgreementDate(org.apache.xmlbeans.XmlString agreementDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(AGREEMENTDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(AGREEMENTDATE$16);
                          }
                          target.set(agreementDate);
                        }
                      }
                      
                      /**
                       * Unsets the "agreementDate" element
                       */
                      public void unsetAgreementDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(AGREEMENTDATE$16, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "languageCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode[] getLanguageCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LANGUAGECODE$18, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "languageCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode getLanguageCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode)get_store().find_element_user(LANGUAGECODE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "languageCode" element
                       */
                      public int sizeOfLanguageCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LANGUAGECODE$18);
                        }
                      }
                      
                      /**
                       * Sets array of all "languageCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLanguageCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode[] languageCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(languageCodeArray, LANGUAGECODE$18);
                      }
                      
                      /**
                       * Sets ith "languageCode" element
                       */
                      public void setLanguageCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode languageCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode)get_store().find_element_user(LANGUAGECODE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(languageCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "languageCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode insertNewLanguageCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode)get_store().insert_element_user(LANGUAGECODE$18, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "languageCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode addNewLanguageCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode)get_store().add_element_user(LANGUAGECODE$18);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "languageCode" element
                       */
                      public void removeLanguageCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LANGUAGECODE$18, i);
                        }
                      }
                      
                      /**
                       * Gets the "relationshipStartDate" element
                       */
                      public java.lang.String getRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(RELATIONSHIPSTARTDATE$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "relationshipStartDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(RELATIONSHIPSTARTDATE$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "relationshipStartDate" element
                       */
                      public boolean isSetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(RELATIONSHIPSTARTDATE$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "relationshipStartDate" element
                       */
                      public void setRelationshipStartDate(java.lang.String relationshipStartDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(RELATIONSHIPSTARTDATE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(RELATIONSHIPSTARTDATE$20);
                          }
                          target.setStringValue(relationshipStartDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "relationshipStartDate" element
                       */
                      public void xsetRelationshipStartDate(org.apache.xmlbeans.XmlString relationshipStartDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(RELATIONSHIPSTARTDATE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(RELATIONSHIPSTARTDATE$20);
                          }
                          target.set(relationshipStartDate);
                        }
                      }
                      
                      /**
                       * Unsets the "relationshipStartDate" element
                       */
                      public void unsetRelationshipStartDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(RELATIONSHIPSTARTDATE$20, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "serviceLevelPriority" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority[] getServiceLevelPriorityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SERVICELEVELPRIORITY$22, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "serviceLevelPriority" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority getServiceLevelPriorityArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority)get_store().find_element_user(SERVICELEVELPRIORITY$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "serviceLevelPriority" element
                       */
                      public int sizeOfServiceLevelPriorityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SERVICELEVELPRIORITY$22);
                        }
                      }
                      
                      /**
                       * Sets array of all "serviceLevelPriority" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setServiceLevelPriorityArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority[] serviceLevelPriorityArray)
                      {
                        check_orphaned();
                        arraySetterHelper(serviceLevelPriorityArray, SERVICELEVELPRIORITY$22);
                      }
                      
                      /**
                       * Sets ith "serviceLevelPriority" element
                       */
                      public void setServiceLevelPriorityArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority serviceLevelPriority)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority)get_store().find_element_user(SERVICELEVELPRIORITY$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(serviceLevelPriority);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "serviceLevelPriority" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority insertNewServiceLevelPriority(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority)get_store().insert_element_user(SERVICELEVELPRIORITY$22, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "serviceLevelPriority" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority addNewServiceLevelPriority()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority)get_store().add_element_user(SERVICELEVELPRIORITY$22);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "serviceLevelPriority" element
                       */
                      public void removeServiceLevelPriority(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SERVICELEVELPRIORITY$22, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "treaturyInd" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd[] getTreaturyIndArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(TREATURYIND$24, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "treaturyInd" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd getTreaturyIndArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd)get_store().find_element_user(TREATURYIND$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "treaturyInd" element
                       */
                      public int sizeOfTreaturyIndArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(TREATURYIND$24);
                        }
                      }
                      
                      /**
                       * Sets array of all "treaturyInd" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setTreaturyIndArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd[] treaturyIndArray)
                      {
                        check_orphaned();
                        arraySetterHelper(treaturyIndArray, TREATURYIND$24);
                      }
                      
                      /**
                       * Sets ith "treaturyInd" element
                       */
                      public void setTreaturyIndArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd treaturyInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd)get_store().find_element_user(TREATURYIND$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(treaturyInd);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "treaturyInd" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd insertNewTreaturyInd(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd)get_store().insert_element_user(TREATURYIND$24, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "treaturyInd" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd addNewTreaturyInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd)get_store().add_element_user(TREATURYIND$24);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "treaturyInd" element
                       */
                      public void removeTreaturyInd(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(TREATURYIND$24, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "operationStatus2" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2[] getOperationStatus2Array()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(OPERATIONSTATUS2$26, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "operationStatus2" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 getOperationStatus2Array(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2)get_store().find_element_user(OPERATIONSTATUS2$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "operationStatus2" element
                       */
                      public int sizeOfOperationStatus2Array()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(OPERATIONSTATUS2$26);
                        }
                      }
                      
                      /**
                       * Sets array of all "operationStatus2" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setOperationStatus2Array(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2[] operationStatus2Array)
                      {
                        check_orphaned();
                        arraySetterHelper(operationStatus2Array, OPERATIONSTATUS2$26);
                      }
                      
                      /**
                       * Sets ith "operationStatus2" element
                       */
                      public void setOperationStatus2Array(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 operationStatus2)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2)get_store().find_element_user(OPERATIONSTATUS2$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(operationStatus2);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "operationStatus2" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 insertNewOperationStatus2(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2)get_store().insert_element_user(OPERATIONSTATUS2$26, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "operationStatus2" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 addNewOperationStatus2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2 target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2)get_store().add_element_user(OPERATIONSTATUS2$26);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "operationStatus2" element
                       */
                      public void removeOperationStatus2(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(OPERATIONSTATUS2$26, i);
                        }
                      }
                      
                      /**
                       * Gets the "operationStatus2EffDate" element
                       */
                      public java.lang.String getOperationStatus2EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OPERATIONSTATUS2EFFDATE$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "operationStatus2EffDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetOperationStatus2EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OPERATIONSTATUS2EFFDATE$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "operationStatus2EffDate" element
                       */
                      public boolean isSetOperationStatus2EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(OPERATIONSTATUS2EFFDATE$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "operationStatus2EffDate" element
                       */
                      public void setOperationStatus2EffDate(java.lang.String operationStatus2EffDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OPERATIONSTATUS2EFFDATE$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(OPERATIONSTATUS2EFFDATE$28);
                          }
                          target.setStringValue(operationStatus2EffDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "operationStatus2EffDate" element
                       */
                      public void xsetOperationStatus2EffDate(org.apache.xmlbeans.XmlString operationStatus2EffDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OPERATIONSTATUS2EFFDATE$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(OPERATIONSTATUS2EFFDATE$28);
                          }
                          target.set(operationStatus2EffDate);
                        }
                      }
                      
                      /**
                       * Unsets the "operationStatus2EffDate" element
                       */
                      public void unsetOperationStatus2EffDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(OPERATIONSTATUS2EFFDATE$28, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$30);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$30);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$30, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$32) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$32);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$32);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$32, 0);
                        }
                      }
                      /**
                       * An XML CustomerOrgType(@).
                       *
                       * This is a complex type.
                       */
                      public static class CustomerOrgTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.CustomerOrgType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CustomerOrgTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML languageCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class LanguageCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.LanguageCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LanguageCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML serviceLevelPriority(@).
                       *
                       * This is a complex type.
                       */
                      public static class ServiceLevelPriorityImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.ServiceLevelPriority
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ServiceLevelPriorityImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML treaturyInd(@).
                       *
                       * This is a complex type.
                       */
                      public static class TreaturyIndImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.TreaturyInd
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public TreaturyIndImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML operationStatus2(@).
                       *
                       * This is a complex type.
                       */
                      public static class OperationStatus2Impl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfile.OperationStatus2
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public OperationStatus2Impl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML officialAddress(@).
                     *
                     * This is a complex type.
                     */
                    public static class OfficialAddressImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.OfficialAddress
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public OfficialAddressImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName ADDRESSID$4 = 
                        new javax.xml.namespace.QName("", "addressId");
                      private static final javax.xml.namespace.QName ADDRESSTYPE$6 = 
                        new javax.xml.namespace.QName("", "addressType");
                      private static final javax.xml.namespace.QName ATTNPARTY$8 = 
                        new javax.xml.namespace.QName("", "attnParty");
                      private static final javax.xml.namespace.QName LINE1$10 = 
                        new javax.xml.namespace.QName("", "line1");
                      private static final javax.xml.namespace.QName LINE2$12 = 
                        new javax.xml.namespace.QName("", "line2");
                      private static final javax.xml.namespace.QName CITY$14 = 
                        new javax.xml.namespace.QName("", "city");
                      private static final javax.xml.namespace.QName STATE$16 = 
                        new javax.xml.namespace.QName("", "state");
                      private static final javax.xml.namespace.QName COUNTRY$18 = 
                        new javax.xml.namespace.QName("", "country");
                      private static final javax.xml.namespace.QName POSTCODE$20 = 
                        new javax.xml.namespace.QName("", "postCode");
                      private static final javax.xml.namespace.QName FAX$22 = 
                        new javax.xml.namespace.QName("", "fax");
                      private static final javax.xml.namespace.QName EMAIL$24 = 
                        new javax.xml.namespace.QName("", "email");
                      private static final javax.xml.namespace.QName PHONE$26 = 
                        new javax.xml.namespace.QName("", "phone");
                      private static final javax.xml.namespace.QName TELEX$28 = 
                        new javax.xml.namespace.QName("", "telex");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$30 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$32 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "addressId" element
                       */
                      public java.lang.String getAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ADDRESSID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "addressId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ADDRESSID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "addressId" element
                       */
                      public boolean isSetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ADDRESSID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "addressId" element
                       */
                      public void setAddressId(java.lang.String addressId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ADDRESSID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ADDRESSID$4);
                          }
                          target.setStringValue(addressId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "addressId" element
                       */
                      public void xsetAddressId(org.apache.xmlbeans.XmlString addressId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ADDRESSID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ADDRESSID$4);
                          }
                          target.set(addressId);
                        }
                      }
                      
                      /**
                       * Unsets the "addressId" element
                       */
                      public void unsetAddressId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ADDRESSID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "addressType" elements
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType[] getAddressTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ADDRESSTYPE$6, targetList);
                          com.stanchart.customer.AddressTypeDocument.AddressType[] result = new com.stanchart.customer.AddressTypeDocument.AddressType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType getAddressTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "addressType" element
                       */
                      public int sizeOfAddressTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ADDRESSTYPE$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "addressType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setAddressTypeArray(com.stanchart.customer.AddressTypeDocument.AddressType[] addressTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(addressTypeArray, ADDRESSTYPE$6);
                      }
                      
                      /**
                       * Sets ith "addressType" element
                       */
                      public void setAddressTypeArray(int i, com.stanchart.customer.AddressTypeDocument.AddressType addressType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().find_element_user(ADDRESSTYPE$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(addressType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType insertNewAddressType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().insert_element_user(ADDRESSTYPE$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "addressType" element
                       */
                      public com.stanchart.customer.AddressTypeDocument.AddressType addNewAddressType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.AddressTypeDocument.AddressType target = null;
                          target = (com.stanchart.customer.AddressTypeDocument.AddressType)get_store().add_element_user(ADDRESSTYPE$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "addressType" element
                       */
                      public void removeAddressType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ADDRESSTYPE$6, i);
                        }
                      }
                      
                      /**
                       * Gets the "attnParty" element
                       */
                      public java.lang.String getAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ATTNPARTY$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "attnParty" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ATTNPARTY$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "attnParty" element
                       */
                      public boolean isSetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ATTNPARTY$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "attnParty" element
                       */
                      public void setAttnParty(java.lang.String attnParty)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ATTNPARTY$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ATTNPARTY$8);
                          }
                          target.setStringValue(attnParty);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "attnParty" element
                       */
                      public void xsetAttnParty(org.apache.xmlbeans.XmlString attnParty)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ATTNPARTY$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ATTNPARTY$8);
                          }
                          target.set(attnParty);
                        }
                      }
                      
                      /**
                       * Unsets the "attnParty" element
                       */
                      public void unsetAttnParty()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ATTNPARTY$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "line1" element
                       */
                      public java.lang.String getLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE1$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "line1" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE1$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "line1" element
                       */
                      public boolean isSetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LINE1$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "line1" element
                       */
                      public void setLine1(java.lang.String line1)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE1$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LINE1$10);
                          }
                          target.setStringValue(line1);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "line1" element
                       */
                      public void xsetLine1(org.apache.xmlbeans.XmlString line1)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE1$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LINE1$10);
                          }
                          target.set(line1);
                        }
                      }
                      
                      /**
                       * Unsets the "line1" element
                       */
                      public void unsetLine1()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LINE1$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "line2" element
                       */
                      public java.lang.String getLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE2$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "line2" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE2$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "line2" element
                       */
                      public boolean isSetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LINE2$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "line2" element
                       */
                      public void setLine2(java.lang.String line2)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LINE2$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LINE2$12);
                          }
                          target.setStringValue(line2);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "line2" element
                       */
                      public void xsetLine2(org.apache.xmlbeans.XmlString line2)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LINE2$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LINE2$12);
                          }
                          target.set(line2);
                        }
                      }
                      
                      /**
                       * Unsets the "line2" element
                       */
                      public void unsetLine2()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LINE2$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "city" element
                       */
                      public java.lang.String getCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CITY$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "city" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CITY$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "city" element
                       */
                      public boolean isSetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CITY$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "city" element
                       */
                      public void setCity(java.lang.String city)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CITY$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CITY$14);
                          }
                          target.setStringValue(city);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "city" element
                       */
                      public void xsetCity(org.apache.xmlbeans.XmlString city)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CITY$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CITY$14);
                          }
                          target.set(city);
                        }
                      }
                      
                      /**
                       * Unsets the "city" element
                       */
                      public void unsetCity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CITY$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "state" element
                       */
                      public java.lang.String getState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STATE$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "state" element
                       */
                      public org.apache.xmlbeans.XmlString xgetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STATE$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "state" element
                       */
                      public boolean isSetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(STATE$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "state" element
                       */
                      public void setState(java.lang.String state)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STATE$16);
                          }
                          target.setStringValue(state);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "state" element
                       */
                      public void xsetState(org.apache.xmlbeans.XmlString state)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STATE$16);
                          }
                          target.set(state);
                        }
                      }
                      
                      /**
                       * Unsets the "state" element
                       */
                      public void unsetState()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(STATE$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "country" element
                       */
                      public java.lang.String getCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRY$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "country" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRY$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "country" element
                       */
                      public boolean isSetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COUNTRY$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "country" element
                       */
                      public void setCountry(java.lang.String country)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRY$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COUNTRY$18);
                          }
                          target.setStringValue(country);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "country" element
                       */
                      public void xsetCountry(org.apache.xmlbeans.XmlString country)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRY$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COUNTRY$18);
                          }
                          target.set(country);
                        }
                      }
                      
                      /**
                       * Unsets the "country" element
                       */
                      public void unsetCountry()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COUNTRY$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "postCode" element
                       */
                      public java.lang.String getPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POSTCODE$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "postCode" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POSTCODE$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "postCode" element
                       */
                      public boolean isSetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(POSTCODE$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "postCode" element
                       */
                      public void setPostCode(java.lang.String postCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POSTCODE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(POSTCODE$20);
                          }
                          target.setStringValue(postCode);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "postCode" element
                       */
                      public void xsetPostCode(org.apache.xmlbeans.XmlString postCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POSTCODE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(POSTCODE$20);
                          }
                          target.set(postCode);
                        }
                      }
                      
                      /**
                       * Unsets the "postCode" element
                       */
                      public void unsetPostCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(POSTCODE$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "fax" element
                       */
                      public java.lang.String getFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FAX$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "fax" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FAX$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "fax" element
                       */
                      public boolean isSetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FAX$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "fax" element
                       */
                      public void setFax(java.lang.String fax)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FAX$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FAX$22);
                          }
                          target.setStringValue(fax);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "fax" element
                       */
                      public void xsetFax(org.apache.xmlbeans.XmlString fax)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FAX$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FAX$22);
                          }
                          target.set(fax);
                        }
                      }
                      
                      /**
                       * Unsets the "fax" element
                       */
                      public void unsetFax()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FAX$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "email" element
                       */
                      public java.lang.String getEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMAIL$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "email" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMAIL$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "email" element
                       */
                      public boolean isSetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMAIL$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "email" element
                       */
                      public void setEmail(java.lang.String email)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMAIL$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMAIL$24);
                          }
                          target.setStringValue(email);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "email" element
                       */
                      public void xsetEmail(org.apache.xmlbeans.XmlString email)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMAIL$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMAIL$24);
                          }
                          target.set(email);
                        }
                      }
                      
                      /**
                       * Unsets the "email" element
                       */
                      public void unsetEmail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMAIL$24, 0);
                        }
                      }
                      
                      /**
                       * Gets the "phone" element
                       */
                      public java.lang.String getPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PHONE$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "phone" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PHONE$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "phone" element
                       */
                      public boolean isSetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PHONE$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "phone" element
                       */
                      public void setPhone(java.lang.String phone)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PHONE$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PHONE$26);
                          }
                          target.setStringValue(phone);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "phone" element
                       */
                      public void xsetPhone(org.apache.xmlbeans.XmlString phone)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PHONE$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PHONE$26);
                          }
                          target.set(phone);
                        }
                      }
                      
                      /**
                       * Unsets the "phone" element
                       */
                      public void unsetPhone()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PHONE$26, 0);
                        }
                      }
                      
                      /**
                       * Gets the "telex" element
                       */
                      public java.lang.String getTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TELEX$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "telex" element
                       */
                      public org.apache.xmlbeans.XmlString xgetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TELEX$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "telex" element
                       */
                      public boolean isSetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(TELEX$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "telex" element
                       */
                      public void setTelex(java.lang.String telex)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(TELEX$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(TELEX$28);
                          }
                          target.setStringValue(telex);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "telex" element
                       */
                      public void xsetTelex(org.apache.xmlbeans.XmlString telex)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(TELEX$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(TELEX$28);
                          }
                          target.set(telex);
                        }
                      }
                      
                      /**
                       * Unsets the "telex" element
                       */
                      public void unsetTelex()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(TELEX$28, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$30);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$30);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$30, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$32) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$32);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$32);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$32, 0);
                        }
                      }
                    }
                    /**
                     * An XML empRelationship(@).
                     *
                     * This is a complex type.
                     */
                    public static class EmpRelationshipImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public EmpRelationshipImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName EMPEMPCODEMAPID$4 = 
                        new javax.xml.namespace.QName("", "empEmpCodeMapId");
                      private static final javax.xml.namespace.QName EMPMAPID$6 = 
                        new javax.xml.namespace.QName("", "empMapId");
                      private static final javax.xml.namespace.QName EMPID$8 = 
                        new javax.xml.namespace.QName("", "empId");
                      private static final javax.xml.namespace.QName EMPCODE$10 = 
                        new javax.xml.namespace.QName("", "empCode");
                      private static final javax.xml.namespace.QName EMPNAME$12 = 
                        new javax.xml.namespace.QName("", "empName");
                      private static final javax.xml.namespace.QName BKGLOCATION$14 = 
                        new javax.xml.namespace.QName("", "bkgLocation");
                      private static final javax.xml.namespace.QName EMPRELATIONSHIPTYPE$16 = 
                        new javax.xml.namespace.QName("", "empRelationshipType");
                      private static final javax.xml.namespace.QName PRINCIPALFAMIND$18 = 
                        new javax.xml.namespace.QName("", "principalFAMInd");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$20 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$22 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "empEmpCodeMapId" element
                       */
                      public java.lang.String getEmpEmpCodeMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPEMPCODEMAPID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "empEmpCodeMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmpEmpCodeMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPEMPCODEMAPID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "empEmpCodeMapId" element
                       */
                      public boolean isSetEmpEmpCodeMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPEMPCODEMAPID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "empEmpCodeMapId" element
                       */
                      public void setEmpEmpCodeMapId(java.lang.String empEmpCodeMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPEMPCODEMAPID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMPEMPCODEMAPID$4);
                          }
                          target.setStringValue(empEmpCodeMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "empEmpCodeMapId" element
                       */
                      public void xsetEmpEmpCodeMapId(org.apache.xmlbeans.XmlString empEmpCodeMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPEMPCODEMAPID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMPEMPCODEMAPID$4);
                          }
                          target.set(empEmpCodeMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "empEmpCodeMapId" element
                       */
                      public void unsetEmpEmpCodeMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPEMPCODEMAPID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "empMapId" element
                       */
                      public java.lang.String getEmpMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPMAPID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "empMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmpMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPMAPID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "empMapId" element
                       */
                      public boolean isSetEmpMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPMAPID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "empMapId" element
                       */
                      public void setEmpMapId(java.lang.String empMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPMAPID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMPMAPID$6);
                          }
                          target.setStringValue(empMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "empMapId" element
                       */
                      public void xsetEmpMapId(org.apache.xmlbeans.XmlString empMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPMAPID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMPMAPID$6);
                          }
                          target.set(empMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "empMapId" element
                       */
                      public void unsetEmpMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPMAPID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "empId" element
                       */
                      public java.lang.String getEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "empId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "empId" element
                       */
                      public boolean isSetEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "empId" element
                       */
                      public void setEmpId(java.lang.String empId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMPID$8);
                          }
                          target.setStringValue(empId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "empId" element
                       */
                      public void xsetEmpId(org.apache.xmlbeans.XmlString empId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMPID$8);
                          }
                          target.set(empId);
                        }
                      }
                      
                      /**
                       * Unsets the "empId" element
                       */
                      public void unsetEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "empCode" element
                       */
                      public java.lang.String getEmpCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPCODE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "empCode" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmpCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPCODE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "empCode" element
                       */
                      public boolean isSetEmpCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPCODE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "empCode" element
                       */
                      public void setEmpCode(java.lang.String empCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPCODE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMPCODE$10);
                          }
                          target.setStringValue(empCode);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "empCode" element
                       */
                      public void xsetEmpCode(org.apache.xmlbeans.XmlString empCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPCODE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMPCODE$10);
                          }
                          target.set(empCode);
                        }
                      }
                      
                      /**
                       * Unsets the "empCode" element
                       */
                      public void unsetEmpCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPCODE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "empName" element
                       */
                      public java.lang.String getEmpName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPNAME$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "empName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetEmpName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPNAME$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "empName" element
                       */
                      public boolean isSetEmpName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPNAME$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "empName" element
                       */
                      public void setEmpName(java.lang.String empName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EMPNAME$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EMPNAME$12);
                          }
                          target.setStringValue(empName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "empName" element
                       */
                      public void xsetEmpName(org.apache.xmlbeans.XmlString empName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EMPNAME$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EMPNAME$12);
                          }
                          target.set(empName);
                        }
                      }
                      
                      /**
                       * Unsets the "empName" element
                       */
                      public void unsetEmpName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPNAME$12, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "bkgLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation[] getBkgLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(BKGLOCATION$14, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "bkgLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation getBkgLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation)get_store().find_element_user(BKGLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "bkgLocation" element
                       */
                      public int sizeOfBkgLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BKGLOCATION$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "bkgLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setBkgLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation[] bkgLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(bkgLocationArray, BKGLOCATION$14);
                      }
                      
                      /**
                       * Sets ith "bkgLocation" element
                       */
                      public void setBkgLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation bkgLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation)get_store().find_element_user(BKGLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(bkgLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "bkgLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation insertNewBkgLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation)get_store().insert_element_user(BKGLOCATION$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "bkgLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation addNewBkgLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation)get_store().add_element_user(BKGLOCATION$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "bkgLocation" element
                       */
                      public void removeBkgLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BKGLOCATION$14, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "empRelationshipType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType[] getEmpRelationshipTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EMPRELATIONSHIPTYPE$16, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "empRelationshipType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType getEmpRelationshipTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType)get_store().find_element_user(EMPRELATIONSHIPTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "empRelationshipType" element
                       */
                      public int sizeOfEmpRelationshipTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EMPRELATIONSHIPTYPE$16);
                        }
                      }
                      
                      /**
                       * Sets array of all "empRelationshipType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setEmpRelationshipTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType[] empRelationshipTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(empRelationshipTypeArray, EMPRELATIONSHIPTYPE$16);
                      }
                      
                      /**
                       * Sets ith "empRelationshipType" element
                       */
                      public void setEmpRelationshipTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType empRelationshipType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType)get_store().find_element_user(EMPRELATIONSHIPTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(empRelationshipType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "empRelationshipType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType insertNewEmpRelationshipType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType)get_store().insert_element_user(EMPRELATIONSHIPTYPE$16, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "empRelationshipType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType addNewEmpRelationshipType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType)get_store().add_element_user(EMPRELATIONSHIPTYPE$16);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "empRelationshipType" element
                       */
                      public void removeEmpRelationshipType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EMPRELATIONSHIPTYPE$16, i);
                        }
                      }
                      
                      /**
                       * Gets the "principalFAMInd" element
                       */
                      public java.lang.String getPrincipalFAMInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PRINCIPALFAMIND$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "principalFAMInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPrincipalFAMInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PRINCIPALFAMIND$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "principalFAMInd" element
                       */
                      public boolean isSetPrincipalFAMInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PRINCIPALFAMIND$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "principalFAMInd" element
                       */
                      public void setPrincipalFAMInd(java.lang.String principalFAMInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PRINCIPALFAMIND$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PRINCIPALFAMIND$18);
                          }
                          target.setStringValue(principalFAMInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "principalFAMInd" element
                       */
                      public void xsetPrincipalFAMInd(org.apache.xmlbeans.XmlString principalFAMInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PRINCIPALFAMIND$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PRINCIPALFAMIND$18);
                          }
                          target.set(principalFAMInd);
                        }
                      }
                      
                      /**
                       * Unsets the "principalFAMInd" element
                       */
                      public void unsetPrincipalFAMInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PRINCIPALFAMIND$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$20);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$22);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$22, 0);
                        }
                      }
                      /**
                       * An XML bkgLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class BkgLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.BkgLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public BkgLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName BKGLOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "bkgLocationId");
                        private static final javax.xml.namespace.QName BKGLOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "bkgLocationCountry");
                        private static final javax.xml.namespace.QName BKGLOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "bkgLocationOrganization");
                        
                        
                        /**
                         * Gets the "bkgLocationId" element
                         */
                        public java.lang.String getBkgLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "bkgLocationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetBkgLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "bkgLocationId" element
                         */
                        public boolean isSetBkgLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(BKGLOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "bkgLocationId" element
                         */
                        public void setBkgLocationId(java.lang.String bkgLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BKGLOCATIONID$0);
                            }
                            target.setStringValue(bkgLocationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "bkgLocationId" element
                         */
                        public void xsetBkgLocationId(org.apache.xmlbeans.XmlString bkgLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BKGLOCATIONID$0);
                            }
                            target.set(bkgLocationId);
                          }
                        }
                        
                        /**
                         * Unsets the "bkgLocationId" element
                         */
                        public void unsetBkgLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(BKGLOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "bkgLocationCountry" element
                         */
                        public java.lang.String getBkgLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "bkgLocationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetBkgLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "bkgLocationCountry" element
                         */
                        public boolean isSetBkgLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(BKGLOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "bkgLocationCountry" element
                         */
                        public void setBkgLocationCountry(java.lang.String bkgLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BKGLOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(bkgLocationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "bkgLocationCountry" element
                         */
                        public void xsetBkgLocationCountry(org.apache.xmlbeans.XmlString bkgLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BKGLOCATIONCOUNTRY$2);
                            }
                            target.set(bkgLocationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "bkgLocationCountry" element
                         */
                        public void unsetBkgLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(BKGLOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "bkgLocationOrganization" element
                         */
                        public java.lang.String getBkgLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "bkgLocationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetBkgLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "bkgLocationOrganization" element
                         */
                        public boolean isSetBkgLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(BKGLOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "bkgLocationOrganization" element
                         */
                        public void setBkgLocationOrganization(java.lang.String bkgLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BKGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BKGLOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(bkgLocationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "bkgLocationOrganization" element
                         */
                        public void xsetBkgLocationOrganization(org.apache.xmlbeans.XmlString bkgLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BKGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BKGLOCATIONORGANIZATION$4);
                            }
                            target.set(bkgLocationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "bkgLocationOrganization" element
                         */
                        public void unsetBkgLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(BKGLOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML empRelationshipType(@).
                       *
                       * This is a complex type.
                       */
                      public static class EmpRelationshipTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.EmpRelationship.EmpRelationshipType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public EmpRelationshipTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML subProfileInstructionRef(@).
                     *
                     * This is a complex type.
                     */
                    public static class SubProfileInstructionRefImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileInstructionRef
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public SubProfileInstructionRefImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFMAPID$4 = 
                        new javax.xml.namespace.QName("", "instructionRefMapId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFID$6 = 
                        new javax.xml.namespace.QName("", "instructionRefId");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFNUMBER$8 = 
                        new javax.xml.namespace.QName("", "instructionRefNumber");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFTYPE$10 = 
                        new javax.xml.namespace.QName("", "instructionRefType");
                      private static final javax.xml.namespace.QName INSTRUCTIONBOOKINGLOCATION$12 = 
                        new javax.xml.namespace.QName("", "instructionBookingLocation");
                      private static final javax.xml.namespace.QName INSTRUCTIONREFAPPROVALDATE$14 = 
                        new javax.xml.namespace.QName("", "instructionRefApprovalDate");
                      private static final javax.xml.namespace.QName COMMENTS$16 = 
                        new javax.xml.namespace.QName("", "comments");
                      private static final javax.xml.namespace.QName UPDATEMAINPROFILEIND$18 = 
                        new javax.xml.namespace.QName("", "updateMainProfileInd");
                      private static final javax.xml.namespace.QName USERGROUPIND$20 = 
                        new javax.xml.namespace.QName("", "userGroupInd");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$22 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$24 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefMapId" element
                       */
                      public java.lang.String getInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFMAPID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFMAPID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefMapId" element
                       */
                      public boolean isSetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFMAPID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefMapId" element
                       */
                      public void setInstructionRefMapId(java.lang.String instructionRefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFMAPID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFMAPID$4);
                          }
                          target.setStringValue(instructionRefMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefMapId" element
                       */
                      public void xsetInstructionRefMapId(org.apache.xmlbeans.XmlString instructionRefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFMAPID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFMAPID$4);
                          }
                          target.set(instructionRefMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefMapId" element
                       */
                      public void unsetInstructionRefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFMAPID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefId" element
                       */
                      public java.lang.String getInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefId" element
                       */
                      public boolean isSetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefId" element
                       */
                      public void setInstructionRefId(java.lang.String instructionRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFID$6);
                          }
                          target.setStringValue(instructionRefId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefId" element
                       */
                      public void xsetInstructionRefId(org.apache.xmlbeans.XmlString instructionRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFID$6);
                          }
                          target.set(instructionRefId);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefId" element
                       */
                      public void unsetInstructionRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefNumber" element
                       */
                      public java.lang.String getInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFNUMBER$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefNumber" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFNUMBER$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefNumber" element
                       */
                      public boolean isSetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFNUMBER$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefNumber" element
                       */
                      public void setInstructionRefNumber(java.lang.String instructionRefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFNUMBER$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFNUMBER$8);
                          }
                          target.setStringValue(instructionRefNumber);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefNumber" element
                       */
                      public void xsetInstructionRefNumber(org.apache.xmlbeans.XmlString instructionRefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFNUMBER$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFNUMBER$8);
                          }
                          target.set(instructionRefNumber);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefNumber" element
                       */
                      public void unsetInstructionRefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFNUMBER$8, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "instructionRefType" elements
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] getInstructionRefTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(INSTRUCTIONREFTYPE$10, targetList);
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] result = new com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType getInstructionRefTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "instructionRefType" element
                       */
                      public int sizeOfInstructionRefTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFTYPE$10);
                        }
                      }
                      
                      /**
                       * Sets array of all "instructionRefType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setInstructionRefTypeArray(com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType[] instructionRefTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(instructionRefTypeArray, INSTRUCTIONREFTYPE$10);
                      }
                      
                      /**
                       * Sets ith "instructionRefType" element
                       */
                      public void setInstructionRefTypeArray(int i, com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType instructionRefType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().find_element_user(INSTRUCTIONREFTYPE$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(instructionRefType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType insertNewInstructionRefType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().insert_element_user(INSTRUCTIONREFTYPE$10, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "instructionRefType" element
                       */
                      public com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType addNewInstructionRefType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType target = null;
                          target = (com.stanchart.customer.InstructionRefTypeDocument.InstructionRefType)get_store().add_element_user(INSTRUCTIONREFTYPE$10);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "instructionRefType" element
                       */
                      public void removeInstructionRefType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFTYPE$10, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "instructionBookingLocation" elements
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] getInstructionBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(INSTRUCTIONBOOKINGLOCATION$12, targetList);
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] result = new com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation getInstructionBookingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "instructionBookingLocation" element
                       */
                      public int sizeOfInstructionBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONBOOKINGLOCATION$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "instructionBookingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setInstructionBookingLocationArray(com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation[] instructionBookingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(instructionBookingLocationArray, INSTRUCTIONBOOKINGLOCATION$12);
                      }
                      
                      /**
                       * Sets ith "instructionBookingLocation" element
                       */
                      public void setInstructionBookingLocationArray(int i, com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation instructionBookingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().find_element_user(INSTRUCTIONBOOKINGLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(instructionBookingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation insertNewInstructionBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().insert_element_user(INSTRUCTIONBOOKINGLOCATION$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "instructionBookingLocation" element
                       */
                      public com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation addNewInstructionBookingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation target = null;
                          target = (com.stanchart.customer.InstructionBookingLocationDocument.InstructionBookingLocation)get_store().add_element_user(INSTRUCTIONBOOKINGLOCATION$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "instructionBookingLocation" element
                       */
                      public void removeInstructionBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONBOOKINGLOCATION$12, i);
                        }
                      }
                      
                      /**
                       * Gets the "instructionRefApprovalDate" element
                       */
                      public java.lang.String getInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "instructionRefApprovalDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "instructionRefApprovalDate" element
                       */
                      public boolean isSetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INSTRUCTIONREFAPPROVALDATE$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "instructionRefApprovalDate" element
                       */
                      public void setInstructionRefApprovalDate(java.lang.String instructionRefApprovalDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INSTRUCTIONREFAPPROVALDATE$14);
                          }
                          target.setStringValue(instructionRefApprovalDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "instructionRefApprovalDate" element
                       */
                      public void xsetInstructionRefApprovalDate(org.apache.xmlbeans.XmlString instructionRefApprovalDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INSTRUCTIONREFAPPROVALDATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INSTRUCTIONREFAPPROVALDATE$14);
                          }
                          target.set(instructionRefApprovalDate);
                        }
                      }
                      
                      /**
                       * Unsets the "instructionRefApprovalDate" element
                       */
                      public void unsetInstructionRefApprovalDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INSTRUCTIONREFAPPROVALDATE$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "comments" element
                       */
                      public java.lang.String getComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "comments" element
                       */
                      public org.apache.xmlbeans.XmlString xgetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "comments" element
                       */
                      public boolean isSetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COMMENTS$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "comments" element
                       */
                      public void setComments(java.lang.String comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COMMENTS$16);
                          }
                          target.setStringValue(comments);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "comments" element
                       */
                      public void xsetComments(org.apache.xmlbeans.XmlString comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COMMENTS$16);
                          }
                          target.set(comments);
                        }
                      }
                      
                      /**
                       * Unsets the "comments" element
                       */
                      public void unsetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COMMENTS$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateMainProfileInd" element
                       */
                      public java.lang.String getUpdateMainProfileInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATEMAINPROFILEIND$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateMainProfileInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateMainProfileInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATEMAINPROFILEIND$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateMainProfileInd" element
                       */
                      public boolean isSetUpdateMainProfileInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATEMAINPROFILEIND$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateMainProfileInd" element
                       */
                      public void setUpdateMainProfileInd(java.lang.String updateMainProfileInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATEMAINPROFILEIND$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATEMAINPROFILEIND$18);
                          }
                          target.setStringValue(updateMainProfileInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateMainProfileInd" element
                       */
                      public void xsetUpdateMainProfileInd(org.apache.xmlbeans.XmlString updateMainProfileInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATEMAINPROFILEIND$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATEMAINPROFILEIND$18);
                          }
                          target.set(updateMainProfileInd);
                        }
                      }
                      
                      /**
                       * Unsets the "updateMainProfileInd" element
                       */
                      public void unsetUpdateMainProfileInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATEMAINPROFILEIND$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "userGroupInd" element
                       */
                      public java.lang.String getUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USERGROUPIND$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "userGroupInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USERGROUPIND$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "userGroupInd" element
                       */
                      public boolean isSetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(USERGROUPIND$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "userGroupInd" element
                       */
                      public void setUserGroupInd(java.lang.String userGroupInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(USERGROUPIND$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(USERGROUPIND$20);
                          }
                          target.setStringValue(userGroupInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "userGroupInd" element
                       */
                      public void xsetUserGroupInd(org.apache.xmlbeans.XmlString userGroupInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(USERGROUPIND$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(USERGROUPIND$20);
                          }
                          target.set(userGroupInd);
                        }
                      }
                      
                      /**
                       * Unsets the "userGroupInd" element
                       */
                      public void unsetUserGroupInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(USERGROUPIND$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$22);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$22);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$24);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$24);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$24, 0);
                        }
                      }
                    }
                    /**
                     * An XML limitProfile(@).
                     *
                     * This is a complex type.
                     */
                    public static class LimitProfileImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public LimitProfileImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName BCAREFNUMBER$6 = 
                        new javax.xml.namespace.QName("", "BCArefNumber");
                      private static final javax.xml.namespace.QName BCAAPPROVEDATE$8 = 
                        new javax.xml.namespace.QName("", "BCAapproveDate");
                      private static final javax.xml.namespace.QName ORIGINATINGLOCATION$10 = 
                        new javax.xml.namespace.QName("", "originatingLocation");
                      private static final javax.xml.namespace.QName INTERIMREVIEWDATE$12 = 
                        new javax.xml.namespace.QName("", "interimReviewDate");
                      private static final javax.xml.namespace.QName ANNUALREVIEWDATE$14 = 
                        new javax.xml.namespace.QName("", "annualReviewDate");
                      private static final javax.xml.namespace.QName EXTENSIONDATE$16 = 
                        new javax.xml.namespace.QName("", "extensionDate");
                      private static final javax.xml.namespace.QName PROJECTEDECONOMICPORFIT$18 = 
                        new javax.xml.namespace.QName("", "projectedEconomicPorfit");
                      private static final javax.xml.namespace.QName EXPECTEDLOSSFORCREDITPURPOSE$20 = 
                        new javax.xml.namespace.QName("", "expectedLossForCreditPurpose");
                      private static final javax.xml.namespace.QName PRODUCTPROGRAMCOMPLIANCEIND$22 = 
                        new javax.xml.namespace.QName("", "productProgramComplianceInd");
                      private static final javax.xml.namespace.QName CREDITPOLICYCOMPLIANCEIND$24 = 
                        new javax.xml.namespace.QName("", "creditPolicyComplianceInd");
                      private static final javax.xml.namespace.QName UNDERWRITINGCOMPLIANCEIND$26 = 
                        new javax.xml.namespace.QName("", "underWritingComplianceInd");
                      private static final javax.xml.namespace.QName COUNTRYRISKAPPRREQD$28 = 
                        new javax.xml.namespace.QName("", "countryRiskApprReqd");
                      private static final javax.xml.namespace.QName FIRSTAPPROVEREMPID$30 = 
                        new javax.xml.namespace.QName("", "firstApproverEmpId");
                      private static final javax.xml.namespace.QName FIRSTAPPROVERLOCATION$32 = 
                        new javax.xml.namespace.QName("", "firstApproverLocation");
                      private static final javax.xml.namespace.QName FIRSTAPPROVERCOINNO$34 = 
                        new javax.xml.namespace.QName("", "firstApproverCoinNo");
                      private static final javax.xml.namespace.QName FIRSTAPPROVERNAME$36 = 
                        new javax.xml.namespace.QName("", "firstApproverName");
                      private static final javax.xml.namespace.QName SECONDAPPROVEREMPID$38 = 
                        new javax.xml.namespace.QName("", "secondApproverEmpId");
                      private static final javax.xml.namespace.QName SECONDAPPROVERLOCATION$40 = 
                        new javax.xml.namespace.QName("", "secondApproverLocation");
                      private static final javax.xml.namespace.QName SECONDAPPROVERCOINNO$42 = 
                        new javax.xml.namespace.QName("", "secondApproverCoinNo");
                      private static final javax.xml.namespace.QName SECONDAPPROVERNAME$44 = 
                        new javax.xml.namespace.QName("", "secondApproverName");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$46 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$48 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "BCArefNumber" element
                       */
                      public java.lang.String getBCArefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BCAREFNUMBER$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "BCArefNumber" element
                       */
                      public org.apache.xmlbeans.XmlString xgetBCArefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BCAREFNUMBER$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "BCArefNumber" element
                       */
                      public boolean isSetBCArefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BCAREFNUMBER$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "BCArefNumber" element
                       */
                      public void setBCArefNumber(java.lang.String bcArefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BCAREFNUMBER$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BCAREFNUMBER$6);
                          }
                          target.setStringValue(bcArefNumber);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "BCArefNumber" element
                       */
                      public void xsetBCArefNumber(org.apache.xmlbeans.XmlString bcArefNumber)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BCAREFNUMBER$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BCAREFNUMBER$6);
                          }
                          target.set(bcArefNumber);
                        }
                      }
                      
                      /**
                       * Unsets the "BCArefNumber" element
                       */
                      public void unsetBCArefNumber()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BCAREFNUMBER$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "BCAapproveDate" element
                       */
                      public java.lang.String getBCAapproveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BCAAPPROVEDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "BCAapproveDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetBCAapproveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BCAAPPROVEDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "BCAapproveDate" element
                       */
                      public boolean isSetBCAapproveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(BCAAPPROVEDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "BCAapproveDate" element
                       */
                      public void setBCAapproveDate(java.lang.String bcAapproveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(BCAAPPROVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(BCAAPPROVEDATE$8);
                          }
                          target.setStringValue(bcAapproveDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "BCAapproveDate" element
                       */
                      public void xsetBCAapproveDate(org.apache.xmlbeans.XmlString bcAapproveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(BCAAPPROVEDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(BCAAPPROVEDATE$8);
                          }
                          target.set(bcAapproveDate);
                        }
                      }
                      
                      /**
                       * Unsets the "BCAapproveDate" element
                       */
                      public void unsetBCAapproveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(BCAAPPROVEDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "originatingLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation[] getOriginatingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ORIGINATINGLOCATION$10, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "originatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation getOriginatingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation)get_store().find_element_user(ORIGINATINGLOCATION$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "originatingLocation" element
                       */
                      public int sizeOfOriginatingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ORIGINATINGLOCATION$10);
                        }
                      }
                      
                      /**
                       * Sets array of all "originatingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setOriginatingLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation[] originatingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(originatingLocationArray, ORIGINATINGLOCATION$10);
                      }
                      
                      /**
                       * Sets ith "originatingLocation" element
                       */
                      public void setOriginatingLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation originatingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation)get_store().find_element_user(ORIGINATINGLOCATION$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(originatingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "originatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation insertNewOriginatingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation)get_store().insert_element_user(ORIGINATINGLOCATION$10, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "originatingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation addNewOriginatingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation)get_store().add_element_user(ORIGINATINGLOCATION$10);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "originatingLocation" element
                       */
                      public void removeOriginatingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ORIGINATINGLOCATION$10, i);
                        }
                      }
                      
                      /**
                       * Gets the "interimReviewDate" element
                       */
                      public java.lang.String getInterimReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INTERIMREVIEWDATE$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "interimReviewDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInterimReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INTERIMREVIEWDATE$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "interimReviewDate" element
                       */
                      public boolean isSetInterimReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INTERIMREVIEWDATE$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "interimReviewDate" element
                       */
                      public void setInterimReviewDate(java.lang.String interimReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INTERIMREVIEWDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INTERIMREVIEWDATE$12);
                          }
                          target.setStringValue(interimReviewDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "interimReviewDate" element
                       */
                      public void xsetInterimReviewDate(org.apache.xmlbeans.XmlString interimReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INTERIMREVIEWDATE$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INTERIMREVIEWDATE$12);
                          }
                          target.set(interimReviewDate);
                        }
                      }
                      
                      /**
                       * Unsets the "interimReviewDate" element
                       */
                      public void unsetInterimReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INTERIMREVIEWDATE$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "annualReviewDate" element
                       */
                      public java.lang.String getAnnualReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ANNUALREVIEWDATE$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "annualReviewDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetAnnualReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ANNUALREVIEWDATE$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "annualReviewDate" element
                       */
                      public boolean isSetAnnualReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ANNUALREVIEWDATE$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "annualReviewDate" element
                       */
                      public void setAnnualReviewDate(java.lang.String annualReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ANNUALREVIEWDATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ANNUALREVIEWDATE$14);
                          }
                          target.setStringValue(annualReviewDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "annualReviewDate" element
                       */
                      public void xsetAnnualReviewDate(org.apache.xmlbeans.XmlString annualReviewDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ANNUALREVIEWDATE$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ANNUALREVIEWDATE$14);
                          }
                          target.set(annualReviewDate);
                        }
                      }
                      
                      /**
                       * Unsets the "annualReviewDate" element
                       */
                      public void unsetAnnualReviewDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ANNUALREVIEWDATE$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "extensionDate" element
                       */
                      public java.lang.String getExtensionDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTENSIONDATE$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "extensionDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExtensionDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTENSIONDATE$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "extensionDate" element
                       */
                      public boolean isSetExtensionDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTENSIONDATE$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "extensionDate" element
                       */
                      public void setExtensionDate(java.lang.String extensionDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTENSIONDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXTENSIONDATE$16);
                          }
                          target.setStringValue(extensionDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "extensionDate" element
                       */
                      public void xsetExtensionDate(org.apache.xmlbeans.XmlString extensionDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTENSIONDATE$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXTENSIONDATE$16);
                          }
                          target.set(extensionDate);
                        }
                      }
                      
                      /**
                       * Unsets the "extensionDate" element
                       */
                      public void unsetExtensionDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTENSIONDATE$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "projectedEconomicPorfit" element
                       */
                      public java.lang.String getProjectedEconomicPorfit()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PROJECTEDECONOMICPORFIT$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "projectedEconomicPorfit" element
                       */
                      public org.apache.xmlbeans.XmlString xgetProjectedEconomicPorfit()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PROJECTEDECONOMICPORFIT$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "projectedEconomicPorfit" element
                       */
                      public boolean isSetProjectedEconomicPorfit()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PROJECTEDECONOMICPORFIT$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "projectedEconomicPorfit" element
                       */
                      public void setProjectedEconomicPorfit(java.lang.String projectedEconomicPorfit)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PROJECTEDECONOMICPORFIT$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PROJECTEDECONOMICPORFIT$18);
                          }
                          target.setStringValue(projectedEconomicPorfit);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "projectedEconomicPorfit" element
                       */
                      public void xsetProjectedEconomicPorfit(org.apache.xmlbeans.XmlString projectedEconomicPorfit)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PROJECTEDECONOMICPORFIT$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PROJECTEDECONOMICPORFIT$18);
                          }
                          target.set(projectedEconomicPorfit);
                        }
                      }
                      
                      /**
                       * Unsets the "projectedEconomicPorfit" element
                       */
                      public void unsetProjectedEconomicPorfit()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PROJECTEDECONOMICPORFIT$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "expectedLossForCreditPurpose" element
                       */
                      public java.lang.String getExpectedLossForCreditPurpose()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "expectedLossForCreditPurpose" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExpectedLossForCreditPurpose()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "expectedLossForCreditPurpose" element
                       */
                      public boolean isSetExpectedLossForCreditPurpose()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXPECTEDLOSSFORCREDITPURPOSE$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "expectedLossForCreditPurpose" element
                       */
                      public void setExpectedLossForCreditPurpose(java.lang.String expectedLossForCreditPurpose)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20);
                          }
                          target.setStringValue(expectedLossForCreditPurpose);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "expectedLossForCreditPurpose" element
                       */
                      public void xsetExpectedLossForCreditPurpose(org.apache.xmlbeans.XmlString expectedLossForCreditPurpose)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXPECTEDLOSSFORCREDITPURPOSE$20);
                          }
                          target.set(expectedLossForCreditPurpose);
                        }
                      }
                      
                      /**
                       * Unsets the "expectedLossForCreditPurpose" element
                       */
                      public void unsetExpectedLossForCreditPurpose()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXPECTEDLOSSFORCREDITPURPOSE$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "productProgramComplianceInd" element
                       */
                      public java.lang.String getProductProgramComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "productProgramComplianceInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetProductProgramComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "productProgramComplianceInd" element
                       */
                      public boolean isSetProductProgramComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PRODUCTPROGRAMCOMPLIANCEIND$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "productProgramComplianceInd" element
                       */
                      public void setProductProgramComplianceInd(java.lang.String productProgramComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22);
                          }
                          target.setStringValue(productProgramComplianceInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "productProgramComplianceInd" element
                       */
                      public void xsetProductProgramComplianceInd(org.apache.xmlbeans.XmlString productProgramComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PRODUCTPROGRAMCOMPLIANCEIND$22);
                          }
                          target.set(productProgramComplianceInd);
                        }
                      }
                      
                      /**
                       * Unsets the "productProgramComplianceInd" element
                       */
                      public void unsetProductProgramComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PRODUCTPROGRAMCOMPLIANCEIND$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "creditPolicyComplianceInd" element
                       */
                      public java.lang.String getCreditPolicyComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITPOLICYCOMPLIANCEIND$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "creditPolicyComplianceInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCreditPolicyComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITPOLICYCOMPLIANCEIND$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "creditPolicyComplianceInd" element
                       */
                      public boolean isSetCreditPolicyComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CREDITPOLICYCOMPLIANCEIND$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "creditPolicyComplianceInd" element
                       */
                      public void setCreditPolicyComplianceInd(java.lang.String creditPolicyComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CREDITPOLICYCOMPLIANCEIND$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CREDITPOLICYCOMPLIANCEIND$24);
                          }
                          target.setStringValue(creditPolicyComplianceInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "creditPolicyComplianceInd" element
                       */
                      public void xsetCreditPolicyComplianceInd(org.apache.xmlbeans.XmlString creditPolicyComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CREDITPOLICYCOMPLIANCEIND$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CREDITPOLICYCOMPLIANCEIND$24);
                          }
                          target.set(creditPolicyComplianceInd);
                        }
                      }
                      
                      /**
                       * Unsets the "creditPolicyComplianceInd" element
                       */
                      public void unsetCreditPolicyComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CREDITPOLICYCOMPLIANCEIND$24, 0);
                        }
                      }
                      
                      /**
                       * Gets the "underWritingComplianceInd" element
                       */
                      public java.lang.String getUnderWritingComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UNDERWRITINGCOMPLIANCEIND$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "underWritingComplianceInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUnderWritingComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UNDERWRITINGCOMPLIANCEIND$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "underWritingComplianceInd" element
                       */
                      public boolean isSetUnderWritingComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UNDERWRITINGCOMPLIANCEIND$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "underWritingComplianceInd" element
                       */
                      public void setUnderWritingComplianceInd(java.lang.String underWritingComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UNDERWRITINGCOMPLIANCEIND$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UNDERWRITINGCOMPLIANCEIND$26);
                          }
                          target.setStringValue(underWritingComplianceInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "underWritingComplianceInd" element
                       */
                      public void xsetUnderWritingComplianceInd(org.apache.xmlbeans.XmlString underWritingComplianceInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UNDERWRITINGCOMPLIANCEIND$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UNDERWRITINGCOMPLIANCEIND$26);
                          }
                          target.set(underWritingComplianceInd);
                        }
                      }
                      
                      /**
                       * Unsets the "underWritingComplianceInd" element
                       */
                      public void unsetUnderWritingComplianceInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UNDERWRITINGCOMPLIANCEIND$26, 0);
                        }
                      }
                      
                      /**
                       * Gets the "countryRiskApprReqd" element
                       */
                      public java.lang.String getCountryRiskApprReqd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRYRISKAPPRREQD$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "countryRiskApprReqd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCountryRiskApprReqd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRYRISKAPPRREQD$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "countryRiskApprReqd" element
                       */
                      public boolean isSetCountryRiskApprReqd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COUNTRYRISKAPPRREQD$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "countryRiskApprReqd" element
                       */
                      public void setCountryRiskApprReqd(java.lang.String countryRiskApprReqd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COUNTRYRISKAPPRREQD$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COUNTRYRISKAPPRREQD$28);
                          }
                          target.setStringValue(countryRiskApprReqd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "countryRiskApprReqd" element
                       */
                      public void xsetCountryRiskApprReqd(org.apache.xmlbeans.XmlString countryRiskApprReqd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COUNTRYRISKAPPRREQD$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COUNTRYRISKAPPRREQD$28);
                          }
                          target.set(countryRiskApprReqd);
                        }
                      }
                      
                      /**
                       * Unsets the "countryRiskApprReqd" element
                       */
                      public void unsetCountryRiskApprReqd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COUNTRYRISKAPPRREQD$28, 0);
                        }
                      }
                      
                      /**
                       * Gets the "firstApproverEmpId" element
                       */
                      public java.lang.String getFirstApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVEREMPID$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "firstApproverEmpId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFirstApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVEREMPID$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "firstApproverEmpId" element
                       */
                      public boolean isSetFirstApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FIRSTAPPROVEREMPID$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "firstApproverEmpId" element
                       */
                      public void setFirstApproverEmpId(java.lang.String firstApproverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVEREMPID$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FIRSTAPPROVEREMPID$30);
                          }
                          target.setStringValue(firstApproverEmpId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "firstApproverEmpId" element
                       */
                      public void xsetFirstApproverEmpId(org.apache.xmlbeans.XmlString firstApproverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVEREMPID$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FIRSTAPPROVEREMPID$30);
                          }
                          target.set(firstApproverEmpId);
                        }
                      }
                      
                      /**
                       * Unsets the "firstApproverEmpId" element
                       */
                      public void unsetFirstApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FIRSTAPPROVEREMPID$30, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "firstApproverLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation[] getFirstApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(FIRSTAPPROVERLOCATION$32, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "firstApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation getFirstApproverLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation)get_store().find_element_user(FIRSTAPPROVERLOCATION$32, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "firstApproverLocation" element
                       */
                      public int sizeOfFirstApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FIRSTAPPROVERLOCATION$32);
                        }
                      }
                      
                      /**
                       * Sets array of all "firstApproverLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setFirstApproverLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation[] firstApproverLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(firstApproverLocationArray, FIRSTAPPROVERLOCATION$32);
                      }
                      
                      /**
                       * Sets ith "firstApproverLocation" element
                       */
                      public void setFirstApproverLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation firstApproverLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation)get_store().find_element_user(FIRSTAPPROVERLOCATION$32, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(firstApproverLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "firstApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation insertNewFirstApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation)get_store().insert_element_user(FIRSTAPPROVERLOCATION$32, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "firstApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation addNewFirstApproverLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation)get_store().add_element_user(FIRSTAPPROVERLOCATION$32);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "firstApproverLocation" element
                       */
                      public void removeFirstApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FIRSTAPPROVERLOCATION$32, i);
                        }
                      }
                      
                      /**
                       * Gets the "firstApproverCoinNo" element
                       */
                      public java.lang.String getFirstApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVERCOINNO$34, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "firstApproverCoinNo" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFirstApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVERCOINNO$34, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "firstApproverCoinNo" element
                       */
                      public boolean isSetFirstApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FIRSTAPPROVERCOINNO$34) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "firstApproverCoinNo" element
                       */
                      public void setFirstApproverCoinNo(java.lang.String firstApproverCoinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVERCOINNO$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FIRSTAPPROVERCOINNO$34);
                          }
                          target.setStringValue(firstApproverCoinNo);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "firstApproverCoinNo" element
                       */
                      public void xsetFirstApproverCoinNo(org.apache.xmlbeans.XmlString firstApproverCoinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVERCOINNO$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FIRSTAPPROVERCOINNO$34);
                          }
                          target.set(firstApproverCoinNo);
                        }
                      }
                      
                      /**
                       * Unsets the "firstApproverCoinNo" element
                       */
                      public void unsetFirstApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FIRSTAPPROVERCOINNO$34, 0);
                        }
                      }
                      
                      /**
                       * Gets the "firstApproverName" element
                       */
                      public java.lang.String getFirstApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVERNAME$36, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "firstApproverName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFirstApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVERNAME$36, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "firstApproverName" element
                       */
                      public boolean isSetFirstApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FIRSTAPPROVERNAME$36) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "firstApproverName" element
                       */
                      public void setFirstApproverName(java.lang.String firstApproverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIRSTAPPROVERNAME$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FIRSTAPPROVERNAME$36);
                          }
                          target.setStringValue(firstApproverName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "firstApproverName" element
                       */
                      public void xsetFirstApproverName(org.apache.xmlbeans.XmlString firstApproverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FIRSTAPPROVERNAME$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FIRSTAPPROVERNAME$36);
                          }
                          target.set(firstApproverName);
                        }
                      }
                      
                      /**
                       * Unsets the "firstApproverName" element
                       */
                      public void unsetFirstApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FIRSTAPPROVERNAME$36, 0);
                        }
                      }
                      
                      /**
                       * Gets the "secondApproverEmpId" element
                       */
                      public java.lang.String getSecondApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVEREMPID$38, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "secondApproverEmpId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecondApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVEREMPID$38, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "secondApproverEmpId" element
                       */
                      public boolean isSetSecondApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECONDAPPROVEREMPID$38) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "secondApproverEmpId" element
                       */
                      public void setSecondApproverEmpId(java.lang.String secondApproverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVEREMPID$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECONDAPPROVEREMPID$38);
                          }
                          target.setStringValue(secondApproverEmpId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "secondApproverEmpId" element
                       */
                      public void xsetSecondApproverEmpId(org.apache.xmlbeans.XmlString secondApproverEmpId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVEREMPID$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECONDAPPROVEREMPID$38);
                          }
                          target.set(secondApproverEmpId);
                        }
                      }
                      
                      /**
                       * Unsets the "secondApproverEmpId" element
                       */
                      public void unsetSecondApproverEmpId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECONDAPPROVEREMPID$38, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "secondApproverLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation[] getSecondApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECONDAPPROVERLOCATION$40, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "secondApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation getSecondApproverLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation)get_store().find_element_user(SECONDAPPROVERLOCATION$40, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "secondApproverLocation" element
                       */
                      public int sizeOfSecondApproverLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECONDAPPROVERLOCATION$40);
                        }
                      }
                      
                      /**
                       * Sets array of all "secondApproverLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecondApproverLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation[] secondApproverLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(secondApproverLocationArray, SECONDAPPROVERLOCATION$40);
                      }
                      
                      /**
                       * Sets ith "secondApproverLocation" element
                       */
                      public void setSecondApproverLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation secondApproverLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation)get_store().find_element_user(SECONDAPPROVERLOCATION$40, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(secondApproverLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "secondApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation insertNewSecondApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation)get_store().insert_element_user(SECONDAPPROVERLOCATION$40, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "secondApproverLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation addNewSecondApproverLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation)get_store().add_element_user(SECONDAPPROVERLOCATION$40);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "secondApproverLocation" element
                       */
                      public void removeSecondApproverLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECONDAPPROVERLOCATION$40, i);
                        }
                      }
                      
                      /**
                       * Gets the "secondApproverCoinNo" element
                       */
                      public java.lang.String getSecondApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVERCOINNO$42, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "secondApproverCoinNo" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecondApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVERCOINNO$42, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "secondApproverCoinNo" element
                       */
                      public boolean isSetSecondApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECONDAPPROVERCOINNO$42) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "secondApproverCoinNo" element
                       */
                      public void setSecondApproverCoinNo(java.lang.String secondApproverCoinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVERCOINNO$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECONDAPPROVERCOINNO$42);
                          }
                          target.setStringValue(secondApproverCoinNo);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "secondApproverCoinNo" element
                       */
                      public void xsetSecondApproverCoinNo(org.apache.xmlbeans.XmlString secondApproverCoinNo)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVERCOINNO$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECONDAPPROVERCOINNO$42);
                          }
                          target.set(secondApproverCoinNo);
                        }
                      }
                      
                      /**
                       * Unsets the "secondApproverCoinNo" element
                       */
                      public void unsetSecondApproverCoinNo()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECONDAPPROVERCOINNO$42, 0);
                        }
                      }
                      
                      /**
                       * Gets the "secondApproverName" element
                       */
                      public java.lang.String getSecondApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVERNAME$44, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "secondApproverName" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecondApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVERNAME$44, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "secondApproverName" element
                       */
                      public boolean isSetSecondApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECONDAPPROVERNAME$44) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "secondApproverName" element
                       */
                      public void setSecondApproverName(java.lang.String secondApproverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECONDAPPROVERNAME$44, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECONDAPPROVERNAME$44);
                          }
                          target.setStringValue(secondApproverName);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "secondApproverName" element
                       */
                      public void xsetSecondApproverName(org.apache.xmlbeans.XmlString secondApproverName)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECONDAPPROVERNAME$44, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECONDAPPROVERNAME$44);
                          }
                          target.set(secondApproverName);
                        }
                      }
                      
                      /**
                       * Unsets the "secondApproverName" element
                       */
                      public void unsetSecondApproverName()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECONDAPPROVERNAME$44, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$46, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$46, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$46) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$46, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$46);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$46, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$46);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$46, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$48, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$48, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$48) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$48, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$48);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$48, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$48);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$48, 0);
                        }
                      }
                      /**
                       * An XML originatingLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class OriginatingLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.OriginatingLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public OriginatingLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "originatingLocationId");
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "originatingLocationCountry");
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "originatingLocationOrganization");
                        
                        
                        /**
                         * Gets the "originatingLocationId" element
                         */
                        public java.lang.String getOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationId" element
                         */
                        public boolean isSetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationId" element
                         */
                        public void setOriginatingLocationId(java.lang.String originatingLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONID$0);
                            }
                            target.setStringValue(originatingLocationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationId" element
                         */
                        public void xsetOriginatingLocationId(org.apache.xmlbeans.XmlString originatingLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONID$0);
                            }
                            target.set(originatingLocationId);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationId" element
                         */
                        public void unsetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "originatingLocationCountry" element
                         */
                        public java.lang.String getOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationCountry" element
                         */
                        public boolean isSetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationCountry" element
                         */
                        public void setOriginatingLocationCountry(java.lang.String originatingLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(originatingLocationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationCountry" element
                         */
                        public void xsetOriginatingLocationCountry(org.apache.xmlbeans.XmlString originatingLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONCOUNTRY$2);
                            }
                            target.set(originatingLocationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationCountry" element
                         */
                        public void unsetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "originatingLocationOrganization" element
                         */
                        public java.lang.String getOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationOrganization" element
                         */
                        public boolean isSetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationOrganization" element
                         */
                        public void setOriginatingLocationOrganization(java.lang.String originatingLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(originatingLocationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationOrganization" element
                         */
                        public void xsetOriginatingLocationOrganization(org.apache.xmlbeans.XmlString originatingLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONORGANIZATION$4);
                            }
                            target.set(originatingLocationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationOrganization" element
                         */
                        public void unsetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML firstApproverLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class FirstApproverLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.FirstApproverLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public FirstApproverLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName LOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "locationId");
                        private static final javax.xml.namespace.QName LOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "locationCountry");
                        private static final javax.xml.namespace.QName LOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "locationOrganization");
                        
                        
                        /**
                         * Gets the "locationId" element
                         */
                        public java.lang.String getLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationId" element
                         */
                        public boolean isSetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationId" element
                         */
                        public void setLocationId(java.lang.String locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.setStringValue(locationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationId" element
                         */
                        public void xsetLocationId(org.apache.xmlbeans.XmlString locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.set(locationId);
                          }
                        }
                        
                        /**
                         * Unsets the "locationId" element
                         */
                        public void unsetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationCountry" element
                         */
                        public java.lang.String getLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationCountry" element
                         */
                        public boolean isSetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationCountry" element
                         */
                        public void setLocationCountry(java.lang.String locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(locationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationCountry" element
                         */
                        public void xsetLocationCountry(org.apache.xmlbeans.XmlString locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.set(locationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "locationCountry" element
                         */
                        public void unsetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationOrganization" element
                         */
                        public java.lang.String getLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationOrganization" element
                         */
                        public boolean isSetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationOrganization" element
                         */
                        public void setLocationOrganization(java.lang.String locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(locationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationOrganization" element
                         */
                        public void xsetLocationOrganization(org.apache.xmlbeans.XmlString locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.set(locationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "locationOrganization" element
                         */
                        public void unsetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML secondApproverLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class SecondApproverLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitProfile.SecondApproverLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public SecondApproverLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName LOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "locationId");
                        private static final javax.xml.namespace.QName LOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "locationCountry");
                        private static final javax.xml.namespace.QName LOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "locationOrganization");
                        
                        
                        /**
                         * Gets the "locationId" element
                         */
                        public java.lang.String getLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationId" element
                         */
                        public boolean isSetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationId" element
                         */
                        public void setLocationId(java.lang.String locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.setStringValue(locationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationId" element
                         */
                        public void xsetLocationId(org.apache.xmlbeans.XmlString locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.set(locationId);
                          }
                        }
                        
                        /**
                         * Unsets the "locationId" element
                         */
                        public void unsetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationCountry" element
                         */
                        public java.lang.String getLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationCountry" element
                         */
                        public boolean isSetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationCountry" element
                         */
                        public void setLocationCountry(java.lang.String locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(locationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationCountry" element
                         */
                        public void xsetLocationCountry(org.apache.xmlbeans.XmlString locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.set(locationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "locationCountry" element
                         */
                        public void unsetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationOrganization" element
                         */
                        public java.lang.String getLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationOrganization" element
                         */
                        public boolean isSetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationOrganization" element
                         */
                        public void setLocationOrganization(java.lang.String locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(locationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationOrganization" element
                         */
                        public void xsetLocationOrganization(org.apache.xmlbeans.XmlString locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.set(locationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "locationOrganization" element
                         */
                        public void unsetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML policyException(@).
                     *
                     * This is a complex type.
                     */
                    public static class PolicyExceptionImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public PolicyExceptionImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName POLICYEXCEPTIONID$6 = 
                        new javax.xml.namespace.QName("", "policyExceptionId");
                      private static final javax.xml.namespace.QName POLICYEXCEPTIONCODE$8 = 
                        new javax.xml.namespace.QName("", "policyExceptionCode");
                      private static final javax.xml.namespace.QName EXCEPTIONCODEEFFECTIVEDATE$10 = 
                        new javax.xml.namespace.QName("", "ExceptionCodeEffectiveDate");
                      private static final javax.xml.namespace.QName COMMENTS$12 = 
                        new javax.xml.namespace.QName("", "comments");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$14 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$16 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "policyExceptionId" element
                       */
                      public java.lang.String getPolicyExceptionId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POLICYEXCEPTIONID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "policyExceptionId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPolicyExceptionId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POLICYEXCEPTIONID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "policyExceptionId" element
                       */
                      public boolean isSetPolicyExceptionId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(POLICYEXCEPTIONID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "policyExceptionId" element
                       */
                      public void setPolicyExceptionId(java.lang.String policyExceptionId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(POLICYEXCEPTIONID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(POLICYEXCEPTIONID$6);
                          }
                          target.setStringValue(policyExceptionId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "policyExceptionId" element
                       */
                      public void xsetPolicyExceptionId(org.apache.xmlbeans.XmlString policyExceptionId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(POLICYEXCEPTIONID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(POLICYEXCEPTIONID$6);
                          }
                          target.set(policyExceptionId);
                        }
                      }
                      
                      /**
                       * Unsets the "policyExceptionId" element
                       */
                      public void unsetPolicyExceptionId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(POLICYEXCEPTIONID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "policyExceptionCode" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode[] getPolicyExceptionCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(POLICYEXCEPTIONCODE$8, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "policyExceptionCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode getPolicyExceptionCodeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode)get_store().find_element_user(POLICYEXCEPTIONCODE$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "policyExceptionCode" element
                       */
                      public int sizeOfPolicyExceptionCodeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(POLICYEXCEPTIONCODE$8);
                        }
                      }
                      
                      /**
                       * Sets array of all "policyExceptionCode" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setPolicyExceptionCodeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode[] policyExceptionCodeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(policyExceptionCodeArray, POLICYEXCEPTIONCODE$8);
                      }
                      
                      /**
                       * Sets ith "policyExceptionCode" element
                       */
                      public void setPolicyExceptionCodeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode policyExceptionCode)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode)get_store().find_element_user(POLICYEXCEPTIONCODE$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(policyExceptionCode);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "policyExceptionCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode insertNewPolicyExceptionCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode)get_store().insert_element_user(POLICYEXCEPTIONCODE$8, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "policyExceptionCode" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode addNewPolicyExceptionCode()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode)get_store().add_element_user(POLICYEXCEPTIONCODE$8);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "policyExceptionCode" element
                       */
                      public void removePolicyExceptionCode(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(POLICYEXCEPTIONCODE$8, i);
                        }
                      }
                      
                      /**
                       * Gets the "ExceptionCodeEffectiveDate" element
                       */
                      public java.lang.String getExceptionCodeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXCEPTIONCODEEFFECTIVEDATE$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ExceptionCodeEffectiveDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExceptionCodeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXCEPTIONCODEEFFECTIVEDATE$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ExceptionCodeEffectiveDate" element
                       */
                      public boolean isSetExceptionCodeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXCEPTIONCODEEFFECTIVEDATE$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ExceptionCodeEffectiveDate" element
                       */
                      public void setExceptionCodeEffectiveDate(java.lang.String exceptionCodeEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXCEPTIONCODEEFFECTIVEDATE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXCEPTIONCODEEFFECTIVEDATE$10);
                          }
                          target.setStringValue(exceptionCodeEffectiveDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ExceptionCodeEffectiveDate" element
                       */
                      public void xsetExceptionCodeEffectiveDate(org.apache.xmlbeans.XmlString exceptionCodeEffectiveDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXCEPTIONCODEEFFECTIVEDATE$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXCEPTIONCODEEFFECTIVEDATE$10);
                          }
                          target.set(exceptionCodeEffectiveDate);
                        }
                      }
                      
                      /**
                       * Unsets the "ExceptionCodeEffectiveDate" element
                       */
                      public void unsetExceptionCodeEffectiveDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXCEPTIONCODEEFFECTIVEDATE$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "comments" element
                       */
                      public java.lang.String getComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "comments" element
                       */
                      public org.apache.xmlbeans.XmlString xgetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "comments" element
                       */
                      public boolean isSetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COMMENTS$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "comments" element
                       */
                      public void setComments(java.lang.String comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMENTS$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COMMENTS$12);
                          }
                          target.setStringValue(comments);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "comments" element
                       */
                      public void xsetComments(org.apache.xmlbeans.XmlString comments)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMENTS$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COMMENTS$12);
                          }
                          target.set(comments);
                        }
                      }
                      
                      /**
                       * Unsets the "comments" element
                       */
                      public void unsetComments()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COMMENTS$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$14);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$14);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$16);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$16);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$16, 0);
                        }
                      }
                      /**
                       * An XML policyExceptionCode(@).
                       *
                       * This is a complex type.
                       */
                      public static class PolicyExceptionCodeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.PolicyException.PolicyExceptionCode
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public PolicyExceptionCodeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML limits(@).
                     *
                     * This is a complex type.
                     */
                    public static class LimitsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public LimitsImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName EXPIRYDATE$8 = 
                        new javax.xml.namespace.QName("", "expiryDate");
                      private static final javax.xml.namespace.QName OUTERLIMITID$10 = 
                        new javax.xml.namespace.QName("", "outerLimitId");
                      private static final javax.xml.namespace.QName ORIGINATINGBOOKINGLOCATION$12 = 
                        new javax.xml.namespace.QName("", "originatingBookingLocation");
                      private static final javax.xml.namespace.QName PRODUCTTYPE$14 = 
                        new javax.xml.namespace.QName("", "productType");
                      private static final javax.xml.namespace.QName LIMITTYPE$16 = 
                        new javax.xml.namespace.QName("", "limitType");
                      private static final javax.xml.namespace.QName LIMITCURRENCY$18 = 
                        new javax.xml.namespace.QName("", "limitCurrency");
                      private static final javax.xml.namespace.QName LIMITAMOUNT$20 = 
                        new javax.xml.namespace.QName("", "limitAmount");
                      private static final javax.xml.namespace.QName LIMITSECURITY$22 = 
                        new javax.xml.namespace.QName("", "limitSecurity");
                      private static final javax.xml.namespace.QName LIMITTENOR$24 = 
                        new javax.xml.namespace.QName("", "limitTenor");
                      private static final javax.xml.namespace.QName LIMITTENORBASIS$26 = 
                        new javax.xml.namespace.QName("", "limitTenorBasis");
                      private static final javax.xml.namespace.QName LIMITINTERESTBASE$28 = 
                        new javax.xml.namespace.QName("", "limitInterestBase");
                      private static final javax.xml.namespace.QName INTERESTMARGIN$30 = 
                        new javax.xml.namespace.QName("", "interestMargin");
                      private static final javax.xml.namespace.QName COMMISSION$32 = 
                        new javax.xml.namespace.QName("", "commission");
                      private static final javax.xml.namespace.QName FEE$34 = 
                        new javax.xml.namespace.QName("", "fee");
                      private static final javax.xml.namespace.QName CONDITION$36 = 
                        new javax.xml.namespace.QName("", "condition");
                      private static final javax.xml.namespace.QName LIMITADVISEDIND$38 = 
                        new javax.xml.namespace.QName("", "limitAdvisedInd");
                      private static final javax.xml.namespace.QName LIMITCOMMITTEDIND$40 = 
                        new javax.xml.namespace.QName("", "limitCommittedInd");
                      private static final javax.xml.namespace.QName SHAREDLIMITIND$42 = 
                        new javax.xml.namespace.QName("", "sharedLimitInd");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$44 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$46 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "expiryDate" element
                       */
                      public java.lang.String getExpiryDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXPIRYDATE$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "expiryDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExpiryDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXPIRYDATE$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "expiryDate" element
                       */
                      public boolean isSetExpiryDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXPIRYDATE$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "expiryDate" element
                       */
                      public void setExpiryDate(java.lang.String expiryDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXPIRYDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXPIRYDATE$8);
                          }
                          target.setStringValue(expiryDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "expiryDate" element
                       */
                      public void xsetExpiryDate(org.apache.xmlbeans.XmlString expiryDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXPIRYDATE$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXPIRYDATE$8);
                          }
                          target.set(expiryDate);
                        }
                      }
                      
                      /**
                       * Unsets the "expiryDate" element
                       */
                      public void unsetExpiryDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXPIRYDATE$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "outerLimitId" element
                       */
                      public java.lang.String getOuterLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OUTERLIMITID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "outerLimitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetOuterLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OUTERLIMITID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "outerLimitId" element
                       */
                      public boolean isSetOuterLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(OUTERLIMITID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "outerLimitId" element
                       */
                      public void setOuterLimitId(java.lang.String outerLimitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(OUTERLIMITID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(OUTERLIMITID$10);
                          }
                          target.setStringValue(outerLimitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "outerLimitId" element
                       */
                      public void xsetOuterLimitId(org.apache.xmlbeans.XmlString outerLimitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(OUTERLIMITID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(OUTERLIMITID$10);
                          }
                          target.set(outerLimitId);
                        }
                      }
                      
                      /**
                       * Unsets the "outerLimitId" element
                       */
                      public void unsetOuterLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(OUTERLIMITID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "originatingBookingLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation[] getOriginatingBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ORIGINATINGBOOKINGLOCATION$12, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "originatingBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation getOriginatingBookingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation)get_store().find_element_user(ORIGINATINGBOOKINGLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "originatingBookingLocation" element
                       */
                      public int sizeOfOriginatingBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ORIGINATINGBOOKINGLOCATION$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "originatingBookingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setOriginatingBookingLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation[] originatingBookingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(originatingBookingLocationArray, ORIGINATINGBOOKINGLOCATION$12);
                      }
                      
                      /**
                       * Sets ith "originatingBookingLocation" element
                       */
                      public void setOriginatingBookingLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation originatingBookingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation)get_store().find_element_user(ORIGINATINGBOOKINGLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(originatingBookingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "originatingBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation insertNewOriginatingBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation)get_store().insert_element_user(ORIGINATINGBOOKINGLOCATION$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "originatingBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation addNewOriginatingBookingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation)get_store().add_element_user(ORIGINATINGBOOKINGLOCATION$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "originatingBookingLocation" element
                       */
                      public void removeOriginatingBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ORIGINATINGBOOKINGLOCATION$12, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "productType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType[] getProductTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(PRODUCTTYPE$14, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "productType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType getProductTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType)get_store().find_element_user(PRODUCTTYPE$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "productType" element
                       */
                      public int sizeOfProductTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PRODUCTTYPE$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "productType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setProductTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType[] productTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(productTypeArray, PRODUCTTYPE$14);
                      }
                      
                      /**
                       * Sets ith "productType" element
                       */
                      public void setProductTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType productType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType)get_store().find_element_user(PRODUCTTYPE$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(productType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "productType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType insertNewProductType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType)get_store().insert_element_user(PRODUCTTYPE$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "productType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType addNewProductType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType)get_store().add_element_user(PRODUCTTYPE$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "productType" element
                       */
                      public void removeProductType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PRODUCTTYPE$14, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "limitType" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType[] getLimitTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LIMITTYPE$16, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "limitType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType getLimitTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType)get_store().find_element_user(LIMITTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "limitType" element
                       */
                      public int sizeOfLimitTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITTYPE$16);
                        }
                      }
                      
                      /**
                       * Sets array of all "limitType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLimitTypeArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType[] limitTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(limitTypeArray, LIMITTYPE$16);
                      }
                      
                      /**
                       * Sets ith "limitType" element
                       */
                      public void setLimitTypeArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType limitType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType)get_store().find_element_user(LIMITTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(limitType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "limitType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType insertNewLimitType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType)get_store().insert_element_user(LIMITTYPE$16, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "limitType" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType addNewLimitType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType)get_store().add_element_user(LIMITTYPE$16);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "limitType" element
                       */
                      public void removeLimitType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITTYPE$16, i);
                        }
                      }
                      
                      /**
                       * Gets the "limitCurrency" element
                       */
                      public java.lang.String getLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITCURRENCY$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitCurrency" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITCURRENCY$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitCurrency" element
                       */
                      public boolean isSetLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITCURRENCY$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitCurrency" element
                       */
                      public void setLimitCurrency(java.lang.String limitCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITCURRENCY$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITCURRENCY$18);
                          }
                          target.setStringValue(limitCurrency);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitCurrency" element
                       */
                      public void xsetLimitCurrency(org.apache.xmlbeans.XmlString limitCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITCURRENCY$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITCURRENCY$18);
                          }
                          target.set(limitCurrency);
                        }
                      }
                      
                      /**
                       * Unsets the "limitCurrency" element
                       */
                      public void unsetLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITCURRENCY$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitAmount" element
                       */
                      public java.lang.String getLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITAMOUNT$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitAmount" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITAMOUNT$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitAmount" element
                       */
                      public boolean isSetLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITAMOUNT$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitAmount" element
                       */
                      public void setLimitAmount(java.lang.String limitAmount)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITAMOUNT$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITAMOUNT$20);
                          }
                          target.setStringValue(limitAmount);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitAmount" element
                       */
                      public void xsetLimitAmount(org.apache.xmlbeans.XmlString limitAmount)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITAMOUNT$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITAMOUNT$20);
                          }
                          target.set(limitAmount);
                        }
                      }
                      
                      /**
                       * Unsets the "limitAmount" element
                       */
                      public void unsetLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITAMOUNT$20, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "limitSecurity" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity[] getLimitSecurityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LIMITSECURITY$22, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "limitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity getLimitSecurityArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity)get_store().find_element_user(LIMITSECURITY$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "limitSecurity" element
                       */
                      public int sizeOfLimitSecurityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITSECURITY$22);
                        }
                      }
                      
                      /**
                       * Sets array of all "limitSecurity" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLimitSecurityArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity[] limitSecurityArray)
                      {
                        check_orphaned();
                        arraySetterHelper(limitSecurityArray, LIMITSECURITY$22);
                      }
                      
                      /**
                       * Sets ith "limitSecurity" element
                       */
                      public void setLimitSecurityArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity limitSecurity)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity)get_store().find_element_user(LIMITSECURITY$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(limitSecurity);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "limitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity insertNewLimitSecurity(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity)get_store().insert_element_user(LIMITSECURITY$22, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "limitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity addNewLimitSecurity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity)get_store().add_element_user(LIMITSECURITY$22);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "limitSecurity" element
                       */
                      public void removeLimitSecurity(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITSECURITY$22, i);
                        }
                      }
                      
                      /**
                       * Gets the "limitTenor" element
                       */
                      public java.lang.String getLimitTenor()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITTENOR$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitTenor" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitTenor()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITTENOR$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitTenor" element
                       */
                      public boolean isSetLimitTenor()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITTENOR$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitTenor" element
                       */
                      public void setLimitTenor(java.lang.String limitTenor)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITTENOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITTENOR$24);
                          }
                          target.setStringValue(limitTenor);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitTenor" element
                       */
                      public void xsetLimitTenor(org.apache.xmlbeans.XmlString limitTenor)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITTENOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITTENOR$24);
                          }
                          target.set(limitTenor);
                        }
                      }
                      
                      /**
                       * Unsets the "limitTenor" element
                       */
                      public void unsetLimitTenor()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITTENOR$24, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "limitTenorBasis" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis[] getLimitTenorBasisArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LIMITTENORBASIS$26, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "limitTenorBasis" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis getLimitTenorBasisArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis)get_store().find_element_user(LIMITTENORBASIS$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "limitTenorBasis" element
                       */
                      public int sizeOfLimitTenorBasisArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITTENORBASIS$26);
                        }
                      }
                      
                      /**
                       * Sets array of all "limitTenorBasis" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLimitTenorBasisArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis[] limitTenorBasisArray)
                      {
                        check_orphaned();
                        arraySetterHelper(limitTenorBasisArray, LIMITTENORBASIS$26);
                      }
                      
                      /**
                       * Sets ith "limitTenorBasis" element
                       */
                      public void setLimitTenorBasisArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis limitTenorBasis)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis)get_store().find_element_user(LIMITTENORBASIS$26, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(limitTenorBasis);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "limitTenorBasis" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis insertNewLimitTenorBasis(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis)get_store().insert_element_user(LIMITTENORBASIS$26, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "limitTenorBasis" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis addNewLimitTenorBasis()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis)get_store().add_element_user(LIMITTENORBASIS$26);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "limitTenorBasis" element
                       */
                      public void removeLimitTenorBasis(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITTENORBASIS$26, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "limitInterestBase" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase[] getLimitInterestBaseArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(LIMITINTERESTBASE$28, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "limitInterestBase" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase getLimitInterestBaseArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase)get_store().find_element_user(LIMITINTERESTBASE$28, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "limitInterestBase" element
                       */
                      public int sizeOfLimitInterestBaseArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITINTERESTBASE$28);
                        }
                      }
                      
                      /**
                       * Sets array of all "limitInterestBase" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setLimitInterestBaseArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase[] limitInterestBaseArray)
                      {
                        check_orphaned();
                        arraySetterHelper(limitInterestBaseArray, LIMITINTERESTBASE$28);
                      }
                      
                      /**
                       * Sets ith "limitInterestBase" element
                       */
                      public void setLimitInterestBaseArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase limitInterestBase)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase)get_store().find_element_user(LIMITINTERESTBASE$28, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(limitInterestBase);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "limitInterestBase" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase insertNewLimitInterestBase(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase)get_store().insert_element_user(LIMITINTERESTBASE$28, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "limitInterestBase" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase addNewLimitInterestBase()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase)get_store().add_element_user(LIMITINTERESTBASE$28);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "limitInterestBase" element
                       */
                      public void removeLimitInterestBase(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITINTERESTBASE$28, i);
                        }
                      }
                      
                      /**
                       * Gets the "interestMargin" element
                       */
                      public java.lang.String getInterestMargin()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INTERESTMARGIN$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "interestMargin" element
                       */
                      public org.apache.xmlbeans.XmlString xgetInterestMargin()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INTERESTMARGIN$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "interestMargin" element
                       */
                      public boolean isSetInterestMargin()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(INTERESTMARGIN$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "interestMargin" element
                       */
                      public void setInterestMargin(java.lang.String interestMargin)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(INTERESTMARGIN$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(INTERESTMARGIN$30);
                          }
                          target.setStringValue(interestMargin);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "interestMargin" element
                       */
                      public void xsetInterestMargin(org.apache.xmlbeans.XmlString interestMargin)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(INTERESTMARGIN$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(INTERESTMARGIN$30);
                          }
                          target.set(interestMargin);
                        }
                      }
                      
                      /**
                       * Unsets the "interestMargin" element
                       */
                      public void unsetInterestMargin()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(INTERESTMARGIN$30, 0);
                        }
                      }
                      
                      /**
                       * Gets the "commission" element
                       */
                      public java.lang.String getCommission()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMISSION$32, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "commission" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCommission()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMISSION$32, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "commission" element
                       */
                      public boolean isSetCommission()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COMMISSION$32) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "commission" element
                       */
                      public void setCommission(java.lang.String commission)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COMMISSION$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COMMISSION$32);
                          }
                          target.setStringValue(commission);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "commission" element
                       */
                      public void xsetCommission(org.apache.xmlbeans.XmlString commission)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COMMISSION$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COMMISSION$32);
                          }
                          target.set(commission);
                        }
                      }
                      
                      /**
                       * Unsets the "commission" element
                       */
                      public void unsetCommission()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COMMISSION$32, 0);
                        }
                      }
                      
                      /**
                       * Gets the "fee" element
                       */
                      public java.lang.String getFee()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FEE$34, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "fee" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFee()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FEE$34, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "fee" element
                       */
                      public boolean isSetFee()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FEE$34) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "fee" element
                       */
                      public void setFee(java.lang.String fee)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FEE$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FEE$34);
                          }
                          target.setStringValue(fee);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "fee" element
                       */
                      public void xsetFee(org.apache.xmlbeans.XmlString fee)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FEE$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FEE$34);
                          }
                          target.set(fee);
                        }
                      }
                      
                      /**
                       * Unsets the "fee" element
                       */
                      public void unsetFee()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FEE$34, 0);
                        }
                      }
                      
                      /**
                       * Gets the "condition" element
                       */
                      public java.lang.String getCondition()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONDITION$36, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "condition" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCondition()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CONDITION$36, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "condition" element
                       */
                      public boolean isSetCondition()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CONDITION$36) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "condition" element
                       */
                      public void setCondition(java.lang.String condition)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONDITION$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CONDITION$36);
                          }
                          target.setStringValue(condition);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "condition" element
                       */
                      public void xsetCondition(org.apache.xmlbeans.XmlString condition)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CONDITION$36, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CONDITION$36);
                          }
                          target.set(condition);
                        }
                      }
                      
                      /**
                       * Unsets the "condition" element
                       */
                      public void unsetCondition()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CONDITION$36, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitAdvisedInd" element
                       */
                      public java.lang.String getLimitAdvisedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITADVISEDIND$38, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitAdvisedInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitAdvisedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITADVISEDIND$38, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitAdvisedInd" element
                       */
                      public boolean isSetLimitAdvisedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITADVISEDIND$38) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitAdvisedInd" element
                       */
                      public void setLimitAdvisedInd(java.lang.String limitAdvisedInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITADVISEDIND$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITADVISEDIND$38);
                          }
                          target.setStringValue(limitAdvisedInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitAdvisedInd" element
                       */
                      public void xsetLimitAdvisedInd(org.apache.xmlbeans.XmlString limitAdvisedInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITADVISEDIND$38, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITADVISEDIND$38);
                          }
                          target.set(limitAdvisedInd);
                        }
                      }
                      
                      /**
                       * Unsets the "limitAdvisedInd" element
                       */
                      public void unsetLimitAdvisedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITADVISEDIND$38, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitCommittedInd" element
                       */
                      public java.lang.String getLimitCommittedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITCOMMITTEDIND$40, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitCommittedInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitCommittedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITCOMMITTEDIND$40, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitCommittedInd" element
                       */
                      public boolean isSetLimitCommittedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITCOMMITTEDIND$40) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitCommittedInd" element
                       */
                      public void setLimitCommittedInd(java.lang.String limitCommittedInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITCOMMITTEDIND$40, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITCOMMITTEDIND$40);
                          }
                          target.setStringValue(limitCommittedInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitCommittedInd" element
                       */
                      public void xsetLimitCommittedInd(org.apache.xmlbeans.XmlString limitCommittedInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITCOMMITTEDIND$40, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITCOMMITTEDIND$40);
                          }
                          target.set(limitCommittedInd);
                        }
                      }
                      
                      /**
                       * Unsets the "limitCommittedInd" element
                       */
                      public void unsetLimitCommittedInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITCOMMITTEDIND$40, 0);
                        }
                      }
                      
                      /**
                       * Gets the "sharedLimitInd" element
                       */
                      public java.lang.String getSharedLimitInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SHAREDLIMITIND$42, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "sharedLimitInd" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSharedLimitInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SHAREDLIMITIND$42, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "sharedLimitInd" element
                       */
                      public boolean isSetSharedLimitInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SHAREDLIMITIND$42) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "sharedLimitInd" element
                       */
                      public void setSharedLimitInd(java.lang.String sharedLimitInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SHAREDLIMITIND$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SHAREDLIMITIND$42);
                          }
                          target.setStringValue(sharedLimitInd);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "sharedLimitInd" element
                       */
                      public void xsetSharedLimitInd(org.apache.xmlbeans.XmlString sharedLimitInd)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SHAREDLIMITIND$42, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SHAREDLIMITIND$42);
                          }
                          target.set(sharedLimitInd);
                        }
                      }
                      
                      /**
                       * Unsets the "sharedLimitInd" element
                       */
                      public void unsetSharedLimitInd()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SHAREDLIMITIND$42, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$44, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$44, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$44) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$44, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$44);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$44, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$44);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$44, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$46, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$46, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$46) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$46, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$46);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$46, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$46);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$46, 0);
                        }
                      }
                      /**
                       * An XML originatingBookingLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class OriginatingBookingLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.OriginatingBookingLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public OriginatingBookingLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "originatingLocationId");
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "originatingLocationCountry");
                        private static final javax.xml.namespace.QName ORIGINATINGLOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "originatingLocationOrganization");
                        
                        
                        /**
                         * Gets the "originatingLocationId" element
                         */
                        public java.lang.String getOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationId" element
                         */
                        public boolean isSetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationId" element
                         */
                        public void setOriginatingLocationId(java.lang.String originatingLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONID$0);
                            }
                            target.setStringValue(originatingLocationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationId" element
                         */
                        public void xsetOriginatingLocationId(org.apache.xmlbeans.XmlString originatingLocationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONID$0);
                            }
                            target.set(originatingLocationId);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationId" element
                         */
                        public void unsetOriginatingLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "originatingLocationCountry" element
                         */
                        public java.lang.String getOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationCountry" element
                         */
                        public boolean isSetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationCountry" element
                         */
                        public void setOriginatingLocationCountry(java.lang.String originatingLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(originatingLocationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationCountry" element
                         */
                        public void xsetOriginatingLocationCountry(org.apache.xmlbeans.XmlString originatingLocationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONCOUNTRY$2);
                            }
                            target.set(originatingLocationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationCountry" element
                         */
                        public void unsetOriginatingLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "originatingLocationOrganization" element
                         */
                        public java.lang.String getOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "originatingLocationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "originatingLocationOrganization" element
                         */
                        public boolean isSetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ORIGINATINGLOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "originatingLocationOrganization" element
                         */
                        public void setOriginatingLocationOrganization(java.lang.String originatingLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ORIGINATINGLOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(originatingLocationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "originatingLocationOrganization" element
                         */
                        public void xsetOriginatingLocationOrganization(org.apache.xmlbeans.XmlString originatingLocationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ORIGINATINGLOCATIONORGANIZATION$4);
                            }
                            target.set(originatingLocationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "originatingLocationOrganization" element
                         */
                        public void unsetOriginatingLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ORIGINATINGLOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML productType(@).
                       *
                       * This is a complex type.
                       */
                      public static class ProductTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.ProductType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public ProductTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML limitType(@).
                       *
                       * This is a complex type.
                       */
                      public static class LimitTypeImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitType
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LimitTypeImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML limitSecurity(@).
                       *
                       * This is a complex type.
                       */
                      public static class LimitSecurityImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitSecurity
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LimitSecurityImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML limitTenorBasis(@).
                       *
                       * This is a complex type.
                       */
                      public static class LimitTenorBasisImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitTenorBasis
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LimitTenorBasisImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML limitInterestBase(@).
                       *
                       * This is a complex type.
                       */
                      public static class LimitInterestBaseImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.Limits.LimitInterestBase
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public LimitInterestBaseImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML limitsSysXRefMap(@).
                     *
                     * This is a complex type.
                     */
                    public static class LimitsSysXRefMapImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsSysXRefMap
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public LimitsSysXRefMapImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName EXTSYSXREFID$8 = 
                        new javax.xml.namespace.QName("", "extSysXRefId");
                      private static final javax.xml.namespace.QName LIMITSXREFMAPID$10 = 
                        new javax.xml.namespace.QName("", "limitsXrefMapId");
                      private static final javax.xml.namespace.QName SYSTEMXREFLOCATION$12 = 
                        new javax.xml.namespace.QName("", "systemXRefLocation");
                      private static final javax.xml.namespace.QName EXTERNALSYSTEM$14 = 
                        new javax.xml.namespace.QName("", "externalSystem");
                      private static final javax.xml.namespace.QName EXTERNALCUSTDETAIL$16 = 
                        new javax.xml.namespace.QName("", "externalCustDetail");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$18 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$20 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "extSysXRefId" element
                       */
                      public java.lang.String getExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSXREFID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "extSysXRefId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSXREFID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "extSysXRefId" element
                       */
                      public boolean isSetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTSYSXREFID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "extSysXRefId" element
                       */
                      public void setExtSysXRefId(java.lang.String extSysXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSXREFID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXTSYSXREFID$8);
                          }
                          target.setStringValue(extSysXRefId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "extSysXRefId" element
                       */
                      public void xsetExtSysXRefId(org.apache.xmlbeans.XmlString extSysXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSXREFID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXTSYSXREFID$8);
                          }
                          target.set(extSysXRefId);
                        }
                      }
                      
                      /**
                       * Unsets the "extSysXRefId" element
                       */
                      public void unsetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTSYSXREFID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitsXrefMapId" element
                       */
                      public java.lang.String getLimitsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITSXREFMAPID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitsXrefMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITSXREFMAPID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitsXrefMapId" element
                       */
                      public boolean isSetLimitsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITSXREFMAPID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitsXrefMapId" element
                       */
                      public void setLimitsXrefMapId(java.lang.String limitsXrefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITSXREFMAPID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITSXREFMAPID$10);
                          }
                          target.setStringValue(limitsXrefMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitsXrefMapId" element
                       */
                      public void xsetLimitsXrefMapId(org.apache.xmlbeans.XmlString limitsXrefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITSXREFMAPID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITSXREFMAPID$10);
                          }
                          target.set(limitsXrefMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitsXrefMapId" element
                       */
                      public void unsetLimitsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITSXREFMAPID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "systemXRefLocation" elements
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] getSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SYSTEMXREFLOCATION$12, targetList);
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] result = new com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation getSystemXRefLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "systemXRefLocation" element
                       */
                      public int sizeOfSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SYSTEMXREFLOCATION$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "systemXRefLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSystemXRefLocationArray(com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] systemXRefLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(systemXRefLocationArray, SYSTEMXREFLOCATION$12);
                      }
                      
                      /**
                       * Sets ith "systemXRefLocation" element
                       */
                      public void setSystemXRefLocationArray(int i, com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation systemXRefLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(systemXRefLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation insertNewSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().insert_element_user(SYSTEMXREFLOCATION$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation addNewSystemXRefLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().add_element_user(SYSTEMXREFLOCATION$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "systemXRefLocation" element
                       */
                      public void removeSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SYSTEMXREFLOCATION$12, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalSystem" elements
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] getExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALSYSTEM$14, targetList);
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] result = new com.stanchart.customer.ExternalSystemDocument.ExternalSystem[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem getExternalSystemArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalSystem" element
                       */
                      public int sizeOfExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALSYSTEM$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalSystem" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalSystemArray(com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] externalSystemArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalSystemArray, EXTERNALSYSTEM$14);
                      }
                      
                      /**
                       * Sets ith "externalSystem" element
                       */
                      public void setExternalSystemArray(int i, com.stanchart.customer.ExternalSystemDocument.ExternalSystem externalSystem)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalSystem);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem insertNewExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().insert_element_user(EXTERNALSYSTEM$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem addNewExternalSystem()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().add_element_user(EXTERNALSYSTEM$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalSystem" element
                       */
                      public void removeExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALSYSTEM$14, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalCustDetail" elements
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] getExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALCUSTDETAIL$16, targetList);
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] result = new com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail getExternalCustDetailArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalCustDetail" element
                       */
                      public int sizeOfExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALCUSTDETAIL$16);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalCustDetail" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalCustDetailArray(com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] externalCustDetailArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalCustDetailArray, EXTERNALCUSTDETAIL$16);
                      }
                      
                      /**
                       * Sets ith "externalCustDetail" element
                       */
                      public void setExternalCustDetailArray(int i, com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail externalCustDetail)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalCustDetail);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail insertNewExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().insert_element_user(EXTERNALCUSTDETAIL$16, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail addNewExternalCustDetail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().add_element_user(EXTERNALCUSTDETAIL$16);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalCustDetail" element
                       */
                      public void removeExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALCUSTDETAIL$16, i);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$18);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$18);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$18, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$20);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$20);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$20, 0);
                        }
                      }
                    }
                    /**
                     * An XML limitsApprSecMap(@).
                     *
                     * This is a complex type.
                     */
                    public static class LimitsApprSecMapImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.LimitsApprSecMap
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public LimitsApprSecMapImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName SECID$8 = 
                        new javax.xml.namespace.QName("", "secId");
                      private static final javax.xml.namespace.QName LIMITSAPPRSECMAPID$10 = 
                        new javax.xml.namespace.QName("", "limitsApprSecMapId");
                      private static final javax.xml.namespace.QName PLEDGORID$12 = 
                        new javax.xml.namespace.QName("", "pledgorId");
                      private static final javax.xml.namespace.QName SECURITYLOCATION$14 = 
                        new javax.xml.namespace.QName("", "securityLocation");
                      private static final javax.xml.namespace.QName SECURITYTYPE$16 = 
                        new javax.xml.namespace.QName("", "securityType");
                      private static final javax.xml.namespace.QName SECURITYSUBTYPE$18 = 
                        new javax.xml.namespace.QName("", "securitySubType");
                      private static final javax.xml.namespace.QName SECURITYCURRENCY$20 = 
                        new javax.xml.namespace.QName("", "securityCurrency");
                      private static final javax.xml.namespace.QName FORCESALEVALUE$22 = 
                        new javax.xml.namespace.QName("", "ForceSaleValue");
                      private static final javax.xml.namespace.QName FSVDATE$24 = 
                        new javax.xml.namespace.QName("", "FSVDate");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$26 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$28 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "secId" element
                       */
                      public java.lang.String getSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "secId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "secId" element
                       */
                      public boolean isSetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "secId" element
                       */
                      public void setSecId(java.lang.String secId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECID$8);
                          }
                          target.setStringValue(secId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "secId" element
                       */
                      public void xsetSecId(org.apache.xmlbeans.XmlString secId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECID$8);
                          }
                          target.set(secId);
                        }
                      }
                      
                      /**
                       * Unsets the "secId" element
                       */
                      public void unsetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitsApprSecMapId" element
                       */
                      public java.lang.String getLimitsApprSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITSAPPRSECMAPID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitsApprSecMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitsApprSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITSAPPRSECMAPID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitsApprSecMapId" element
                       */
                      public boolean isSetLimitsApprSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITSAPPRSECMAPID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitsApprSecMapId" element
                       */
                      public void setLimitsApprSecMapId(java.lang.String limitsApprSecMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITSAPPRSECMAPID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITSAPPRSECMAPID$10);
                          }
                          target.setStringValue(limitsApprSecMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitsApprSecMapId" element
                       */
                      public void xsetLimitsApprSecMapId(org.apache.xmlbeans.XmlString limitsApprSecMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITSAPPRSECMAPID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITSAPPRSECMAPID$10);
                          }
                          target.set(limitsApprSecMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitsApprSecMapId" element
                       */
                      public void unsetLimitsApprSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITSAPPRSECMAPID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "pledgorId" element
                       */
                      public java.lang.String getPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PLEDGORID$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "pledgorId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PLEDGORID$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "pledgorId" element
                       */
                      public boolean isSetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PLEDGORID$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "pledgorId" element
                       */
                      public void setPledgorId(java.lang.String pledgorId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PLEDGORID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PLEDGORID$12);
                          }
                          target.setStringValue(pledgorId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "pledgorId" element
                       */
                      public void xsetPledgorId(org.apache.xmlbeans.XmlString pledgorId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PLEDGORID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PLEDGORID$12);
                          }
                          target.set(pledgorId);
                        }
                      }
                      
                      /**
                       * Unsets the "pledgorId" element
                       */
                      public void unsetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PLEDGORID$12, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "securityLocation" elements
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] getSecurityLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYLOCATION$14, targetList);
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] result = new com.stanchart.customer.SecurityLocationDocument.SecurityLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation getSecurityLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securityLocation" element
                       */
                      public int sizeOfSecurityLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYLOCATION$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "securityLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecurityLocationArray(com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] securityLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securityLocationArray, SECURITYLOCATION$14);
                      }
                      
                      /**
                       * Sets ith "securityLocation" element
                       */
                      public void setSecurityLocationArray(int i, com.stanchart.customer.SecurityLocationDocument.SecurityLocation securityLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securityLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation insertNewSecurityLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().insert_element_user(SECURITYLOCATION$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation addNewSecurityLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().add_element_user(SECURITYLOCATION$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securityLocation" element
                       */
                      public void removeSecurityLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYLOCATION$14, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "securityType" elements
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType[] getSecurityTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYTYPE$16, targetList);
                          com.stanchart.customer.SecurityTypeDocument.SecurityType[] result = new com.stanchart.customer.SecurityTypeDocument.SecurityType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType getSecurityTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securityType" element
                       */
                      public int sizeOfSecurityTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYTYPE$16);
                        }
                      }
                      
                      /**
                       * Sets array of all "securityType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecurityTypeArray(com.stanchart.customer.SecurityTypeDocument.SecurityType[] securityTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securityTypeArray, SECURITYTYPE$16);
                      }
                      
                      /**
                       * Sets ith "securityType" element
                       */
                      public void setSecurityTypeArray(int i, com.stanchart.customer.SecurityTypeDocument.SecurityType securityType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$16, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securityType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType insertNewSecurityType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().insert_element_user(SECURITYTYPE$16, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType addNewSecurityType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().add_element_user(SECURITYTYPE$16);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securityType" element
                       */
                      public void removeSecurityType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYTYPE$16, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "securitySubType" elements
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] getSecuritySubTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYSUBTYPE$18, targetList);
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] result = new com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType getSecuritySubTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securitySubType" element
                       */
                      public int sizeOfSecuritySubTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYSUBTYPE$18);
                        }
                      }
                      
                      /**
                       * Sets array of all "securitySubType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecuritySubTypeArray(com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] securitySubTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securitySubTypeArray, SECURITYSUBTYPE$18);
                      }
                      
                      /**
                       * Sets ith "securitySubType" element
                       */
                      public void setSecuritySubTypeArray(int i, com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType securitySubType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securitySubType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType insertNewSecuritySubType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().insert_element_user(SECURITYSUBTYPE$18, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType addNewSecuritySubType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().add_element_user(SECURITYSUBTYPE$18);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securitySubType" element
                       */
                      public void removeSecuritySubType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYSUBTYPE$18, i);
                        }
                      }
                      
                      /**
                       * Gets the "securityCurrency" element
                       */
                      public java.lang.String getSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECURITYCURRENCY$20, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "securityCurrency" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECURITYCURRENCY$20, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "securityCurrency" element
                       */
                      public boolean isSetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYCURRENCY$20) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "securityCurrency" element
                       */
                      public void setSecurityCurrency(java.lang.String securityCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECURITYCURRENCY$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECURITYCURRENCY$20);
                          }
                          target.setStringValue(securityCurrency);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "securityCurrency" element
                       */
                      public void xsetSecurityCurrency(org.apache.xmlbeans.XmlString securityCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECURITYCURRENCY$20, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECURITYCURRENCY$20);
                          }
                          target.set(securityCurrency);
                        }
                      }
                      
                      /**
                       * Unsets the "securityCurrency" element
                       */
                      public void unsetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYCURRENCY$20, 0);
                        }
                      }
                      
                      /**
                       * Gets the "ForceSaleValue" element
                       */
                      public java.lang.String getForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FORCESALEVALUE$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ForceSaleValue" element
                       */
                      public org.apache.xmlbeans.XmlString xgetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FORCESALEVALUE$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ForceSaleValue" element
                       */
                      public boolean isSetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FORCESALEVALUE$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ForceSaleValue" element
                       */
                      public void setForceSaleValue(java.lang.String forceSaleValue)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FORCESALEVALUE$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FORCESALEVALUE$22);
                          }
                          target.setStringValue(forceSaleValue);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ForceSaleValue" element
                       */
                      public void xsetForceSaleValue(org.apache.xmlbeans.XmlString forceSaleValue)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FORCESALEVALUE$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FORCESALEVALUE$22);
                          }
                          target.set(forceSaleValue);
                        }
                      }
                      
                      /**
                       * Unsets the "ForceSaleValue" element
                       */
                      public void unsetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FORCESALEVALUE$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "FSVDate" element
                       */
                      public java.lang.String getFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FSVDATE$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "FSVDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FSVDATE$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "FSVDate" element
                       */
                      public boolean isSetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FSVDATE$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "FSVDate" element
                       */
                      public void setFSVDate(java.lang.String fsvDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FSVDATE$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FSVDATE$24);
                          }
                          target.setStringValue(fsvDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "FSVDate" element
                       */
                      public void xsetFSVDate(org.apache.xmlbeans.XmlString fsvDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FSVDATE$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FSVDATE$24);
                          }
                          target.set(fsvDate);
                        }
                      }
                      
                      /**
                       * Unsets the "FSVDate" element
                       */
                      public void unsetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FSVDATE$24, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$26);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$26);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$26, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$28);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$28);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$28, 0);
                        }
                      }
                    }
                    /**
                     * An XML coborrowerLimits(@).
                     *
                     * This is a complex type.
                     */
                    public static class CoborrowerLimitsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public CoborrowerLimitsImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName COBORROWERLEID$8 = 
                        new javax.xml.namespace.QName("", "coborrowerLeId");
                      private static final javax.xml.namespace.QName COBORROWERSUBPROFILEID$10 = 
                        new javax.xml.namespace.QName("", "coborrowerSubProfileId");
                      private static final javax.xml.namespace.QName COBORROWERLIMITSID$12 = 
                        new javax.xml.namespace.QName("", "coborrowerLimitsId");
                      private static final javax.xml.namespace.QName COBORROWERBOOKINGLOCATION$14 = 
                        new javax.xml.namespace.QName("", "coBorrowerBookingLocation");
                      private static final javax.xml.namespace.QName COBORROWERLIMITCURRENCY$16 = 
                        new javax.xml.namespace.QName("", "coBorrowerLimitCurrency");
                      private static final javax.xml.namespace.QName COBORROWERLIMITAMOUNT$18 = 
                        new javax.xml.namespace.QName("", "coborrowerLimitAmount");
                      private static final javax.xml.namespace.QName COBORROWERLIMITSECURITY$20 = 
                        new javax.xml.namespace.QName("", "coborrowerLimitSecurity");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$22 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$24 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLeId" element
                       */
                      public java.lang.String getCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLeId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLeId" element
                       */
                      public boolean isSetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLEID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLeId" element
                       */
                      public void setCoborrowerLeId(java.lang.String coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.setStringValue(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLeId" element
                       */
                      public void xsetCoborrowerLeId(org.apache.xmlbeans.XmlString coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.set(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLeId" element
                       */
                      public void unsetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLEID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerSubProfileId" element
                       */
                      public java.lang.String getCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerSubProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerSubProfileId" element
                       */
                      public boolean isSetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERSUBPROFILEID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerSubProfileId" element
                       */
                      public void setCoborrowerSubProfileId(java.lang.String coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.setStringValue(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerSubProfileId" element
                       */
                      public void xsetCoborrowerSubProfileId(org.apache.xmlbeans.XmlString coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.set(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerSubProfileId" element
                       */
                      public void unsetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERSUBPROFILEID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLimitsId" element
                       */
                      public java.lang.String getCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLimitsId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLimitsId" element
                       */
                      public boolean isSetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITSID$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLimitsId" element
                       */
                      public void setCoborrowerLimitsId(java.lang.String coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.setStringValue(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLimitsId" element
                       */
                      public void xsetCoborrowerLimitsId(org.apache.xmlbeans.XmlString coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.set(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLimitsId" element
                       */
                      public void unsetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITSID$12, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "coBorrowerBookingLocation" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation[] getCoBorrowerBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(COBORROWERBOOKINGLOCATION$14, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "coBorrowerBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation getCoBorrowerBookingLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation)get_store().find_element_user(COBORROWERBOOKINGLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "coBorrowerBookingLocation" element
                       */
                      public int sizeOfCoBorrowerBookingLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERBOOKINGLOCATION$14);
                        }
                      }
                      
                      /**
                       * Sets array of all "coBorrowerBookingLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCoBorrowerBookingLocationArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation[] coBorrowerBookingLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(coBorrowerBookingLocationArray, COBORROWERBOOKINGLOCATION$14);
                      }
                      
                      /**
                       * Sets ith "coBorrowerBookingLocation" element
                       */
                      public void setCoBorrowerBookingLocationArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation coBorrowerBookingLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation)get_store().find_element_user(COBORROWERBOOKINGLOCATION$14, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(coBorrowerBookingLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "coBorrowerBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation insertNewCoBorrowerBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation)get_store().insert_element_user(COBORROWERBOOKINGLOCATION$14, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "coBorrowerBookingLocation" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation addNewCoBorrowerBookingLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation)get_store().add_element_user(COBORROWERBOOKINGLOCATION$14);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "coBorrowerBookingLocation" element
                       */
                      public void removeCoBorrowerBookingLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERBOOKINGLOCATION$14, i);
                        }
                      }
                      
                      /**
                       * Gets the "coBorrowerLimitCurrency" element
                       */
                      public java.lang.String getCoBorrowerLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITCURRENCY$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coBorrowerLimitCurrency" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoBorrowerLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITCURRENCY$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coBorrowerLimitCurrency" element
                       */
                      public boolean isSetCoBorrowerLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITCURRENCY$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coBorrowerLimitCurrency" element
                       */
                      public void setCoBorrowerLimitCurrency(java.lang.String coBorrowerLimitCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITCURRENCY$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLIMITCURRENCY$16);
                          }
                          target.setStringValue(coBorrowerLimitCurrency);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coBorrowerLimitCurrency" element
                       */
                      public void xsetCoBorrowerLimitCurrency(org.apache.xmlbeans.XmlString coBorrowerLimitCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITCURRENCY$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLIMITCURRENCY$16);
                          }
                          target.set(coBorrowerLimitCurrency);
                        }
                      }
                      
                      /**
                       * Unsets the "coBorrowerLimitCurrency" element
                       */
                      public void unsetCoBorrowerLimitCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITCURRENCY$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLimitAmount" element
                       */
                      public java.lang.String getCoborrowerLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITAMOUNT$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLimitAmount" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITAMOUNT$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLimitAmount" element
                       */
                      public boolean isSetCoborrowerLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITAMOUNT$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLimitAmount" element
                       */
                      public void setCoborrowerLimitAmount(java.lang.String coborrowerLimitAmount)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITAMOUNT$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLIMITAMOUNT$18);
                          }
                          target.setStringValue(coborrowerLimitAmount);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLimitAmount" element
                       */
                      public void xsetCoborrowerLimitAmount(org.apache.xmlbeans.XmlString coborrowerLimitAmount)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITAMOUNT$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLIMITAMOUNT$18);
                          }
                          target.set(coborrowerLimitAmount);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLimitAmount" element
                       */
                      public void unsetCoborrowerLimitAmount()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITAMOUNT$18, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "coborrowerLimitSecurity" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity[] getCoborrowerLimitSecurityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(COBORROWERLIMITSECURITY$20, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "coborrowerLimitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity getCoborrowerLimitSecurityArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity)get_store().find_element_user(COBORROWERLIMITSECURITY$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "coborrowerLimitSecurity" element
                       */
                      public int sizeOfCoborrowerLimitSecurityArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITSECURITY$20);
                        }
                      }
                      
                      /**
                       * Sets array of all "coborrowerLimitSecurity" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setCoborrowerLimitSecurityArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity[] coborrowerLimitSecurityArray)
                      {
                        check_orphaned();
                        arraySetterHelper(coborrowerLimitSecurityArray, COBORROWERLIMITSECURITY$20);
                      }
                      
                      /**
                       * Sets ith "coborrowerLimitSecurity" element
                       */
                      public void setCoborrowerLimitSecurityArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity coborrowerLimitSecurity)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity)get_store().find_element_user(COBORROWERLIMITSECURITY$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(coborrowerLimitSecurity);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "coborrowerLimitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity insertNewCoborrowerLimitSecurity(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity)get_store().insert_element_user(COBORROWERLIMITSECURITY$20, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "coborrowerLimitSecurity" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity addNewCoborrowerLimitSecurity()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity)get_store().add_element_user(COBORROWERLIMITSECURITY$20);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "coborrowerLimitSecurity" element
                       */
                      public void removeCoborrowerLimitSecurity(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITSECURITY$20, i);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$22) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$22);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$22, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$22);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$22, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$24);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$24);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$24, 0);
                        }
                      }
                      /**
                       * An XML coBorrowerBookingLocation(@).
                       *
                       * This is a complex type.
                       */
                      public static class CoBorrowerBookingLocationImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoBorrowerBookingLocation
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CoBorrowerBookingLocationImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName LOCATIONID$0 = 
                          new javax.xml.namespace.QName("", "locationId");
                        private static final javax.xml.namespace.QName LOCATIONCOUNTRY$2 = 
                          new javax.xml.namespace.QName("", "locationCountry");
                        private static final javax.xml.namespace.QName LOCATIONORGANIZATION$4 = 
                          new javax.xml.namespace.QName("", "locationOrganization");
                        
                        
                        /**
                         * Gets the "locationId" element
                         */
                        public java.lang.String getLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationId" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationId" element
                         */
                        public boolean isSetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONID$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationId" element
                         */
                        public void setLocationId(java.lang.String locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.setStringValue(locationId);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationId" element
                         */
                        public void xsetLocationId(org.apache.xmlbeans.XmlString locationId)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONID$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONID$0);
                            }
                            target.set(locationId);
                          }
                        }
                        
                        /**
                         * Unsets the "locationId" element
                         */
                        public void unsetLocationId()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONID$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationCountry" element
                         */
                        public java.lang.String getLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationCountry" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationCountry" element
                         */
                        public boolean isSetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONCOUNTRY$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationCountry" element
                         */
                        public void setLocationCountry(java.lang.String locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.setStringValue(locationCountry);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationCountry" element
                         */
                        public void xsetLocationCountry(org.apache.xmlbeans.XmlString locationCountry)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONCOUNTRY$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONCOUNTRY$2);
                            }
                            target.set(locationCountry);
                          }
                        }
                        
                        /**
                         * Unsets the "locationCountry" element
                         */
                        public void unsetLocationCountry()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONCOUNTRY$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "locationOrganization" element
                         */
                        public java.lang.String getLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "locationOrganization" element
                         */
                        public org.apache.xmlbeans.XmlString xgetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "locationOrganization" element
                         */
                        public boolean isSetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(LOCATIONORGANIZATION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "locationOrganization" element
                         */
                        public void setLocationOrganization(java.lang.String locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.setStringValue(locationOrganization);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "locationOrganization" element
                         */
                        public void xsetLocationOrganization(org.apache.xmlbeans.XmlString locationOrganization)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LOCATIONORGANIZATION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LOCATIONORGANIZATION$4);
                            }
                            target.set(locationOrganization);
                          }
                        }
                        
                        /**
                         * Unsets the "locationOrganization" element
                         */
                        public void unsetLocationOrganization()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(LOCATIONORGANIZATION$4, 0);
                          }
                        }
                      }
                      /**
                       * An XML coborrowerLimitSecurity(@).
                       *
                       * This is a complex type.
                       */
                      public static class CoborrowerLimitSecurityImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLimits.CoborrowerLimitSecurity
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public CoborrowerLimitSecurityImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName STDCODENUMBER$0 = 
                          new javax.xml.namespace.QName("", "stdCodeNumber");
                        private static final javax.xml.namespace.QName STDCODEVALUE$2 = 
                          new javax.xml.namespace.QName("", "stdCodeValue");
                        private static final javax.xml.namespace.QName STDCODEDESCRIPTION$4 = 
                          new javax.xml.namespace.QName("", "stdCodeDescription");
                        
                        
                        /**
                         * Gets the "stdCodeNumber" element
                         */
                        public java.lang.String getStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeNumber" element
                         */
                        public boolean isSetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODENUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeNumber" element
                         */
                        public void setStdCodeNumber(java.lang.String stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.setStringValue(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeNumber" element
                         */
                        public void xsetStdCodeNumber(org.apache.xmlbeans.XmlString stdCodeNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODENUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODENUMBER$0);
                            }
                            target.set(stdCodeNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeNumber" element
                         */
                        public void unsetStdCodeNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODENUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeValue" element
                         */
                        public java.lang.String getStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeValue" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeValue" element
                         */
                        public boolean isSetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEVALUE$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeValue" element
                         */
                        public void setStdCodeValue(java.lang.String stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.setStringValue(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeValue" element
                         */
                        public void xsetStdCodeValue(org.apache.xmlbeans.XmlString stdCodeValue)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEVALUE$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEVALUE$2);
                            }
                            target.set(stdCodeValue);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeValue" element
                         */
                        public void unsetStdCodeValue()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEVALUE$2, 0);
                          }
                        }
                        
                        /**
                         * Gets the "stdCodeDescription" element
                         */
                        public java.lang.String getStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "stdCodeDescription" element
                         */
                        public org.apache.xmlbeans.XmlString xgetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "stdCodeDescription" element
                         */
                        public boolean isSetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(STDCODEDESCRIPTION$4) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "stdCodeDescription" element
                         */
                        public void setStdCodeDescription(java.lang.String stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.setStringValue(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "stdCodeDescription" element
                         */
                        public void xsetStdCodeDescription(org.apache.xmlbeans.XmlString stdCodeDescription)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(STDCODEDESCRIPTION$4, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(STDCODEDESCRIPTION$4);
                            }
                            target.set(stdCodeDescription);
                          }
                        }
                        
                        /**
                         * Unsets the "stdCodeDescription" element
                         */
                        public void unsetStdCodeDescription()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(STDCODEDESCRIPTION$4, 0);
                          }
                        }
                      }
                    }
                    /**
                     * An XML coborrowerLmtsSecMap(@).
                     *
                     * This is a complex type.
                     */
                    public static class CoborrowerLmtsSecMapImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowerLmtsSecMap
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public CoborrowerLmtsSecMapImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName COBORROWERLEID$8 = 
                        new javax.xml.namespace.QName("", "coborrowerLeId");
                      private static final javax.xml.namespace.QName COBORROWERSUBPROFILEID$10 = 
                        new javax.xml.namespace.QName("", "coborrowerSubProfileId");
                      private static final javax.xml.namespace.QName COBORROWERLIMITSID$12 = 
                        new javax.xml.namespace.QName("", "coborrowerLimitsId");
                      private static final javax.xml.namespace.QName SECID$14 = 
                        new javax.xml.namespace.QName("", "secId");
                      private static final javax.xml.namespace.QName COBORROWERLMTSSECMAPID$16 = 
                        new javax.xml.namespace.QName("", "coborrowerLmtsSecMapId");
                      private static final javax.xml.namespace.QName PLEDGORID$18 = 
                        new javax.xml.namespace.QName("", "pledgorId");
                      private static final javax.xml.namespace.QName SECURITYLOCATION$20 = 
                        new javax.xml.namespace.QName("", "securityLocation");
                      private static final javax.xml.namespace.QName SECURITYTYPE$22 = 
                        new javax.xml.namespace.QName("", "securityType");
                      private static final javax.xml.namespace.QName SECURITYSUBTYPE$24 = 
                        new javax.xml.namespace.QName("", "securitySubType");
                      private static final javax.xml.namespace.QName SECURITYCURRENCY$26 = 
                        new javax.xml.namespace.QName("", "securityCurrency");
                      private static final javax.xml.namespace.QName FORCESALEVALUE$28 = 
                        new javax.xml.namespace.QName("", "ForceSaleValue");
                      private static final javax.xml.namespace.QName FSVDATE$30 = 
                        new javax.xml.namespace.QName("", "FSVDate");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$32 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$34 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLeId" element
                       */
                      public java.lang.String getCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLeId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLeId" element
                       */
                      public boolean isSetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLEID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLeId" element
                       */
                      public void setCoborrowerLeId(java.lang.String coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.setStringValue(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLeId" element
                       */
                      public void xsetCoborrowerLeId(org.apache.xmlbeans.XmlString coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.set(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLeId" element
                       */
                      public void unsetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLEID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerSubProfileId" element
                       */
                      public java.lang.String getCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerSubProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerSubProfileId" element
                       */
                      public boolean isSetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERSUBPROFILEID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerSubProfileId" element
                       */
                      public void setCoborrowerSubProfileId(java.lang.String coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.setStringValue(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerSubProfileId" element
                       */
                      public void xsetCoborrowerSubProfileId(org.apache.xmlbeans.XmlString coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.set(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerSubProfileId" element
                       */
                      public void unsetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERSUBPROFILEID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLimitsId" element
                       */
                      public java.lang.String getCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLimitsId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLimitsId" element
                       */
                      public boolean isSetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITSID$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLimitsId" element
                       */
                      public void setCoborrowerLimitsId(java.lang.String coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.setStringValue(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLimitsId" element
                       */
                      public void xsetCoborrowerLimitsId(org.apache.xmlbeans.XmlString coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.set(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLimitsId" element
                       */
                      public void unsetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITSID$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "secId" element
                       */
                      public java.lang.String getSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECID$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "secId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECID$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "secId" element
                       */
                      public boolean isSetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECID$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "secId" element
                       */
                      public void setSecId(java.lang.String secId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECID$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECID$14);
                          }
                          target.setStringValue(secId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "secId" element
                       */
                      public void xsetSecId(org.apache.xmlbeans.XmlString secId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECID$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECID$14);
                          }
                          target.set(secId);
                        }
                      }
                      
                      /**
                       * Unsets the "secId" element
                       */
                      public void unsetSecId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECID$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLmtsSecMapId" element
                       */
                      public java.lang.String getCoborrowerLmtsSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLMTSSECMAPID$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLmtsSecMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLmtsSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLMTSSECMAPID$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLmtsSecMapId" element
                       */
                      public boolean isSetCoborrowerLmtsSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLMTSSECMAPID$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLmtsSecMapId" element
                       */
                      public void setCoborrowerLmtsSecMapId(java.lang.String coborrowerLmtsSecMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLMTSSECMAPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLMTSSECMAPID$16);
                          }
                          target.setStringValue(coborrowerLmtsSecMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLmtsSecMapId" element
                       */
                      public void xsetCoborrowerLmtsSecMapId(org.apache.xmlbeans.XmlString coborrowerLmtsSecMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLMTSSECMAPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLMTSSECMAPID$16);
                          }
                          target.set(coborrowerLmtsSecMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLmtsSecMapId" element
                       */
                      public void unsetCoborrowerLmtsSecMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLMTSSECMAPID$16, 0);
                        }
                      }
                      
                      /**
                       * Gets the "pledgorId" element
                       */
                      public java.lang.String getPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PLEDGORID$18, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "pledgorId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PLEDGORID$18, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "pledgorId" element
                       */
                      public boolean isSetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(PLEDGORID$18) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "pledgorId" element
                       */
                      public void setPledgorId(java.lang.String pledgorId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(PLEDGORID$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(PLEDGORID$18);
                          }
                          target.setStringValue(pledgorId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "pledgorId" element
                       */
                      public void xsetPledgorId(org.apache.xmlbeans.XmlString pledgorId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(PLEDGORID$18, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(PLEDGORID$18);
                          }
                          target.set(pledgorId);
                        }
                      }
                      
                      /**
                       * Unsets the "pledgorId" element
                       */
                      public void unsetPledgorId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(PLEDGORID$18, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "securityLocation" elements
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] getSecurityLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYLOCATION$20, targetList);
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] result = new com.stanchart.customer.SecurityLocationDocument.SecurityLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation getSecurityLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securityLocation" element
                       */
                      public int sizeOfSecurityLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYLOCATION$20);
                        }
                      }
                      
                      /**
                       * Sets array of all "securityLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecurityLocationArray(com.stanchart.customer.SecurityLocationDocument.SecurityLocation[] securityLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securityLocationArray, SECURITYLOCATION$20);
                      }
                      
                      /**
                       * Sets ith "securityLocation" element
                       */
                      public void setSecurityLocationArray(int i, com.stanchart.customer.SecurityLocationDocument.SecurityLocation securityLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().find_element_user(SECURITYLOCATION$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securityLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation insertNewSecurityLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().insert_element_user(SECURITYLOCATION$20, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securityLocation" element
                       */
                      public com.stanchart.customer.SecurityLocationDocument.SecurityLocation addNewSecurityLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityLocationDocument.SecurityLocation target = null;
                          target = (com.stanchart.customer.SecurityLocationDocument.SecurityLocation)get_store().add_element_user(SECURITYLOCATION$20);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securityLocation" element
                       */
                      public void removeSecurityLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYLOCATION$20, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "securityType" elements
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType[] getSecurityTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYTYPE$22, targetList);
                          com.stanchart.customer.SecurityTypeDocument.SecurityType[] result = new com.stanchart.customer.SecurityTypeDocument.SecurityType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType getSecurityTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securityType" element
                       */
                      public int sizeOfSecurityTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYTYPE$22);
                        }
                      }
                      
                      /**
                       * Sets array of all "securityType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecurityTypeArray(com.stanchart.customer.SecurityTypeDocument.SecurityType[] securityTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securityTypeArray, SECURITYTYPE$22);
                      }
                      
                      /**
                       * Sets ith "securityType" element
                       */
                      public void setSecurityTypeArray(int i, com.stanchart.customer.SecurityTypeDocument.SecurityType securityType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().find_element_user(SECURITYTYPE$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securityType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType insertNewSecurityType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().insert_element_user(SECURITYTYPE$22, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securityType" element
                       */
                      public com.stanchart.customer.SecurityTypeDocument.SecurityType addNewSecurityType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecurityTypeDocument.SecurityType target = null;
                          target = (com.stanchart.customer.SecurityTypeDocument.SecurityType)get_store().add_element_user(SECURITYTYPE$22);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securityType" element
                       */
                      public void removeSecurityType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYTYPE$22, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "securitySubType" elements
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] getSecuritySubTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SECURITYSUBTYPE$24, targetList);
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] result = new com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType getSecuritySubTypeArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "securitySubType" element
                       */
                      public int sizeOfSecuritySubTypeArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYSUBTYPE$24);
                        }
                      }
                      
                      /**
                       * Sets array of all "securitySubType" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSecuritySubTypeArray(com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType[] securitySubTypeArray)
                      {
                        check_orphaned();
                        arraySetterHelper(securitySubTypeArray, SECURITYSUBTYPE$24);
                      }
                      
                      /**
                       * Sets ith "securitySubType" element
                       */
                      public void setSecuritySubTypeArray(int i, com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType securitySubType)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().find_element_user(SECURITYSUBTYPE$24, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(securitySubType);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType insertNewSecuritySubType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().insert_element_user(SECURITYSUBTYPE$24, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "securitySubType" element
                       */
                      public com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType addNewSecuritySubType()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType target = null;
                          target = (com.stanchart.customer.SecuritySubTypeDocument.SecuritySubType)get_store().add_element_user(SECURITYSUBTYPE$24);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "securitySubType" element
                       */
                      public void removeSecuritySubType(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYSUBTYPE$24, i);
                        }
                      }
                      
                      /**
                       * Gets the "securityCurrency" element
                       */
                      public java.lang.String getSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECURITYCURRENCY$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "securityCurrency" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECURITYCURRENCY$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "securityCurrency" element
                       */
                      public boolean isSetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SECURITYCURRENCY$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "securityCurrency" element
                       */
                      public void setSecurityCurrency(java.lang.String securityCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SECURITYCURRENCY$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SECURITYCURRENCY$26);
                          }
                          target.setStringValue(securityCurrency);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "securityCurrency" element
                       */
                      public void xsetSecurityCurrency(org.apache.xmlbeans.XmlString securityCurrency)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SECURITYCURRENCY$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SECURITYCURRENCY$26);
                          }
                          target.set(securityCurrency);
                        }
                      }
                      
                      /**
                       * Unsets the "securityCurrency" element
                       */
                      public void unsetSecurityCurrency()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SECURITYCURRENCY$26, 0);
                        }
                      }
                      
                      /**
                       * Gets the "ForceSaleValue" element
                       */
                      public java.lang.String getForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FORCESALEVALUE$28, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "ForceSaleValue" element
                       */
                      public org.apache.xmlbeans.XmlString xgetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FORCESALEVALUE$28, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "ForceSaleValue" element
                       */
                      public boolean isSetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FORCESALEVALUE$28) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "ForceSaleValue" element
                       */
                      public void setForceSaleValue(java.lang.String forceSaleValue)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FORCESALEVALUE$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FORCESALEVALUE$28);
                          }
                          target.setStringValue(forceSaleValue);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "ForceSaleValue" element
                       */
                      public void xsetForceSaleValue(org.apache.xmlbeans.XmlString forceSaleValue)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FORCESALEVALUE$28, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FORCESALEVALUE$28);
                          }
                          target.set(forceSaleValue);
                        }
                      }
                      
                      /**
                       * Unsets the "ForceSaleValue" element
                       */
                      public void unsetForceSaleValue()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FORCESALEVALUE$28, 0);
                        }
                      }
                      
                      /**
                       * Gets the "FSVDate" element
                       */
                      public java.lang.String getFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FSVDATE$30, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "FSVDate" element
                       */
                      public org.apache.xmlbeans.XmlString xgetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FSVDATE$30, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "FSVDate" element
                       */
                      public boolean isSetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(FSVDATE$30) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "FSVDate" element
                       */
                      public void setFSVDate(java.lang.String fsvDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FSVDATE$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FSVDATE$30);
                          }
                          target.setStringValue(fsvDate);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "FSVDate" element
                       */
                      public void xsetFSVDate(org.apache.xmlbeans.XmlString fsvDate)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FSVDATE$30, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FSVDATE$30);
                          }
                          target.set(fsvDate);
                        }
                      }
                      
                      /**
                       * Unsets the "FSVDate" element
                       */
                      public void unsetFSVDate()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(FSVDATE$30, 0);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$32, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$32, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$32) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$32);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$32, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$32);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$32, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$34, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$34, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$34) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$34);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$34, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$34);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$34, 0);
                        }
                      }
                    }
                    /**
                     * An XML coborrowSysXRefMap(@).
                     *
                     * This is a complex type.
                     */
                    public static class CoborrowSysXRefMapImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.CoborrowSysXRefMap
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public CoborrowSysXRefMapImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName LIMITPROFILEID$4 = 
                        new javax.xml.namespace.QName("", "limitProfileId");
                      private static final javax.xml.namespace.QName LIMITID$6 = 
                        new javax.xml.namespace.QName("", "limitId");
                      private static final javax.xml.namespace.QName COBORROWERLEID$8 = 
                        new javax.xml.namespace.QName("", "coborrowerLeId");
                      private static final javax.xml.namespace.QName COBORROWERSUBPROFILEID$10 = 
                        new javax.xml.namespace.QName("", "coborrowerSubProfileId");
                      private static final javax.xml.namespace.QName COBORROWERLIMITSID$12 = 
                        new javax.xml.namespace.QName("", "coborrowerLimitsId");
                      private static final javax.xml.namespace.QName EXTSYSXREFID$14 = 
                        new javax.xml.namespace.QName("", "extSysXRefId");
                      private static final javax.xml.namespace.QName COBORROWERLMTSXREFMAPID$16 = 
                        new javax.xml.namespace.QName("", "coborrowerLmtsXrefMapId");
                      private static final javax.xml.namespace.QName SYSTEMXREFLOCATION$18 = 
                        new javax.xml.namespace.QName("", "systemXRefLocation");
                      private static final javax.xml.namespace.QName EXTERNALSYSTEM$20 = 
                        new javax.xml.namespace.QName("", "externalSystem");
                      private static final javax.xml.namespace.QName EXTERNALCUSTDETAIL$22 = 
                        new javax.xml.namespace.QName("", "externalCustDetail");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$24 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$26 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitProfileId" element
                       */
                      public java.lang.String getLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitProfileId" element
                       */
                      public boolean isSetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITPROFILEID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitProfileId" element
                       */
                      public void setLimitProfileId(java.lang.String limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.setStringValue(limitProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitProfileId" element
                       */
                      public void xsetLimitProfileId(org.apache.xmlbeans.XmlString limitProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITPROFILEID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITPROFILEID$4);
                          }
                          target.set(limitProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitProfileId" element
                       */
                      public void unsetLimitProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITPROFILEID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets the "limitId" element
                       */
                      public java.lang.String getLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "limitId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "limitId" element
                       */
                      public boolean isSetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LIMITID$6) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "limitId" element
                       */
                      public void setLimitId(java.lang.String limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LIMITID$6);
                          }
                          target.setStringValue(limitId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "limitId" element
                       */
                      public void xsetLimitId(org.apache.xmlbeans.XmlString limitId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LIMITID$6, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LIMITID$6);
                          }
                          target.set(limitId);
                        }
                      }
                      
                      /**
                       * Unsets the "limitId" element
                       */
                      public void unsetLimitId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LIMITID$6, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLeId" element
                       */
                      public java.lang.String getCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLeId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLeId" element
                       */
                      public boolean isSetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLEID$8) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLeId" element
                       */
                      public void setCoborrowerLeId(java.lang.String coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.setStringValue(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLeId" element
                       */
                      public void xsetCoborrowerLeId(org.apache.xmlbeans.XmlString coborrowerLeId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLEID$8, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLEID$8);
                          }
                          target.set(coborrowerLeId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLeId" element
                       */
                      public void unsetCoborrowerLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLEID$8, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerSubProfileId" element
                       */
                      public java.lang.String getCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerSubProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerSubProfileId" element
                       */
                      public boolean isSetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERSUBPROFILEID$10) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerSubProfileId" element
                       */
                      public void setCoborrowerSubProfileId(java.lang.String coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.setStringValue(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerSubProfileId" element
                       */
                      public void xsetCoborrowerSubProfileId(org.apache.xmlbeans.XmlString coborrowerSubProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERSUBPROFILEID$10, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERSUBPROFILEID$10);
                          }
                          target.set(coborrowerSubProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerSubProfileId" element
                       */
                      public void unsetCoborrowerSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERSUBPROFILEID$10, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLimitsId" element
                       */
                      public java.lang.String getCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLimitsId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLimitsId" element
                       */
                      public boolean isSetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLIMITSID$12) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLimitsId" element
                       */
                      public void setCoborrowerLimitsId(java.lang.String coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.setStringValue(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLimitsId" element
                       */
                      public void xsetCoborrowerLimitsId(org.apache.xmlbeans.XmlString coborrowerLimitsId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLIMITSID$12, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLIMITSID$12);
                          }
                          target.set(coborrowerLimitsId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLimitsId" element
                       */
                      public void unsetCoborrowerLimitsId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLIMITSID$12, 0);
                        }
                      }
                      
                      /**
                       * Gets the "extSysXRefId" element
                       */
                      public java.lang.String getExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSXREFID$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "extSysXRefId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSXREFID$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "extSysXRefId" element
                       */
                      public boolean isSetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTSYSXREFID$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "extSysXRefId" element
                       */
                      public void setExtSysXRefId(java.lang.String extSysXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(EXTSYSXREFID$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(EXTSYSXREFID$14);
                          }
                          target.setStringValue(extSysXRefId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "extSysXRefId" element
                       */
                      public void xsetExtSysXRefId(org.apache.xmlbeans.XmlString extSysXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(EXTSYSXREFID$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(EXTSYSXREFID$14);
                          }
                          target.set(extSysXRefId);
                        }
                      }
                      
                      /**
                       * Unsets the "extSysXRefId" element
                       */
                      public void unsetExtSysXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTSYSXREFID$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "coborrowerLmtsXrefMapId" element
                       */
                      public java.lang.String getCoborrowerLmtsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLMTSXREFMAPID$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "coborrowerLmtsXrefMapId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetCoborrowerLmtsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLMTSXREFMAPID$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "coborrowerLmtsXrefMapId" element
                       */
                      public boolean isSetCoborrowerLmtsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(COBORROWERLMTSXREFMAPID$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "coborrowerLmtsXrefMapId" element
                       */
                      public void setCoborrowerLmtsXrefMapId(java.lang.String coborrowerLmtsXrefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(COBORROWERLMTSXREFMAPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(COBORROWERLMTSXREFMAPID$16);
                          }
                          target.setStringValue(coborrowerLmtsXrefMapId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "coborrowerLmtsXrefMapId" element
                       */
                      public void xsetCoborrowerLmtsXrefMapId(org.apache.xmlbeans.XmlString coborrowerLmtsXrefMapId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(COBORROWERLMTSXREFMAPID$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(COBORROWERLMTSXREFMAPID$16);
                          }
                          target.set(coborrowerLmtsXrefMapId);
                        }
                      }
                      
                      /**
                       * Unsets the "coborrowerLmtsXrefMapId" element
                       */
                      public void unsetCoborrowerLmtsXrefMapId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(COBORROWERLMTSXREFMAPID$16, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "systemXRefLocation" elements
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] getSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SYSTEMXREFLOCATION$18, targetList);
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] result = new com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation getSystemXRefLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "systemXRefLocation" element
                       */
                      public int sizeOfSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SYSTEMXREFLOCATION$18);
                        }
                      }
                      
                      /**
                       * Sets array of all "systemXRefLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSystemXRefLocationArray(com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] systemXRefLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(systemXRefLocationArray, SYSTEMXREFLOCATION$18);
                      }
                      
                      /**
                       * Sets ith "systemXRefLocation" element
                       */
                      public void setSystemXRefLocationArray(int i, com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation systemXRefLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$18, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(systemXRefLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation insertNewSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().insert_element_user(SYSTEMXREFLOCATION$18, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation addNewSystemXRefLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().add_element_user(SYSTEMXREFLOCATION$18);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "systemXRefLocation" element
                       */
                      public void removeSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SYSTEMXREFLOCATION$18, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalSystem" elements
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] getExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALSYSTEM$20, targetList);
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] result = new com.stanchart.customer.ExternalSystemDocument.ExternalSystem[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem getExternalSystemArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalSystem" element
                       */
                      public int sizeOfExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALSYSTEM$20);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalSystem" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalSystemArray(com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] externalSystemArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalSystemArray, EXTERNALSYSTEM$20);
                      }
                      
                      /**
                       * Sets ith "externalSystem" element
                       */
                      public void setExternalSystemArray(int i, com.stanchart.customer.ExternalSystemDocument.ExternalSystem externalSystem)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$20, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalSystem);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem insertNewExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().insert_element_user(EXTERNALSYSTEM$20, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem addNewExternalSystem()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().add_element_user(EXTERNALSYSTEM$20);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalSystem" element
                       */
                      public void removeExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALSYSTEM$20, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalCustDetail" elements
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] getExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALCUSTDETAIL$22, targetList);
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] result = new com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail getExternalCustDetailArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalCustDetail" element
                       */
                      public int sizeOfExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALCUSTDETAIL$22);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalCustDetail" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalCustDetailArray(com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] externalCustDetailArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalCustDetailArray, EXTERNALCUSTDETAIL$22);
                      }
                      
                      /**
                       * Sets ith "externalCustDetail" element
                       */
                      public void setExternalCustDetailArray(int i, com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail externalCustDetail)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$22, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalCustDetail);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail insertNewExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().insert_element_user(EXTERNALCUSTDETAIL$22, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail addNewExternalCustDetail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().add_element_user(EXTERNALCUSTDETAIL$22);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalCustDetail" element
                       */
                      public void removeExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALCUSTDETAIL$22, i);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$24, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$24, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$24) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$24);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$24, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$24);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$24, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$26, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$26, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$26) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$26);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$26, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$26);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$26, 0);
                        }
                      }
                    }
                    /**
                     * An XML subProfileSystemXRef(@).
                     *
                     * This is a complex type.
                     */
                    public static class SubProfileSystemXRefImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef
                    {
                      private static final long serialVersionUID = 1L;
                      
                      public SubProfileSystemXRefImpl(org.apache.xmlbeans.SchemaType sType)
                      {
                        super(sType);
                      }
                      
                      private static final javax.xml.namespace.QName LEID$0 = 
                        new javax.xml.namespace.QName("", "leId");
                      private static final javax.xml.namespace.QName SUBPROFILEID$2 = 
                        new javax.xml.namespace.QName("", "subProfileId");
                      private static final javax.xml.namespace.QName SYSEMXREFID$4 = 
                        new javax.xml.namespace.QName("", "sysemXRefId");
                      private static final javax.xml.namespace.QName SYSTEMXREFLOCATION$6 = 
                        new javax.xml.namespace.QName("", "systemXRefLocation");
                      private static final javax.xml.namespace.QName EXTERNALSYSTEM$8 = 
                        new javax.xml.namespace.QName("", "externalSystem");
                      private static final javax.xml.namespace.QName EXTERNALCUSTDETAIL$10 = 
                        new javax.xml.namespace.QName("", "externalCustDetail");
                      private static final javax.xml.namespace.QName ACCOUNTDETAIL$12 = 
                        new javax.xml.namespace.QName("", "accountDetail");
                      private static final javax.xml.namespace.QName UPDATESTATUSINDICATOR$14 = 
                        new javax.xml.namespace.QName("", "updateStatusIndicator");
                      private static final javax.xml.namespace.QName CHANGEINDICATOR$16 = 
                        new javax.xml.namespace.QName("", "changeIndicator");
                      
                      
                      /**
                       * Gets the "leId" element
                       */
                      public java.lang.String getLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "leId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "leId" element
                       */
                      public boolean isSetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(LEID$0) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "leId" element
                       */
                      public void setLeId(java.lang.String leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(LEID$0);
                          }
                          target.setStringValue(leId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "leId" element
                       */
                      public void xsetLeId(org.apache.xmlbeans.XmlString leId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(LEID$0, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(LEID$0);
                          }
                          target.set(leId);
                        }
                      }
                      
                      /**
                       * Unsets the "leId" element
                       */
                      public void unsetLeId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(LEID$0, 0);
                        }
                      }
                      
                      /**
                       * Gets the "subProfileId" element
                       */
                      public java.lang.String getSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "subProfileId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "subProfileId" element
                       */
                      public boolean isSetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SUBPROFILEID$2) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "subProfileId" element
                       */
                      public void setSubProfileId(java.lang.String subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.setStringValue(subProfileId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "subProfileId" element
                       */
                      public void xsetSubProfileId(org.apache.xmlbeans.XmlString subProfileId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SUBPROFILEID$2, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SUBPROFILEID$2);
                          }
                          target.set(subProfileId);
                        }
                      }
                      
                      /**
                       * Unsets the "subProfileId" element
                       */
                      public void unsetSubProfileId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SUBPROFILEID$2, 0);
                        }
                      }
                      
                      /**
                       * Gets the "sysemXRefId" element
                       */
                      public java.lang.String getSysemXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SYSEMXREFID$4, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "sysemXRefId" element
                       */
                      public org.apache.xmlbeans.XmlString xgetSysemXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SYSEMXREFID$4, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "sysemXRefId" element
                       */
                      public boolean isSetSysemXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SYSEMXREFID$4) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "sysemXRefId" element
                       */
                      public void setSysemXRefId(java.lang.String sysemXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SYSEMXREFID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SYSEMXREFID$4);
                          }
                          target.setStringValue(sysemXRefId);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "sysemXRefId" element
                       */
                      public void xsetSysemXRefId(org.apache.xmlbeans.XmlString sysemXRefId)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(SYSEMXREFID$4, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(SYSEMXREFID$4);
                          }
                          target.set(sysemXRefId);
                        }
                      }
                      
                      /**
                       * Unsets the "sysemXRefId" element
                       */
                      public void unsetSysemXRefId()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SYSEMXREFID$4, 0);
                        }
                      }
                      
                      /**
                       * Gets array of all "systemXRefLocation" elements
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] getSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(SYSTEMXREFLOCATION$6, targetList);
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] result = new com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation getSystemXRefLocationArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "systemXRefLocation" element
                       */
                      public int sizeOfSystemXRefLocationArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(SYSTEMXREFLOCATION$6);
                        }
                      }
                      
                      /**
                       * Sets array of all "systemXRefLocation" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setSystemXRefLocationArray(com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation[] systemXRefLocationArray)
                      {
                        check_orphaned();
                        arraySetterHelper(systemXRefLocationArray, SYSTEMXREFLOCATION$6);
                      }
                      
                      /**
                       * Sets ith "systemXRefLocation" element
                       */
                      public void setSystemXRefLocationArray(int i, com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation systemXRefLocation)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().find_element_user(SYSTEMXREFLOCATION$6, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(systemXRefLocation);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation insertNewSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().insert_element_user(SYSTEMXREFLOCATION$6, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "systemXRefLocation" element
                       */
                      public com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation addNewSystemXRefLocation()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation target = null;
                          target = (com.stanchart.customer.SystemXRefLocationDocument.SystemXRefLocation)get_store().add_element_user(SYSTEMXREFLOCATION$6);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "systemXRefLocation" element
                       */
                      public void removeSystemXRefLocation(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(SYSTEMXREFLOCATION$6, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalSystem" elements
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] getExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALSYSTEM$8, targetList);
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] result = new com.stanchart.customer.ExternalSystemDocument.ExternalSystem[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem getExternalSystemArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalSystem" element
                       */
                      public int sizeOfExternalSystemArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALSYSTEM$8);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalSystem" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalSystemArray(com.stanchart.customer.ExternalSystemDocument.ExternalSystem[] externalSystemArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalSystemArray, EXTERNALSYSTEM$8);
                      }
                      
                      /**
                       * Sets ith "externalSystem" element
                       */
                      public void setExternalSystemArray(int i, com.stanchart.customer.ExternalSystemDocument.ExternalSystem externalSystem)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().find_element_user(EXTERNALSYSTEM$8, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalSystem);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem insertNewExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().insert_element_user(EXTERNALSYSTEM$8, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalSystem" element
                       */
                      public com.stanchart.customer.ExternalSystemDocument.ExternalSystem addNewExternalSystem()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalSystemDocument.ExternalSystem target = null;
                          target = (com.stanchart.customer.ExternalSystemDocument.ExternalSystem)get_store().add_element_user(EXTERNALSYSTEM$8);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalSystem" element
                       */
                      public void removeExternalSystem(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALSYSTEM$8, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "externalCustDetail" elements
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] getExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(EXTERNALCUSTDETAIL$10, targetList);
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] result = new com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail getExternalCustDetailArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "externalCustDetail" element
                       */
                      public int sizeOfExternalCustDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(EXTERNALCUSTDETAIL$10);
                        }
                      }
                      
                      /**
                       * Sets array of all "externalCustDetail" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setExternalCustDetailArray(com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail[] externalCustDetailArray)
                      {
                        check_orphaned();
                        arraySetterHelper(externalCustDetailArray, EXTERNALCUSTDETAIL$10);
                      }
                      
                      /**
                       * Sets ith "externalCustDetail" element
                       */
                      public void setExternalCustDetailArray(int i, com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail externalCustDetail)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().find_element_user(EXTERNALCUSTDETAIL$10, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(externalCustDetail);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail insertNewExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().insert_element_user(EXTERNALCUSTDETAIL$10, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "externalCustDetail" element
                       */
                      public com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail addNewExternalCustDetail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail target = null;
                          target = (com.stanchart.customer.ExternalCustDetailDocument.ExternalCustDetail)get_store().add_element_user(EXTERNALCUSTDETAIL$10);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "externalCustDetail" element
                       */
                      public void removeExternalCustDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(EXTERNALCUSTDETAIL$10, i);
                        }
                      }
                      
                      /**
                       * Gets array of all "accountDetail" elements
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail[] getAccountDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          java.util.List targetList = new java.util.ArrayList();
                          get_store().find_all_element_users(ACCOUNTDETAIL$12, targetList);
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail[] result = new com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail[targetList.size()];
                          targetList.toArray(result);
                          return result;
                        }
                      }
                      
                      /**
                       * Gets ith "accountDetail" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail getAccountDetailArray(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail)get_store().find_element_user(ACCOUNTDETAIL$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          return target;
                        }
                      }
                      
                      /**
                       * Returns number of "accountDetail" element
                       */
                      public int sizeOfAccountDetailArray()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(ACCOUNTDETAIL$12);
                        }
                      }
                      
                      /**
                       * Sets array of all "accountDetail" element  WARNING: This method is not atomicaly synchronized.
                       */
                      public void setAccountDetailArray(com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail[] accountDetailArray)
                      {
                        check_orphaned();
                        arraySetterHelper(accountDetailArray, ACCOUNTDETAIL$12);
                      }
                      
                      /**
                       * Sets ith "accountDetail" element
                       */
                      public void setAccountDetailArray(int i, com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail accountDetail)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail)get_store().find_element_user(ACCOUNTDETAIL$12, i);
                          if (target == null)
                          {
                            throw new IndexOutOfBoundsException();
                          }
                          target.set(accountDetail);
                        }
                      }
                      
                      /**
                       * Inserts and returns a new empty value (as xml) as the ith "accountDetail" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail insertNewAccountDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail)get_store().insert_element_user(ACCOUNTDETAIL$12, i);
                          return target;
                        }
                      }
                      
                      /**
                       * Appends and returns a new empty value (as xml) as the last "accountDetail" element
                       */
                      public com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail addNewAccountDetail()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail target = null;
                          target = (com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail)get_store().add_element_user(ACCOUNTDETAIL$12);
                          return target;
                        }
                      }
                      
                      /**
                       * Removes the ith "accountDetail" element
                       */
                      public void removeAccountDetail(int i)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(ACCOUNTDETAIL$12, i);
                        }
                      }
                      
                      /**
                       * Gets the "updateStatusIndicator" element
                       */
                      public java.lang.String getUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "updateStatusIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "updateStatusIndicator" element
                       */
                      public boolean isSetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(UPDATESTATUSINDICATOR$14) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "updateStatusIndicator" element
                       */
                      public void setUpdateStatusIndicator(java.lang.String updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATESTATUSINDICATOR$14);
                          }
                          target.setStringValue(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "updateStatusIndicator" element
                       */
                      public void xsetUpdateStatusIndicator(org.apache.xmlbeans.XmlString updateStatusIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(UPDATESTATUSINDICATOR$14, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(UPDATESTATUSINDICATOR$14);
                          }
                          target.set(updateStatusIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "updateStatusIndicator" element
                       */
                      public void unsetUpdateStatusIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(UPDATESTATUSINDICATOR$14, 0);
                        }
                      }
                      
                      /**
                       * Gets the "changeIndicator" element
                       */
                      public java.lang.String getChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            return null;
                          }
                          return target.getStringValue();
                        }
                      }
                      
                      /**
                       * Gets (as xml) the "changeIndicator" element
                       */
                      public org.apache.xmlbeans.XmlString xgetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          return target;
                        }
                      }
                      
                      /**
                       * True if has "changeIndicator" element
                       */
                      public boolean isSetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          return get_store().count_elements(CHANGEINDICATOR$16) != 0;
                        }
                      }
                      
                      /**
                       * Sets the "changeIndicator" element
                       */
                      public void setChangeIndicator(java.lang.String changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.SimpleValue target = null;
                          target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CHANGEINDICATOR$16);
                          }
                          target.setStringValue(changeIndicator);
                        }
                      }
                      
                      /**
                       * Sets (as xml) the "changeIndicator" element
                       */
                      public void xsetChangeIndicator(org.apache.xmlbeans.XmlString changeIndicator)
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          org.apache.xmlbeans.XmlString target = null;
                          target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CHANGEINDICATOR$16, 0);
                          if (target == null)
                          {
                            target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CHANGEINDICATOR$16);
                          }
                          target.set(changeIndicator);
                        }
                      }
                      
                      /**
                       * Unsets the "changeIndicator" element
                       */
                      public void unsetChangeIndicator()
                      {
                        synchronized (monitor())
                        {
                          check_orphaned();
                          get_store().remove_element(CHANGEINDICATOR$16, 0);
                        }
                      }
                      /**
                       * An XML accountDetail(@).
                       *
                       * This is a complex type.
                       */
                      public static class AccountDetailImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.stanchart.customer.SCIMessagesDocument.SCIMessages.Message.LegalEntity.SubProfileDetails.SubProfileSystemXRef.AccountDetail
                      {
                        private static final long serialVersionUID = 1L;
                        
                        public AccountDetailImpl(org.apache.xmlbeans.SchemaType sType)
                        {
                          super(sType);
                        }
                        
                        private static final javax.xml.namespace.QName ACCOUNTNUMBER$0 = 
                          new javax.xml.namespace.QName("", "accountNumber");
                        private static final javax.xml.namespace.QName ACCOUNTSTATUS$2 = 
                          new javax.xml.namespace.QName("", "accountStatus");
                        
                        
                        /**
                         * Gets the "accountNumber" element
                         */
                        public java.lang.String getAccountNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ACCOUNTNUMBER$0, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "accountNumber" element
                         */
                        public org.apache.xmlbeans.XmlString xgetAccountNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ACCOUNTNUMBER$0, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "accountNumber" element
                         */
                        public boolean isSetAccountNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ACCOUNTNUMBER$0) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "accountNumber" element
                         */
                        public void setAccountNumber(java.lang.String accountNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ACCOUNTNUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ACCOUNTNUMBER$0);
                            }
                            target.setStringValue(accountNumber);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "accountNumber" element
                         */
                        public void xsetAccountNumber(org.apache.xmlbeans.XmlString accountNumber)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ACCOUNTNUMBER$0, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ACCOUNTNUMBER$0);
                            }
                            target.set(accountNumber);
                          }
                        }
                        
                        /**
                         * Unsets the "accountNumber" element
                         */
                        public void unsetAccountNumber()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ACCOUNTNUMBER$0, 0);
                          }
                        }
                        
                        /**
                         * Gets the "accountStatus" element
                         */
                        public java.lang.String getAccountStatus()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ACCOUNTSTATUS$2, 0);
                            if (target == null)
                            {
                              return null;
                            }
                            return target.getStringValue();
                          }
                        }
                        
                        /**
                         * Gets (as xml) the "accountStatus" element
                         */
                        public org.apache.xmlbeans.XmlString xgetAccountStatus()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ACCOUNTSTATUS$2, 0);
                            return target;
                          }
                        }
                        
                        /**
                         * True if has "accountStatus" element
                         */
                        public boolean isSetAccountStatus()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            return get_store().count_elements(ACCOUNTSTATUS$2) != 0;
                          }
                        }
                        
                        /**
                         * Sets the "accountStatus" element
                         */
                        public void setAccountStatus(java.lang.String accountStatus)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.SimpleValue target = null;
                            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ACCOUNTSTATUS$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ACCOUNTSTATUS$2);
                            }
                            target.setStringValue(accountStatus);
                          }
                        }
                        
                        /**
                         * Sets (as xml) the "accountStatus" element
                         */
                        public void xsetAccountStatus(org.apache.xmlbeans.XmlString accountStatus)
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            org.apache.xmlbeans.XmlString target = null;
                            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ACCOUNTSTATUS$2, 0);
                            if (target == null)
                            {
                              target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ACCOUNTSTATUS$2);
                            }
                            target.set(accountStatus);
                          }
                        }
                        
                        /**
                         * Unsets the "accountStatus" element
                         */
                        public void unsetAccountStatus()
                        {
                          synchronized (monitor())
                          {
                            check_orphaned();
                            get_store().remove_element(ACCOUNTSTATUS$2, 0);
                          }
                        }
                      }
                    }
                }
            }
        }
    }
}
