
Steps:
1) Set the environment variable XMLBEANS_HOME to extracted XMLBean API directory.
2) Convert a raw XML file into XSD. 
	>inst2xsd -design ss -simple-content-types string -enumerations never -outPrefix le le.xml
3) Generate java beans from XSD. 
	>scomp -src ./src -d ./bin -out le.jar -compiler "C:\Program Files\Java\jdk1.5.0_12\bin\javac" -javasource 1.5 le0.xsd
4) Use the generated jar file or source files to write or read xml data.


----------
#set XMLBEANS_HOME=C:\zsoft\xmlbeans-2.5.0
set JAVA_HOME=C:\Program Files\Java\jdk1.5.0_09
set PATH=C:\Program Files\Java\jdk1.5.0_09\bin;C:\zsoft\xmlbeans-2.5.0\bin;%PATH%


inst2xsd -design ss -simple-content-types string -enumerations never -outPrefix le le.xml
scomp -src ./src -d ./bin -out le.jar -compiler "C:\Program Files\Java\jdk1.5.0_09\bin\javac" -javasource 1.5 le0.xsd
----------
General Notes:
-------------------------------------------------------------------------------
-->Havig User Defined Package Name:
Add/Edit the "xmlns" attribute of the root element in XML Instance file.
e.g:
If you need to have the packege name as "atlas.pubsub.le" for the generated java beans then assign "http://le.pubsub.atlas" to xmlns attribute.

	<atlasMessage xmlns="http://le.pubsub.atlas" xmlns:xs="http://www.w3.org/2001/XMLSchema">

You can see the "targetNamespace" attribute value as "http://le.pubsub.atlas" in XSD (Generated by inst2xsd exe)
	<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://le.pubsub.atlas" xmlns:xs="http://www.w3.org/2001/XMLSchema">

When you generate the jar file using scomp the package name will be "atlas.pubsub.le".

-------------------------------------------------------------------------------