{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\froman\fcharset0 Times New Roman;}}
{\colortbl ;\red0\green0\blue0;\red128\green0\blue0;\red0\green0\blue255;\red0\green0\blue128;\red128\green0\blue128;\red255\green255\blue0;\red255\green255\blue255;}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\ul\b\f0\fs24 PASSING PARAMETERS\ulnone\b0\fs20\par
\par
\trowd\trgaph45\trbrdrt\brdrdb\brdrw5 \trbrdrb\brdrdb\brdrw5 \trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\f1 html>\cf0\line\line\cf1 <head>\cf0\line\cf1 <title>New Page \cf2 1\cf1 </title>\cf0\line\cf1 </head>\cf0\line\line\cf1 <body>\cf0\line\line\cf1 <h2>Login</h2>\cf0\line\cf1 <p>Please enter your username and password</p>\cf0\line\cf1 <form method=\cf3 "GET" \cf1 action=\cf3 "/htmlform/LoginServlet"\cf1 >\cf0\line\cf1 <p> Username <input type=\cf3 "text" \cf1 name=\cf3 "username" \cf1 size=\cf3 "20"\cf1 ></p>\cf0\line\cf1 <p> Password <input type=\cf3 "text" \cf1 name=\cf3 "password" \cf1 size=\cf3 "20"\cf1 ></p>\cf0\line\cf1 <p><input type=\cf3 "submit" \cf1 value=\cf3 "Submit" \cf1 name=\cf3 "B1"\cf1 ></p>\cf0\line\cf1 </form>\cf0\line\cf1 <p>&nbsp;</p>\cf0\line\line\cf1 </body>\cf0\line\line\cf1 </html>\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\b LoginServlet.java\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf5\b\fs20 import \cf1\b0 java.io.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.http.*;\cf0\line\line\cf5\b public class \cf1\b0 LoginServlet \cf5\b extends \cf1\b0 HttpServlet\{\cf0\line\cf5\b public void \cf1\b0 doGet(HttpServletRequest request, HttpServletResponse response)\cf5\b\line throws \cf1\b0 ServletException, IOException \{\cf0\line\cf1 response.setContentType(\cf3 "text/html"\cf1 );\cf0\line\cf1 PrintWriter out = response.getWriter();\cf0\line\cf1 String name = request.getParameter(\cf3 "username"\cf1 );\cf0\line\cf1 String pass = request.getParameter(\cf3 "password"\cf1 );\cf0\line\cf1 out.println(\cf3 "<html>"\cf1 );\cf0\line\cf1 out.println(\cf3 "<body>"\cf1 );\cf0\line\cf1 out.println(\cf3 "Thanks Mr." \cf1 + \cf3 " " \cf1 + name + \cf3 " " \cf1 + \cf3 "for visiting roseindia<br>" \cf1 );\cf0\line\cf1 out.println(\cf3 "Now you can see your password : " \cf1 + \cf3 " " \cf1 + pass + \cf3 "<br>"\cf1 );\cf0\line\cf1 out.println(\cf3 "</body></html>"\cf1 );\cf0\line\cf1\}\cf0\line\cf1\}\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\b web.xml file for this program:\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\fs20 <?xml version=\cf3 "1.0" \cf1 encoding=\cf3 "ISO-8859-1"\cf1 ?>\cf0\line\cf1 <!--<!DOCTYPE web-app\cf0\line\cf1 PUBLIC \cf3 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"\cf0\line\cf3 "http://{\field{\*\fldinst{HYPERLINK "http://www.roseindia.net/servlets/PrintingNameUsingHtmlForm.shtml" \\\\l ""}}{\fldrslt{\ul java}}}\ulnone\f1\fs20 .sun.com/dtd/web-app_2_3.dtd"\cf1 > -->\cf0\line\line\cf1 <web-app>\cf0\line\cf1 <servlet>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <servlet-\cf5\b class\cf1\b0 >LoginServlet</servlet-\cf5\b class\cf1\b0 >\cf0\line\cf1 </servlet>\cf0\line\cf1 <servlet-mapping>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <url-pattern>/LoginServlet</url-pattern>\cf0\line\cf1 </servlet-mapping>\cf0\line\cf1 </web-app>\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\ul\b Multiple values for a single parameter\par
\ulnone\b0 In our program it may be that we may have multiples values for a single parameter like in checkboxes. We are going to make one program over it.\line To make such a servlet which we have made one html form from where the values will be passed to the controller. In this program we have used the checkbox which will have the same name but with different values. We have one more button submit, on pressing this button the request will be forwarded. \cf0\par
\cf4 Now in the servlet that is working like a controller will retrieve the values we have entered in the html form by the method \b getParameterValues()\b0  which returns the \i array\i0  of \b String\b0 . At last to retrieve all the values from the array use the \b for\b0  loop. The output will be displayed to you by the \b PrintWriter\b0  object. \cf0\par
\cf4\b The code of the program is given below:\cf0\b0  \par
\cf4\b Index.html\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\fs20 <!DOCTYPE HTML PUBLIC \cf3 "-//W3C//DTD HTML 4.01 Transitional//EN"\cf1 >\cf0\line\line\cf1 <html>\cf0\line\cf1 <head>\cf0\line\cf1 <title>Insert title here</title>\cf0\line\cf1 </head>\cf0\line\cf1 <body>\cf0\line\cf1 <form method = \cf3 "post" \cf1 action = \cf3 "/GetParameterServlet/GetParameterValues"\cf1 >\cf0\line\cf1 <p>Which of the whisky you like most</p>\cf0\line\cf1 <input type = \cf3 "checkbox" \cf1 name =\cf3 "whisky" \cf1 value = \cf3 "RoyalChallenge"\cf1 >RoyalChallenge.<br>\cf0\line\cf1 <input type = \cf3 "checkbox" \cf1 name =\cf3 "whisky" \cf1 value = \cf3 "RoyalStag"\cf1 >RoyalStag.<br>\cf0\line\cf1 <input type = \cf3 "checkbox" \cf1 name =\cf3 "whisky" \cf1 value = \cf3 "Bagpiper"\cf1 >Bagpiper.<br>\cf0\line\cf1 <input type =\cf3 "submit" \cf1 name= \cf3 "submit"\cf1 >\cf0\line\cf1 </form>\cf0\line\cf1 </body>\cf0\line\cf1 </html>\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\b GetParameterValues.java\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf5\b\fs20 import \cf1\b0 java.io.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.http.*;\cf0\line\line\cf5\b public class \cf1\b0 GetParameterValues \cf5\b extends \cf1\b0 HttpServlet\{\cf0\line\cf5\b protected void \cf1\b0 doPost(HttpServletRequest request, HttpServletResponse response)\cf5\b\line throws \cf1\b0 ServletException, IOException \{\cf0\line\cf1 response.setContentType(\cf3 "text/html"\cf1 );\cf0\line\cf1 PrintWriter pw = response.getWriter();\cf0\line\cf1 String[] whisky = request.getParameterValues(\cf3 "whisky"\cf1 );\cf0\line\cf5\b for\cf1\b0 (\cf5\b int \cf1\b0 i=\cf2 0\cf1 ; i<whisky.length; i++)\{\cf0\line\cf1 pw.println(\cf3 "<br>whisky : " \cf1 + whisky[i]);\cf0\line\cf1\}\cf0\line\cf1\}\cf0\line\cf1\}\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\b web.xml file for this program:\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\fs20 <?xml version=\cf3 "1.0" \cf1 encoding=\cf3 "ISO-8859-1"\cf1 ?>\cf0\line\cf1 <!--<!DOCTYPE web-app\cf0\line\cf1 PUBLIC \cf3 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"\cf0\line\cf3 "http://{\field{\*\fldinst{HYPERLINK "http://www.roseindia.net/servlets/GetParameterValues.shtml" \\\\l ""}}{\fldrslt{\ul java}}}\ulnone\f1\fs20 .sun.com/dtd/web-app_2_3.dtd"\cf1 > -->\cf0\line\line\cf1 <web-app>\cf0\line\cf1 <servlet>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <servlet-\cf5\b class\cf1\b0 >GetParameterValues</servlet-\cf5\b class\cf1\b0 >\cf0\line\cf1 </servlet>\cf0\line\cf1 <servlet-mapping>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <url-pattern>/GetParameterValues</url-pattern>\cf0\line\cf1 </servlet-mapping>\cf0\line\cf1 </web-app>\cf0\fs24  \cell\row\pard\sb100\sa100\ul\b\par
SEND REDIRECT\par
\cf4\ulnone\b0 In this example we are going to make one html in which we will submit the user name and his password. The controller will check if the password entered by the user is correct or not. If the password entered by the user is correct then the servlet will redirect the request to the other servlet which will handle the request. If the password entered by the user is wrong then the request will be forwarded to the html form.\cf0\par
\cf4\b The code of the example is given below:\cf0\b0\par
\cf4\b html file for this program:\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\fs20 <html>\cf0\line\line\cf1 <head>\cf0\line\cf1 <title>New Page \cf2 1\cf1 </title>\cf0\line\cf1 </head>\cf0\line\line\cf1 <body>\cf0\line\line\cf1 <form method=\cf3 "POST" \cf1 action=\cf3 "/SendRedirect/SendRedirectServlet"\cf1 >\cf0\line\cf1 <p>Enter your name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\line <input type=\cf3 "text" \cf1 name=\cf3 "username" \cf1 size=\cf3 "20"\cf1 ></p>\cf0\line\cf1 <p>Enter your password&nbsp; <input type=\cf3 "text" \cf1 name=\cf3 "password" \cf1 size=\cf3 "20"\cf1 ></p>\cf0\line\cf1 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\line &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\line &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\cf0\line\cf1 <input type=\cf3 "submit" \cf1 value=\cf3 "Submit" \cf1 name=\cf3 "B1"\cf1 ></p>\cf0\line\cf1 </form>\cf0\line\line\cf1 </body>\cf0\line\line\cf1 </html>\cf0\fs24  \cell\row\pard\sb100\sa100\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf5\b\fs20 import \cf1\b0{\field{\*\fldinst{HYPERLINK "http://www.roseindia.net/servlets/SendRedirectToHtmlOrJspPage.shtml" \\\\l ""}}{\fldrslt{\cf3\ul java}}}\cf1\ulnone\f1\fs20 .io.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.http.*;\cf0\line\line\cf5\b public class \cf1\b0 SendRedirectServlet \cf5\b extends \cf1\b0 HttpServlet\{\cf0\line\cf5\b protected void \cf1\b0 doPost(HttpServletRequest request, HttpServletResponse response)\line\cf5\b throws \cf1\b0 ServletException, IOException \{\cf0\line\cf1 response.setContentType(\cf3 "text/html"\cf1 );\cf0\line\cf1 PrintWriter pw = response.getWriter();\cf0\line\cf1 String name = request.getParameter(\cf3 "username"\cf1 );\cf0\line\cf1 String password = request.getParameter(\cf3 "password"\cf1 );\cf0\line\cf5\b if\cf1\b0 (name.equals(\cf3 "James"\cf1 )&& password.equals(\cf3 "abc"\cf1 ))\{\cf0\line\cf1 response.sendRedirect(\cf3 "/SendRedirect/ValidUserServlet"\cf1 );\cf0\line\cf1\}\cf0\line\cf5\b else\cf1\b0\{\cf0\line\cf1 pw.println(\cf3 "u r not a valid user"\cf1 );\cf0\line\cf1\}\cf0\line\cf1\}\cf0\line\cf1\}\cf0\line\line\fs24\cell\row\pard\sb100\sa100\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf5\b\fs20 import \cf1\b0 java.io.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.*;\cf0\line\cf5\b import \cf1\b0 javax.servlet.http.*;\cf0\line\line\cf5\b public class \cf1\b0 ValidUserServlet \cf5\b extends \cf1\b0 HttpServlet\{\cf0\line\cf5\b protected void \cf1\b0 doGet(HttpServletRequest request, HttpServletResponse response)\line\cf5\b throws \cf1\b0 ServletException, IOException \{\cf0\line\cf1 PrintWriter pw = response.getWriter();\cf0\line\cf1 pw.println(\cf3 "Welcome to roseindia.net " \cf1 + \cf3 " "\cf1 );\cf0\line\cf1 pw.println(\cf3 "how are you"\cf1 );\cf0\line\cf1\}\cf0\line\cf1\}\cf0\fs24  \cell\row\pard\sb100\sa100\cf4\b web.xml file for this program:\cf0\b0\par
\trowd\trgaph45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clcfpat7\clcbpat6\cellx9360\pard\intbl\sb100\sa100\cf1\fs20 <?xml version=\cf3 "1.0" \cf1 encoding=\cf3 "ISO-8859-1"\cf1 ?>\cf0\line\cf1 <!DOCTYPE web-app\cf0\line\cf1 PUBLIC \cf3 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"\cf0\line\cf3 "http://java.sun.com/dtd/web-app_2_3.dtd"\cf1 >\cf0\line\line\cf1 <web-app>\cf0\line\cf1 <servlet>\cf0\line\cf1 <servlet-name>Zulfiqar</servlet-name>\cf0\line\cf1 <servlet-\cf5\b class\cf1\b0 >SendRedirectServlet</servlet-\cf5\b class\cf1\b0 >\cf0\line\cf1 </servlet>\cf0\line\cf1 <servlet-mapping>\cf0\line\cf1 <servlet-name>Zulfiqar</servlet-name>\cf0\line\cf1 <url-pattern>/SendRedirectServlet</url-pattern>\cf0\line\cf1 </servlet-mapping>\cf0\line\cf1 <servlet>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <servlet-\cf5\b class\cf1\b0 >ValidUserServlet</servlet-\cf5\b class\cf1\b0 >\cf0\line\cf1 </servlet>\cf0\line\cf1 <servlet-mapping>\cf0\line\cf1 <servlet-name>Hello</servlet-name>\cf0\line\cf1 <url-pattern>/ValidUserServlet</url-pattern>\cf0\line\cf1 </servlet-mapping>\cf0\line\cf1 </web-app>\cf0\fs24  \cell\row\pard\sb100\sa100\par
\ul\b SESSION TRACKING\par
\cf4\ulnone\b0 In session management client first make a request for any servlet or any page, the container receives the request and generate a unique session ID and gives it back to the client along with the response. This ID gets stores on the client machine. Thereafter when the client request again sends a request to the server then it also sends the session Id with the request. There the container sees the Id and sends back the request. \cf0\par
\cf4 Session Tracking can be done in three ways:\cf0\par
\pard\fi-360\li720\sb100\sa100\tx720\cf4\b Hidden Form Fields:\b0  This is one of the way to support the session tracking. As we know by the name, that in this fields are added to an HTML form which are not displayed in the client's request. The hidden form field are sent back to the server when the form is submitted.\cf0  \cf4 In hidden form fields the html entry will be like this : <input type ="hidden" name = "name" value="">. This means that when you submit the form, the specified name and value will be get included in get or post method. In this session ID information would be embedded within the form as a hidden field and submitted with the Http POST command.\cf0  \par
\cf4\b URL Rewriting: \b0 This is another way to support the session tracking.\cf0  \cf4\b URLRewriting\b0  can be used in place where we don't want to use cookies. It is used to maintain the session. Whenever the browser sends a request then it is always interpreted as a new request because http protocol is a stateless protocol as it is not persistent. Whenever we want that out request object to stay alive till we decide to end the request object then, there we use the concept of session tracking. In session tracking firstly a session object is created when the first request goes to the server. Then server creates a token which will be used to maintain the session. The token is transmitted to the client by the response object and gets stored on the client machine. By default the server creates a cookie and the cookie get stored on the client machine.\cf0  \par
\cf4\b Cookies: \b0 When cookie based session management is used, a token is generated which contains user's information, is sent to the browser by the server. The cookie is sent back to the server when the user sends a new request. By this cookie, the server is able to identify the user. In this way the session is maintained. Cookie is nothing but a name- value pair, which is stored on the client machine. By default the cookie is implemented in most of the browsers. If we want then we can also disable the cookie. For {\field{\*\fldinst{HYPERLINK "http://www.roseindia.net/servlets/session-tracking.shtml" \\\\l ""}}{\fldrslt{\cf3\ul security}}}\cf4\ulnone\f1\fs24  reasons, cookie based session management uses two types of cookies.\cf0  \par
\pard\sb100\sa100\par
\par
\pard\f0\fs20\par
}
 